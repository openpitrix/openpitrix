// Code generated by protoc-gen-go. DO NOT EDIT.
// source: runtime.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RuntimeLabel struct {
	RuntimeLabelId       *wrappers.StringValue `protobuf:"bytes,1,opt,name=runtime_label_id,json=runtimeLabelId,proto3" json:"runtime_label_id,omitempty"`
	RuntimeId            *wrappers.StringValue `protobuf:"bytes,2,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	LabelKey             *wrappers.StringValue `protobuf:"bytes,3,opt,name=label_key,json=labelKey,proto3" json:"label_key,omitempty"`
	LabelValue           *wrappers.StringValue `protobuf:"bytes,4,opt,name=label_value,json=labelValue,proto3" json:"label_value,omitempty"`
	CreateTime           *timestamp.Timestamp  `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RuntimeLabel) Reset()         { *m = RuntimeLabel{} }
func (m *RuntimeLabel) String() string { return proto.CompactTextString(m) }
func (*RuntimeLabel) ProtoMessage()    {}
func (*RuntimeLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_e964bf400255e86c, []int{0}
}
func (m *RuntimeLabel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuntimeLabel.Unmarshal(m, b)
}
func (m *RuntimeLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuntimeLabel.Marshal(b, m, deterministic)
}
func (dst *RuntimeLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeLabel.Merge(dst, src)
}
func (m *RuntimeLabel) XXX_Size() int {
	return xxx_messageInfo_RuntimeLabel.Size(m)
}
func (m *RuntimeLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeLabel.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeLabel proto.InternalMessageInfo

func (m *RuntimeLabel) GetRuntimeLabelId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeLabelId
	}
	return nil
}

func (m *RuntimeLabel) GetRuntimeId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *RuntimeLabel) GetLabelKey() *wrappers.StringValue {
	if m != nil {
		return m.LabelKey
	}
	return nil
}

func (m *RuntimeLabel) GetLabelValue() *wrappers.StringValue {
	if m != nil {
		return m.LabelValue
	}
	return nil
}

func (m *RuntimeLabel) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

type Runtime struct {
	RuntimeId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	Name                 *wrappers.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          *wrappers.StringValue `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Provider             *wrappers.StringValue `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	RuntimeUrl           *wrappers.StringValue `protobuf:"bytes,5,opt,name=runtime_url,json=runtimeUrl,proto3" json:"runtime_url,omitempty"`
	Zone                 *wrappers.StringValue `protobuf:"bytes,6,opt,name=zone,proto3" json:"zone,omitempty"`
	Labels               []*RuntimeLabel       `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty"`
	Owner                *wrappers.StringValue `protobuf:"bytes,8,opt,name=owner,proto3" json:"owner,omitempty"`
	Status               *wrappers.StringValue `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	CreateTime           *timestamp.Timestamp  `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	StatusTime           *timestamp.Timestamp  `protobuf:"bytes,11,opt,name=status_time,json=statusTime,proto3" json:"status_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Runtime) Reset()         { *m = Runtime{} }
func (m *Runtime) String() string { return proto.CompactTextString(m) }
func (*Runtime) ProtoMessage()    {}
func (*Runtime) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_e964bf400255e86c, []int{1}
}
func (m *Runtime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Runtime.Unmarshal(m, b)
}
func (m *Runtime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Runtime.Marshal(b, m, deterministic)
}
func (dst *Runtime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Runtime.Merge(dst, src)
}
func (m *Runtime) XXX_Size() int {
	return xxx_messageInfo_Runtime.Size(m)
}
func (m *Runtime) XXX_DiscardUnknown() {
	xxx_messageInfo_Runtime.DiscardUnknown(m)
}

var xxx_messageInfo_Runtime proto.InternalMessageInfo

func (m *Runtime) GetRuntimeId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *Runtime) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Runtime) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Runtime) GetProvider() *wrappers.StringValue {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *Runtime) GetRuntimeUrl() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeUrl
	}
	return nil
}

func (m *Runtime) GetZone() *wrappers.StringValue {
	if m != nil {
		return m.Zone
	}
	return nil
}

func (m *Runtime) GetLabels() []*RuntimeLabel {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Runtime) GetOwner() *wrappers.StringValue {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *Runtime) GetStatus() *wrappers.StringValue {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Runtime) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Runtime) GetStatusTime() *timestamp.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

type RuntimeDetail struct {
	Runtime              *Runtime              `protobuf:"bytes,1,opt,name=runtime,proto3" json:"runtime,omitempty"`
	RuntimeCredential    *wrappers.StringValue `protobuf:"bytes,2,opt,name=runtime_credential,json=runtimeCredential,proto3" json:"runtime_credential,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RuntimeDetail) Reset()         { *m = RuntimeDetail{} }
func (m *RuntimeDetail) String() string { return proto.CompactTextString(m) }
func (*RuntimeDetail) ProtoMessage()    {}
func (*RuntimeDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_e964bf400255e86c, []int{2}
}
func (m *RuntimeDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuntimeDetail.Unmarshal(m, b)
}
func (m *RuntimeDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuntimeDetail.Marshal(b, m, deterministic)
}
func (dst *RuntimeDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuntimeDetail.Merge(dst, src)
}
func (m *RuntimeDetail) XXX_Size() int {
	return xxx_messageInfo_RuntimeDetail.Size(m)
}
func (m *RuntimeDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_RuntimeDetail.DiscardUnknown(m)
}

var xxx_messageInfo_RuntimeDetail proto.InternalMessageInfo

func (m *RuntimeDetail) GetRuntime() *Runtime {
	if m != nil {
		return m.Runtime
	}
	return nil
}

func (m *RuntimeDetail) GetRuntimeCredential() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeCredential
	}
	return nil
}

type CreateRuntimeRequest struct {
	Name                 *wrappers.StringValue `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          *wrappers.StringValue `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Provider             *wrappers.StringValue `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	RuntimeUrl           *wrappers.StringValue `protobuf:"bytes,5,opt,name=runtime_url,json=runtimeUrl,proto3" json:"runtime_url,omitempty"`
	Zone                 *wrappers.StringValue `protobuf:"bytes,6,opt,name=zone,proto3" json:"zone,omitempty"`
	RuntimeCredential    *wrappers.StringValue `protobuf:"bytes,7,opt,name=runtime_credential,json=runtimeCredential,proto3" json:"runtime_credential,omitempty"`
	Labels               *wrappers.StringValue `protobuf:"bytes,8,opt,name=labels,proto3" json:"labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CreateRuntimeRequest) Reset()         { *m = CreateRuntimeRequest{} }
func (m *CreateRuntimeRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRuntimeRequest) ProtoMessage()    {}
func (*CreateRuntimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_e964bf400255e86c, []int{3}
}
func (m *CreateRuntimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRuntimeRequest.Unmarshal(m, b)
}
func (m *CreateRuntimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRuntimeRequest.Marshal(b, m, deterministic)
}
func (dst *CreateRuntimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRuntimeRequest.Merge(dst, src)
}
func (m *CreateRuntimeRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRuntimeRequest.Size(m)
}
func (m *CreateRuntimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRuntimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRuntimeRequest proto.InternalMessageInfo

func (m *CreateRuntimeRequest) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *CreateRuntimeRequest) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *CreateRuntimeRequest) GetProvider() *wrappers.StringValue {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *CreateRuntimeRequest) GetRuntimeUrl() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeUrl
	}
	return nil
}

func (m *CreateRuntimeRequest) GetZone() *wrappers.StringValue {
	if m != nil {
		return m.Zone
	}
	return nil
}

func (m *CreateRuntimeRequest) GetRuntimeCredential() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeCredential
	}
	return nil
}

func (m *CreateRuntimeRequest) GetLabels() *wrappers.StringValue {
	if m != nil {
		return m.Labels
	}
	return nil
}

type CreateRuntimeResponse struct {
	RuntimeId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CreateRuntimeResponse) Reset()         { *m = CreateRuntimeResponse{} }
func (m *CreateRuntimeResponse) String() string { return proto.CompactTextString(m) }
func (*CreateRuntimeResponse) ProtoMessage()    {}
func (*CreateRuntimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_e964bf400255e86c, []int{4}
}
func (m *CreateRuntimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRuntimeResponse.Unmarshal(m, b)
}
func (m *CreateRuntimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRuntimeResponse.Marshal(b, m, deterministic)
}
func (dst *CreateRuntimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRuntimeResponse.Merge(dst, src)
}
func (m *CreateRuntimeResponse) XXX_Size() int {
	return xxx_messageInfo_CreateRuntimeResponse.Size(m)
}
func (m *CreateRuntimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRuntimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRuntimeResponse proto.InternalMessageInfo

func (m *CreateRuntimeResponse) GetRuntimeId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

type DescribeRuntimesRequest struct {
	RuntimeId            []string              `protobuf:"bytes,1,rep,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	Status               []string              `protobuf:"bytes,2,rep,name=status,proto3" json:"status,omitempty"`
	SearchWord           *wrappers.StringValue `protobuf:"bytes,3,opt,name=search_word,json=searchWord,proto3" json:"search_word,omitempty"`
	Label                *wrappers.StringValue `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	Owner                []string              `protobuf:"bytes,5,rep,name=owner,proto3" json:"owner,omitempty"`
	Limit                uint32                `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               uint32                `protobuf:"varint,7,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DescribeRuntimesRequest) Reset()         { *m = DescribeRuntimesRequest{} }
func (m *DescribeRuntimesRequest) String() string { return proto.CompactTextString(m) }
func (*DescribeRuntimesRequest) ProtoMessage()    {}
func (*DescribeRuntimesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_e964bf400255e86c, []int{5}
}
func (m *DescribeRuntimesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeRuntimesRequest.Unmarshal(m, b)
}
func (m *DescribeRuntimesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeRuntimesRequest.Marshal(b, m, deterministic)
}
func (dst *DescribeRuntimesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeRuntimesRequest.Merge(dst, src)
}
func (m *DescribeRuntimesRequest) XXX_Size() int {
	return xxx_messageInfo_DescribeRuntimesRequest.Size(m)
}
func (m *DescribeRuntimesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeRuntimesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeRuntimesRequest proto.InternalMessageInfo

func (m *DescribeRuntimesRequest) GetRuntimeId() []string {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *DescribeRuntimesRequest) GetStatus() []string {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DescribeRuntimesRequest) GetSearchWord() *wrappers.StringValue {
	if m != nil {
		return m.SearchWord
	}
	return nil
}

func (m *DescribeRuntimesRequest) GetLabel() *wrappers.StringValue {
	if m != nil {
		return m.Label
	}
	return nil
}

func (m *DescribeRuntimesRequest) GetOwner() []string {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *DescribeRuntimesRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *DescribeRuntimesRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type DescribeRuntimesResponse struct {
	TotalCount           uint32     `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	RuntimeSet           []*Runtime `protobuf:"bytes,2,rep,name=runtime_set,json=runtimeSet,proto3" json:"runtime_set,omitempty"`
	ProviderCount        uint32     `protobuf:"varint,3,opt,name=provider_count,json=providerCount,proto3" json:"provider_count,omitempty"`
	LastTwoWeekCount     uint32     `protobuf:"varint,4,opt,name=last_two_week_count,json=lastTwoWeekCount,proto3" json:"last_two_week_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DescribeRuntimesResponse) Reset()         { *m = DescribeRuntimesResponse{} }
func (m *DescribeRuntimesResponse) String() string { return proto.CompactTextString(m) }
func (*DescribeRuntimesResponse) ProtoMessage()    {}
func (*DescribeRuntimesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_e964bf400255e86c, []int{6}
}
func (m *DescribeRuntimesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeRuntimesResponse.Unmarshal(m, b)
}
func (m *DescribeRuntimesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeRuntimesResponse.Marshal(b, m, deterministic)
}
func (dst *DescribeRuntimesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeRuntimesResponse.Merge(dst, src)
}
func (m *DescribeRuntimesResponse) XXX_Size() int {
	return xxx_messageInfo_DescribeRuntimesResponse.Size(m)
}
func (m *DescribeRuntimesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeRuntimesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeRuntimesResponse proto.InternalMessageInfo

func (m *DescribeRuntimesResponse) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *DescribeRuntimesResponse) GetRuntimeSet() []*Runtime {
	if m != nil {
		return m.RuntimeSet
	}
	return nil
}

func (m *DescribeRuntimesResponse) GetProviderCount() uint32 {
	if m != nil {
		return m.ProviderCount
	}
	return 0
}

func (m *DescribeRuntimesResponse) GetLastTwoWeekCount() uint32 {
	if m != nil {
		return m.LastTwoWeekCount
	}
	return 0
}

type DescribeRuntimeDetailsResponse struct {
	TotalCount           uint32           `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	RuntimeDetailSet     []*RuntimeDetail `protobuf:"bytes,2,rep,name=runtime_detail_set,json=runtimeDetailSet,proto3" json:"runtime_detail_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DescribeRuntimeDetailsResponse) Reset()         { *m = DescribeRuntimeDetailsResponse{} }
func (m *DescribeRuntimeDetailsResponse) String() string { return proto.CompactTextString(m) }
func (*DescribeRuntimeDetailsResponse) ProtoMessage()    {}
func (*DescribeRuntimeDetailsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_e964bf400255e86c, []int{7}
}
func (m *DescribeRuntimeDetailsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeRuntimeDetailsResponse.Unmarshal(m, b)
}
func (m *DescribeRuntimeDetailsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeRuntimeDetailsResponse.Marshal(b, m, deterministic)
}
func (dst *DescribeRuntimeDetailsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeRuntimeDetailsResponse.Merge(dst, src)
}
func (m *DescribeRuntimeDetailsResponse) XXX_Size() int {
	return xxx_messageInfo_DescribeRuntimeDetailsResponse.Size(m)
}
func (m *DescribeRuntimeDetailsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeRuntimeDetailsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeRuntimeDetailsResponse proto.InternalMessageInfo

func (m *DescribeRuntimeDetailsResponse) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *DescribeRuntimeDetailsResponse) GetRuntimeDetailSet() []*RuntimeDetail {
	if m != nil {
		return m.RuntimeDetailSet
	}
	return nil
}

type ModifyRuntimeRequest struct {
	RuntimeId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	Name                 *wrappers.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          *wrappers.StringValue `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Labels               *wrappers.StringValue `protobuf:"bytes,4,opt,name=labels,proto3" json:"labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ModifyRuntimeRequest) Reset()         { *m = ModifyRuntimeRequest{} }
func (m *ModifyRuntimeRequest) String() string { return proto.CompactTextString(m) }
func (*ModifyRuntimeRequest) ProtoMessage()    {}
func (*ModifyRuntimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_e964bf400255e86c, []int{8}
}
func (m *ModifyRuntimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModifyRuntimeRequest.Unmarshal(m, b)
}
func (m *ModifyRuntimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModifyRuntimeRequest.Marshal(b, m, deterministic)
}
func (dst *ModifyRuntimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModifyRuntimeRequest.Merge(dst, src)
}
func (m *ModifyRuntimeRequest) XXX_Size() int {
	return xxx_messageInfo_ModifyRuntimeRequest.Size(m)
}
func (m *ModifyRuntimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ModifyRuntimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ModifyRuntimeRequest proto.InternalMessageInfo

func (m *ModifyRuntimeRequest) GetRuntimeId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *ModifyRuntimeRequest) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ModifyRuntimeRequest) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ModifyRuntimeRequest) GetLabels() *wrappers.StringValue {
	if m != nil {
		return m.Labels
	}
	return nil
}

type ModifyRuntimeResponse struct {
	RuntimeId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ModifyRuntimeResponse) Reset()         { *m = ModifyRuntimeResponse{} }
func (m *ModifyRuntimeResponse) String() string { return proto.CompactTextString(m) }
func (*ModifyRuntimeResponse) ProtoMessage()    {}
func (*ModifyRuntimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_e964bf400255e86c, []int{9}
}
func (m *ModifyRuntimeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModifyRuntimeResponse.Unmarshal(m, b)
}
func (m *ModifyRuntimeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModifyRuntimeResponse.Marshal(b, m, deterministic)
}
func (dst *ModifyRuntimeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModifyRuntimeResponse.Merge(dst, src)
}
func (m *ModifyRuntimeResponse) XXX_Size() int {
	return xxx_messageInfo_ModifyRuntimeResponse.Size(m)
}
func (m *ModifyRuntimeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ModifyRuntimeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ModifyRuntimeResponse proto.InternalMessageInfo

func (m *ModifyRuntimeResponse) GetRuntimeId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

type DeleteRuntimesRequest struct {
	RuntimeId            []string `protobuf:"bytes,1,rep,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRuntimesRequest) Reset()         { *m = DeleteRuntimesRequest{} }
func (m *DeleteRuntimesRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRuntimesRequest) ProtoMessage()    {}
func (*DeleteRuntimesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_e964bf400255e86c, []int{10}
}
func (m *DeleteRuntimesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRuntimesRequest.Unmarshal(m, b)
}
func (m *DeleteRuntimesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRuntimesRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteRuntimesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRuntimesRequest.Merge(dst, src)
}
func (m *DeleteRuntimesRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRuntimesRequest.Size(m)
}
func (m *DeleteRuntimesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRuntimesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRuntimesRequest proto.InternalMessageInfo

func (m *DeleteRuntimesRequest) GetRuntimeId() []string {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

type DeleteRuntimesResponse struct {
	RuntimeId            []string `protobuf:"bytes,1,rep,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRuntimesResponse) Reset()         { *m = DeleteRuntimesResponse{} }
func (m *DeleteRuntimesResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteRuntimesResponse) ProtoMessage()    {}
func (*DeleteRuntimesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_e964bf400255e86c, []int{11}
}
func (m *DeleteRuntimesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRuntimesResponse.Unmarshal(m, b)
}
func (m *DeleteRuntimesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRuntimesResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteRuntimesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRuntimesResponse.Merge(dst, src)
}
func (m *DeleteRuntimesResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteRuntimesResponse.Size(m)
}
func (m *DeleteRuntimesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRuntimesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRuntimesResponse proto.InternalMessageInfo

func (m *DeleteRuntimesResponse) GetRuntimeId() []string {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

type DescribeRuntimeProviderZonesRequest struct {
	Provider             *wrappers.StringValue `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	RuntimeUrl           *wrappers.StringValue `protobuf:"bytes,2,opt,name=runtime_url,json=runtimeUrl,proto3" json:"runtime_url,omitempty"`
	RuntimeCredential    *wrappers.StringValue `protobuf:"bytes,3,opt,name=runtime_credential,json=runtimeCredential,proto3" json:"runtime_credential,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DescribeRuntimeProviderZonesRequest) Reset()         { *m = DescribeRuntimeProviderZonesRequest{} }
func (m *DescribeRuntimeProviderZonesRequest) String() string { return proto.CompactTextString(m) }
func (*DescribeRuntimeProviderZonesRequest) ProtoMessage()    {}
func (*DescribeRuntimeProviderZonesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_e964bf400255e86c, []int{12}
}
func (m *DescribeRuntimeProviderZonesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeRuntimeProviderZonesRequest.Unmarshal(m, b)
}
func (m *DescribeRuntimeProviderZonesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeRuntimeProviderZonesRequest.Marshal(b, m, deterministic)
}
func (dst *DescribeRuntimeProviderZonesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeRuntimeProviderZonesRequest.Merge(dst, src)
}
func (m *DescribeRuntimeProviderZonesRequest) XXX_Size() int {
	return xxx_messageInfo_DescribeRuntimeProviderZonesRequest.Size(m)
}
func (m *DescribeRuntimeProviderZonesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeRuntimeProviderZonesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeRuntimeProviderZonesRequest proto.InternalMessageInfo

func (m *DescribeRuntimeProviderZonesRequest) GetProvider() *wrappers.StringValue {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *DescribeRuntimeProviderZonesRequest) GetRuntimeUrl() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeUrl
	}
	return nil
}

func (m *DescribeRuntimeProviderZonesRequest) GetRuntimeCredential() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeCredential
	}
	return nil
}

type DescribeRuntimeProviderZonesResponse struct {
	Provider             *wrappers.StringValue `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Zone                 []string              `protobuf:"bytes,2,rep,name=zone,proto3" json:"zone,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DescribeRuntimeProviderZonesResponse) Reset()         { *m = DescribeRuntimeProviderZonesResponse{} }
func (m *DescribeRuntimeProviderZonesResponse) String() string { return proto.CompactTextString(m) }
func (*DescribeRuntimeProviderZonesResponse) ProtoMessage()    {}
func (*DescribeRuntimeProviderZonesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_runtime_e964bf400255e86c, []int{13}
}
func (m *DescribeRuntimeProviderZonesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeRuntimeProviderZonesResponse.Unmarshal(m, b)
}
func (m *DescribeRuntimeProviderZonesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeRuntimeProviderZonesResponse.Marshal(b, m, deterministic)
}
func (dst *DescribeRuntimeProviderZonesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeRuntimeProviderZonesResponse.Merge(dst, src)
}
func (m *DescribeRuntimeProviderZonesResponse) XXX_Size() int {
	return xxx_messageInfo_DescribeRuntimeProviderZonesResponse.Size(m)
}
func (m *DescribeRuntimeProviderZonesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeRuntimeProviderZonesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeRuntimeProviderZonesResponse proto.InternalMessageInfo

func (m *DescribeRuntimeProviderZonesResponse) GetProvider() *wrappers.StringValue {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *DescribeRuntimeProviderZonesResponse) GetZone() []string {
	if m != nil {
		return m.Zone
	}
	return nil
}

func init() {
	proto.RegisterType((*RuntimeLabel)(nil), "openpitrix.RuntimeLabel")
	proto.RegisterType((*Runtime)(nil), "openpitrix.Runtime")
	proto.RegisterType((*RuntimeDetail)(nil), "openpitrix.RuntimeDetail")
	proto.RegisterType((*CreateRuntimeRequest)(nil), "openpitrix.CreateRuntimeRequest")
	proto.RegisterType((*CreateRuntimeResponse)(nil), "openpitrix.CreateRuntimeResponse")
	proto.RegisterType((*DescribeRuntimesRequest)(nil), "openpitrix.DescribeRuntimesRequest")
	proto.RegisterType((*DescribeRuntimesResponse)(nil), "openpitrix.DescribeRuntimesResponse")
	proto.RegisterType((*DescribeRuntimeDetailsResponse)(nil), "openpitrix.DescribeRuntimeDetailsResponse")
	proto.RegisterType((*ModifyRuntimeRequest)(nil), "openpitrix.ModifyRuntimeRequest")
	proto.RegisterType((*ModifyRuntimeResponse)(nil), "openpitrix.ModifyRuntimeResponse")
	proto.RegisterType((*DeleteRuntimesRequest)(nil), "openpitrix.DeleteRuntimesRequest")
	proto.RegisterType((*DeleteRuntimesResponse)(nil), "openpitrix.DeleteRuntimesResponse")
	proto.RegisterType((*DescribeRuntimeProviderZonesRequest)(nil), "openpitrix.DescribeRuntimeProviderZonesRequest")
	proto.RegisterType((*DescribeRuntimeProviderZonesResponse)(nil), "openpitrix.DescribeRuntimeProviderZonesResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RuntimeManagerClient is the client API for RuntimeManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RuntimeManagerClient interface {
	CreateRuntime(ctx context.Context, in *CreateRuntimeRequest, opts ...grpc.CallOption) (*CreateRuntimeResponse, error)
	DescribeRuntimeDetails(ctx context.Context, in *DescribeRuntimesRequest, opts ...grpc.CallOption) (*DescribeRuntimeDetailsResponse, error)
	DescribeRuntimes(ctx context.Context, in *DescribeRuntimesRequest, opts ...grpc.CallOption) (*DescribeRuntimesResponse, error)
	ModifyRuntime(ctx context.Context, in *ModifyRuntimeRequest, opts ...grpc.CallOption) (*ModifyRuntimeResponse, error)
	DeleteRuntimes(ctx context.Context, in *DeleteRuntimesRequest, opts ...grpc.CallOption) (*DeleteRuntimesResponse, error)
	DescribeRuntimeProviderZones(ctx context.Context, in *DescribeRuntimeProviderZonesRequest, opts ...grpc.CallOption) (*DescribeRuntimeProviderZonesResponse, error)
}

type runtimeManagerClient struct {
	cc *grpc.ClientConn
}

func NewRuntimeManagerClient(cc *grpc.ClientConn) RuntimeManagerClient {
	return &runtimeManagerClient{cc}
}

func (c *runtimeManagerClient) CreateRuntime(ctx context.Context, in *CreateRuntimeRequest, opts ...grpc.CallOption) (*CreateRuntimeResponse, error) {
	out := new(CreateRuntimeResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeManager/CreateRuntime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeManagerClient) DescribeRuntimeDetails(ctx context.Context, in *DescribeRuntimesRequest, opts ...grpc.CallOption) (*DescribeRuntimeDetailsResponse, error) {
	out := new(DescribeRuntimeDetailsResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeManager/DescribeRuntimeDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeManagerClient) DescribeRuntimes(ctx context.Context, in *DescribeRuntimesRequest, opts ...grpc.CallOption) (*DescribeRuntimesResponse, error) {
	out := new(DescribeRuntimesResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeManager/DescribeRuntimes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeManagerClient) ModifyRuntime(ctx context.Context, in *ModifyRuntimeRequest, opts ...grpc.CallOption) (*ModifyRuntimeResponse, error) {
	out := new(ModifyRuntimeResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeManager/ModifyRuntime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeManagerClient) DeleteRuntimes(ctx context.Context, in *DeleteRuntimesRequest, opts ...grpc.CallOption) (*DeleteRuntimesResponse, error) {
	out := new(DeleteRuntimesResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeManager/DeleteRuntimes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeManagerClient) DescribeRuntimeProviderZones(ctx context.Context, in *DescribeRuntimeProviderZonesRequest, opts ...grpc.CallOption) (*DescribeRuntimeProviderZonesResponse, error) {
	out := new(DescribeRuntimeProviderZonesResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.RuntimeManager/DescribeRuntimeProviderZones", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RuntimeManagerServer is the server API for RuntimeManager service.
type RuntimeManagerServer interface {
	CreateRuntime(context.Context, *CreateRuntimeRequest) (*CreateRuntimeResponse, error)
	DescribeRuntimeDetails(context.Context, *DescribeRuntimesRequest) (*DescribeRuntimeDetailsResponse, error)
	DescribeRuntimes(context.Context, *DescribeRuntimesRequest) (*DescribeRuntimesResponse, error)
	ModifyRuntime(context.Context, *ModifyRuntimeRequest) (*ModifyRuntimeResponse, error)
	DeleteRuntimes(context.Context, *DeleteRuntimesRequest) (*DeleteRuntimesResponse, error)
	DescribeRuntimeProviderZones(context.Context, *DescribeRuntimeProviderZonesRequest) (*DescribeRuntimeProviderZonesResponse, error)
}

func RegisterRuntimeManagerServer(s *grpc.Server, srv RuntimeManagerServer) {
	s.RegisterService(&_RuntimeManager_serviceDesc, srv)
}

func _RuntimeManager_CreateRuntime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRuntimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeManagerServer).CreateRuntime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeManager/CreateRuntime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeManagerServer).CreateRuntime(ctx, req.(*CreateRuntimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeManager_DescribeRuntimeDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeRuntimesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeManagerServer).DescribeRuntimeDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeManager/DescribeRuntimeDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeManagerServer).DescribeRuntimeDetails(ctx, req.(*DescribeRuntimesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeManager_DescribeRuntimes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeRuntimesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeManagerServer).DescribeRuntimes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeManager/DescribeRuntimes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeManagerServer).DescribeRuntimes(ctx, req.(*DescribeRuntimesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeManager_ModifyRuntime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyRuntimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeManagerServer).ModifyRuntime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeManager/ModifyRuntime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeManagerServer).ModifyRuntime(ctx, req.(*ModifyRuntimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeManager_DeleteRuntimes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRuntimesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeManagerServer).DeleteRuntimes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeManager/DeleteRuntimes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeManagerServer).DeleteRuntimes(ctx, req.(*DeleteRuntimesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeManager_DescribeRuntimeProviderZones_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeRuntimeProviderZonesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeManagerServer).DescribeRuntimeProviderZones(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeManager/DescribeRuntimeProviderZones",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeManagerServer).DescribeRuntimeProviderZones(ctx, req.(*DescribeRuntimeProviderZonesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RuntimeManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openpitrix.RuntimeManager",
	HandlerType: (*RuntimeManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRuntime",
			Handler:    _RuntimeManager_CreateRuntime_Handler,
		},
		{
			MethodName: "DescribeRuntimeDetails",
			Handler:    _RuntimeManager_DescribeRuntimeDetails_Handler,
		},
		{
			MethodName: "DescribeRuntimes",
			Handler:    _RuntimeManager_DescribeRuntimes_Handler,
		},
		{
			MethodName: "ModifyRuntime",
			Handler:    _RuntimeManager_ModifyRuntime_Handler,
		},
		{
			MethodName: "DeleteRuntimes",
			Handler:    _RuntimeManager_DeleteRuntimes_Handler,
		},
		{
			MethodName: "DescribeRuntimeProviderZones",
			Handler:    _RuntimeManager_DescribeRuntimeProviderZones_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "runtime.proto",
}

func init() { proto.RegisterFile("runtime.proto", fileDescriptor_runtime_e964bf400255e86c) }

var fileDescriptor_runtime_e964bf400255e86c = []byte{
	// 1060 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x56, 0xcf, 0x6f, 0xe3, 0x44,
	0x14, 0x96, 0x93, 0x34, 0x6d, 0x5f, 0x36, 0x21, 0x9d, 0xcd, 0x2e, 0x26, 0x2a, 0xdb, 0xd4, 0xbb,
	0x48, 0xa5, 0xd0, 0xa4, 0x84, 0x15, 0xbf, 0x56, 0xbb, 0x52, 0x69, 0x05, 0x5a, 0x2d, 0x2b, 0x21,
	0xb7, 0xb0, 0xd2, 0x5e, 0xa2, 0x49, 0x3c, 0x0d, 0x56, 0x1d, 0x8f, 0x19, 0x4f, 0x1a, 0xca, 0x09,
	0x21, 0x24, 0x10, 0xdc, 0xca, 0xff, 0xc2, 0x9d, 0x13, 0x12, 0x57, 0x0e, 0xfc, 0x03, 0xdc, 0xf8,
	0x0b, 0x10, 0x17, 0xe4, 0xf9, 0xd1, 0xd8, 0x8e, 0x49, 0x9d, 0x2e, 0x17, 0xf6, 0xd4, 0xda, 0xf3,
	0xbd, 0x37, 0xef, 0xfb, 0xde, 0x7b, 0x9f, 0x03, 0x55, 0x36, 0xf6, 0xb9, 0x3b, 0x22, 0xed, 0x80,
	0x51, 0x4e, 0x11, 0xd0, 0x80, 0xf8, 0x81, 0xcb, 0x99, 0xfb, 0x45, 0xf3, 0xd6, 0x90, 0xd2, 0xa1,
	0x47, 0x3a, 0xe2, 0xa4, 0x3f, 0x3e, 0xee, 0x4c, 0x18, 0x0e, 0x02, 0xc2, 0x42, 0x89, 0x6d, 0x6e,
	0xa4, 0xcf, 0xa3, 0x3c, 0x21, 0xc7, 0xa3, 0x40, 0x01, 0xd6, 0x15, 0x00, 0x07, 0x6e, 0x07, 0xfb,
	0x3e, 0xe5, 0x98, 0xbb, 0xd4, 0xd7, 0xe1, 0xaf, 0x8b, 0x3f, 0x83, 0x9d, 0x21, 0xf1, 0x77, 0xc2,
	0x09, 0x1e, 0x0e, 0x09, 0xeb, 0xd0, 0x40, 0x20, 0x66, 0xd1, 0xd6, 0xaf, 0x05, 0xb8, 0x66, 0xcb,
	0x52, 0x3f, 0xc2, 0x7d, 0xe2, 0xa1, 0x0f, 0xa0, 0xae, 0x4a, 0xef, 0x79, 0xd1, 0x8b, 0x9e, 0xeb,
	0x98, 0x46, 0xcb, 0xd8, 0xaa, 0x74, 0xd7, 0xdb, 0xf2, 0xde, 0xb6, 0x2e, 0xac, 0x7d, 0xc8, 0x99,
	0xeb, 0x0f, 0x3f, 0xc5, 0xde, 0x98, 0xd8, 0x35, 0x16, 0xcb, 0xf2, 0xd0, 0x41, 0xf7, 0x00, 0x74,
	0x1e, 0xd7, 0x31, 0x0b, 0x39, 0x32, 0xac, 0x2a, 0xfc, 0x43, 0x07, 0xbd, 0x0b, 0xab, 0xf2, 0xf2,
	0x13, 0x72, 0x66, 0x16, 0x73, 0xc4, 0xae, 0x08, 0xf8, 0x23, 0x72, 0x86, 0xee, 0x43, 0x45, 0x86,
	0x9e, 0x46, 0x07, 0x66, 0x29, 0x47, 0x30, 0x88, 0x00, 0xf1, 0x3f, 0xba, 0x07, 0x95, 0x01, 0x23,
	0x98, 0x93, 0x5e, 0x54, 0x8a, 0xb9, 0x24, 0xc2, 0x9b, 0x33, 0xe1, 0x47, 0xba, 0x25, 0x36, 0x48,
	0x78, 0xf4, 0xc2, 0xfa, 0xab, 0x04, 0xcb, 0x4a, 0xcc, 0x14, 0x7f, 0x63, 0x31, 0xfe, 0xbb, 0x50,
	0xf2, 0xf1, 0x88, 0xe4, 0x92, 0x4d, 0x20, 0xd1, 0x03, 0xa8, 0x38, 0x24, 0x1c, 0x30, 0x57, 0x74,
	0x3a, 0x97, 0x66, 0xf1, 0x00, 0xf4, 0x0e, 0xac, 0x04, 0x8c, 0x9e, 0xba, 0x0e, 0x61, 0xb9, 0x34,
	0xbb, 0x40, 0x47, 0x82, 0x6b, 0xa2, 0x63, 0xe6, 0x29, 0xc5, 0x2e, 0x11, 0x5c, 0x05, 0x7c, 0xc2,
	0xbc, 0x88, 0xea, 0x97, 0xd4, 0x27, 0x66, 0x39, 0x0f, 0xd5, 0x08, 0x89, 0x76, 0xa1, 0x2c, 0x1a,
	0x16, 0x9a, 0xcb, 0xad, 0xe2, 0x56, 0xa5, 0x6b, 0xb6, 0xa7, 0xcb, 0xd5, 0x8e, 0xcf, 0xb2, 0xad,
	0x70, 0xa8, 0x0b, 0x4b, 0x74, 0xe2, 0x13, 0x66, 0xae, 0xe4, 0xb8, 0x44, 0x42, 0xd1, 0x5d, 0x28,
	0x87, 0x1c, 0xf3, 0x71, 0x68, 0xae, 0xe6, 0x08, 0x52, 0xd8, 0xf4, 0xf8, 0xc0, 0x22, 0xe3, 0x13,
	0x05, 0xcb, 0x34, 0x32, 0xb8, 0x72, 0x79, 0xb0, 0x84, 0x8b, 0xd9, 0xfb, 0xc1, 0x80, 0xaa, 0x22,
	0x7f, 0x40, 0x38, 0x76, 0x3d, 0xb4, 0x03, 0xcb, 0x4a, 0x67, 0x35, 0x7e, 0xd7, 0x33, 0x84, 0xb2,
	0x35, 0x06, 0x3d, 0x02, 0xa4, 0xfb, 0x38, 0x60, 0xc4, 0x21, 0x3e, 0x77, 0xb1, 0x97, 0x6b, 0x02,
	0xd7, 0x54, 0xdc, 0xfe, 0x45, 0x98, 0xf5, 0x53, 0x11, 0x1a, 0xfb, 0x82, 0x99, 0xbe, 0x87, 0x7c,
	0x3e, 0x26, 0x21, 0xbf, 0x98, 0x6c, 0xe3, 0xaa, 0x93, 0x5d, 0x78, 0x8e, 0x27, 0x3b, 0xbb, 0x05,
	0xcb, 0x57, 0x6a, 0x41, 0x34, 0xc0, 0x6a, 0x4d, 0xf2, 0x4c, 0xbd, 0xc2, 0x5a, 0x47, 0x70, 0x23,
	0xd5, 0xb7, 0x30, 0xa0, 0x7e, 0xf8, 0x6c, 0x7e, 0x66, 0x7d, 0x5b, 0x80, 0x17, 0x0f, 0x44, 0x4f,
	0xfa, 0x3a, 0x71, 0xa8, 0x27, 0xe2, 0xe5, 0x54, 0xe2, 0xe2, 0xd6, 0x6a, 0xdc, 0x0a, 0x6f, 0x5e,
	0xec, 0x61, 0x41, 0x1c, 0xe9, 0x4d, 0xbb, 0x0f, 0x95, 0x90, 0x60, 0x36, 0xf8, 0xac, 0x37, 0xa1,
	0xcc, 0xc9, 0x65, 0x78, 0x20, 0x03, 0x9e, 0x50, 0xe6, 0x44, 0x96, 0x20, 0x18, 0xe7, 0x1a, 0x09,
	0x09, 0x45, 0x0d, 0x6d, 0x23, 0x4b, 0xa2, 0x12, 0x65, 0x14, 0x0d, 0x58, 0xf2, 0xdc, 0x91, 0xcb,
	0x45, 0x9f, 0xab, 0xb6, 0x7c, 0x88, 0xca, 0xa6, 0xc7, 0xc7, 0x21, 0xe1, 0xa2, 0x7d, 0x55, 0x5b,
	0x3d, 0x59, 0xbf, 0x18, 0x60, 0xce, 0x2a, 0xa1, 0x34, 0xde, 0x80, 0x0a, 0xa7, 0x1c, 0x7b, 0xbd,
	0x01, 0x1d, 0xfb, 0x5c, 0x88, 0x5c, 0xb5, 0x41, 0xbc, 0xda, 0x8f, 0xde, 0xa0, 0xbb, 0xd3, 0x89,
	0x8c, 0x52, 0x17, 0x84, 0xff, 0x65, 0xae, 0xb5, 0xd6, 0xf4, 0x90, 0x70, 0xf4, 0x0a, 0xd4, 0xf4,
	0x4c, 0xab, 0xcc, 0x45, 0x91, 0xb9, 0xaa, 0xdf, 0xca, 0xe4, 0x3b, 0x70, 0xdd, 0xc3, 0x21, 0xef,
	0xf1, 0x09, 0xed, 0x4d, 0x08, 0x39, 0x51, 0xd8, 0x92, 0xc0, 0xd6, 0xa3, 0xa3, 0xa3, 0x09, 0x7d,
	0x42, 0xc8, 0x89, 0x80, 0x5b, 0xdf, 0x1b, 0x70, 0x2b, 0xc5, 0x44, 0x1a, 0xcf, 0x02, 0x7c, 0x3e,
	0x9c, 0x0e, 0xbc, 0x23, 0x62, 0x63, 0xb4, 0x5e, 0xca, 0xa0, 0x25, 0x2f, 0xb0, 0xf5, 0x2f, 0x14,
	0xf9, 0x78, 0x48, 0xb8, 0xf5, 0xb7, 0x01, 0x8d, 0xc7, 0xd4, 0x71, 0x8f, 0xcf, 0x52, 0x7e, 0xf3,
	0x3f, 0xfb, 0x0c, 0x4f, 0x97, 0xb6, 0xb4, 0xd8, 0xd2, 0xa6, 0xc8, 0xff, 0x17, 0x4b, 0xfb, 0x16,
	0xdc, 0x38, 0x20, 0x1e, 0xe1, 0x0b, 0x6e, 0xac, 0xf5, 0x36, 0xdc, 0x4c, 0xc7, 0xa9, 0x72, 0x2e,
	0x09, 0xfc, 0xd3, 0x80, 0xdb, 0xa9, 0x89, 0xfa, 0x58, 0x4d, 0xe8, 0x53, 0xea, 0x4f, 0xef, 0x8f,
	0x3b, 0xba, 0xf1, 0x2c, 0x8e, 0x5e, 0x58, 0xd0, 0xd1, 0xb3, 0xfd, 0xb9, 0x78, 0xb5, 0x4f, 0x24,
	0x87, 0x3b, 0xf3, 0xc9, 0x2a, 0xd1, 0xae, 0xce, 0x16, 0xa9, 0x0f, 0x90, 0x34, 0x4e, 0xf1, 0x7f,
	0xf7, 0xf7, 0x32, 0xd4, 0xd4, 0x75, 0x8f, 0xb1, 0x8f, 0x87, 0x84, 0xa1, 0xaf, 0x0c, 0xa8, 0x26,
	0x3c, 0x1f, 0xb5, 0xe2, 0xab, 0x97, 0xf5, 0x19, 0x6f, 0x6e, 0xce, 0x41, 0xc8, 0xba, 0xad, 0xed,
	0xf3, 0xbd, 0x3a, 0xaa, 0xc9, 0x9f, 0x37, 0x2d, 0x45, 0xff, 0xeb, 0xdf, 0xfe, 0xf8, 0xb1, 0xb0,
	0x66, 0x5d, 0xeb, 0x9c, 0xbe, 0xd1, 0x51, 0xaf, 0xc2, 0xf7, 0x8c, 0x6d, 0xe4, 0x46, 0x23, 0x93,
	0x65, 0x25, 0xe8, 0x76, 0xfc, 0xa2, 0x7f, 0xf9, 0x84, 0x34, 0xb7, 0xe7, 0x80, 0xd2, 0x9e, 0xf4,
	0x9d, 0x01, 0xf5, 0x74, 0x9e, 0x7c, 0xb7, 0xdc, 0x99, 0x0f, 0x52, 0xb4, 0x5f, 0x3d, 0xdf, 0x43,
	0xa8, 0xee, 0xa8, 0xe3, 0x04, 0xf1, 0x1a, 0x4a, 0x10, 0x17, 0xc2, 0x27, 0xf6, 0x36, 0x29, 0x7c,
	0x96, 0x9f, 0x25, 0x85, 0xcf, 0x5c, 0x7a, 0x25, 0xfc, 0x48, 0x9c, 0x25, 0x85, 0xef, 0xce, 0x08,
	0xff, 0x8d, 0x01, 0xb5, 0xe4, 0xb2, 0xa2, 0xcd, 0x24, 0xcd, 0x0c, 0x03, 0x68, 0x5a, 0xf3, 0x20,
	0xaa, 0x8a, 0xd7, 0xce, 0xf7, 0xd6, 0xd0, 0x0b, 0x8e, 0x38, 0xd4, 0x55, 0x84, 0xb2, 0x8c, 0xed,
	0x99, 0x32, 0x7e, 0x36, 0x60, 0x7d, 0xde, 0x32, 0xa0, 0xce, 0x1c, 0xed, 0xb3, 0x3c, 0xa2, 0xb9,
	0x9b, 0x3f, 0x40, 0x15, 0xfc, 0xe0, 0x7c, 0x6f, 0x13, 0x6d, 0xa4, 0x1b, 0xd7, 0xd2, 0xdb, 0xd4,
	0x8a, 0xd6, 0x47, 0x12, 0x68, 0x20, 0x14, 0x27, 0xd0, 0x11, 0x27, 0xef, 0x97, 0x9e, 0x16, 0x82,
	0x7e, 0xbf, 0x2c, 0x76, 0xf2, 0xcd, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xb8, 0x1e, 0x16, 0x8c,
	0x00, 0x10, 0x00, 0x00,
}
