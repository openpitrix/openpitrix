// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// OpenpitrixAppVersionAudit openpitrix app version audit
// swagger:model openpitrixAppVersionAudit
type OpenpitrixAppVersionAudit struct {

	// id of specific version app
	AppID string `json:"app_id,omitempty"`

	// name of specific version app
	AppName string `json:"app_name,omitempty"`

	// audit message
	Message string `json:"message,omitempty"`

	// user of auditer
	Operator string `json:"operator,omitempty"`

	// operator of auditer eg.[global_admin|developer|business|technical|isv]
	OperatorType string `json:"operator_type,omitempty"`

	// review id
	ReviewID string `json:"review_id,omitempty"`

	// audit status, eg.[draft|submitted|passed|rejected|active|in-review|deleted|suspended]
	Status string `json:"status,omitempty"`

	// record status changed time
	StatusTime strfmt.DateTime `json:"status_time,omitempty"`

	// id of version to audit
	VersionID string `json:"version_id,omitempty"`

	// version name
	VersionName string `json:"version_name,omitempty"`

	// version type
	VersionType string `json:"version_type,omitempty"`
}

// Validate validates this openpitrix app version audit
func (m *OpenpitrixAppVersionAudit) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *OpenpitrixAppVersionAudit) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OpenpitrixAppVersionAudit) UnmarshalBinary(b []byte) error {
	var res OpenpitrixAppVersionAudit
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
