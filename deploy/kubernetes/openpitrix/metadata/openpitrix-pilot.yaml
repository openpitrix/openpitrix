apiVersion: v1
kind: Service
metadata:
  name: openpitrix-pilot-service
  namespace: ${NAMESPACE}
  labels:
    app: openpitrix
    component: openpitrix-pilot
    version: ${VERSION}
spec:
  type: NodePort
  selector:
    app: openpitrix
    component: openpitrix-pilot
  ports:
  - name: openpitrix-pilot
    protocol: TCP
    port: 9110
    targetPort: 9110
  - name: openpitrix-pilot-tls
    protocol: TCP
    port: 9114
    targetPort: 9114
    ${PILOT_NODEPORT}
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: openpitrix-pilot-deployment
  namespace: ${NAMESPACE}
  labels:
    app: openpitrix
    component: openpitrix-pilot
    version: ${VERSION}
spec:
  selector:
    matchLabels:
      app: openpitrix
      component: openpitrix-pilot
  replicas: 1
  template:
    metadata:
      labels:
        app: openpitrix
        component: openpitrix-pilot
        version: ${VERSION}
    spec:
      initContainers:
      - name: wait-mysql
        image: busybox:1.28.4
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', 'until nc -z openpitrix-db.${NAMESPACE}.svc 3306; do echo "waiting for mysql"; sleep 2; done;']
      - name: wait-etcd
        image: busybox:1.28.4
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', 'until nc -z openpitrix-etcd.${NAMESPACE}.svc 2379; do echo "waiting for etcd"; sleep 2; done;']
      containers:
      - name: openpitrix-pilot
        image: ${IMAGE}
        imagePullPolicy: ${IMAGE_PULL_POLICY}
        command: ['pilot', '-config=/opt/openpitrix/conf/pilot-config.json', '--openpitrix-ca-crt-file=/opt/openpitrix/conf/openpitrix-ca.crt', '--pilot-server-crt-file=/opt/openpitrix/conf/pilot-server.crt', '--pilot-server-key-file=/opt/openpitrix/conf/pilot-server.key', '--pilot-client-crt-file=/opt/openpitrix/conf/pilot-client.crt', '--pilot-client-key-file=/opt/openpitrix/conf/pilot-client.key', 'serve']
        ports:
        - containerPort: 9110
          name: pilot
        - containerPort: 9114
          name: pilot-tls
        env:
        - name: OPENPITRIX_GRPC_SHOW_ERROR_CAUSE
          value: "${GRPC_SHOW_ERROR_CAUSE}"
        - name: OPENPITRIX_LOG_LEVEL
          value: ${OPENPITRIX_LOG_LEVEL}
        resources:
          limits:
            cpu: ${CPU_LIMITS}m
            memory: ${MEMORY_LIMITS}Mi
          requests:
            cpu: ${CPU_REQUESTS}m
            memory: ${MEMORY_REQUESTS}Mi
        volumeMounts:
        - mountPath: /opt/openpitrix/conf
          name: config-volume
      volumes:
      - name: config-volume
        projected:
          sources:
          - configMap:
              name: openpitrix-pilot-configmap
          - secret:
              name: openpitrix-ca.crt
          - secret:
              name: pilot-server.crt
          - secret:
              name: pilot-server.key
          - secret:
              name: pilot-client.crt
          - secret:
              name: pilot-client.key
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: openpitrix-pilot-configmap
  namespace: ${NAMESPACE}
  labels:
    app: openpitrix
    component: openpitrix-pilot
    version: ${VERSION}
data:
  pilot-config.json: |-
    {
        "id": "openpitrix-pilot-001",
        "host": "localhost",
        "listen_port": 9110,
        "tls_listen_port": 9114,
        "log_level": "debug"
    }