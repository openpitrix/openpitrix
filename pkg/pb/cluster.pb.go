// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cluster.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DescribeSubnetsRequest struct {
	RuntimeId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	Limit                uint32                `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               uint32                `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	SubnetType           *wrappers.UInt32Value `protobuf:"bytes,4,opt,name=subnet_type,json=subnetType,proto3" json:"subnet_type,omitempty"`
	SubnetId             []string              `protobuf:"bytes,5,rep,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	AdvancedParam        []string              `protobuf:"bytes,6,rep,name=advanced_param,json=advancedParam,proto3" json:"advanced_param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DescribeSubnetsRequest) Reset()         { *m = DescribeSubnetsRequest{} }
func (m *DescribeSubnetsRequest) String() string { return proto.CompactTextString(m) }
func (*DescribeSubnetsRequest) ProtoMessage()    {}
func (*DescribeSubnetsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{0}
}
func (m *DescribeSubnetsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeSubnetsRequest.Unmarshal(m, b)
}
func (m *DescribeSubnetsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeSubnetsRequest.Marshal(b, m, deterministic)
}
func (dst *DescribeSubnetsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeSubnetsRequest.Merge(dst, src)
}
func (m *DescribeSubnetsRequest) XXX_Size() int {
	return xxx_messageInfo_DescribeSubnetsRequest.Size(m)
}
func (m *DescribeSubnetsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeSubnetsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeSubnetsRequest proto.InternalMessageInfo

func (m *DescribeSubnetsRequest) GetRuntimeId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *DescribeSubnetsRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *DescribeSubnetsRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *DescribeSubnetsRequest) GetSubnetType() *wrappers.UInt32Value {
	if m != nil {
		return m.SubnetType
	}
	return nil
}

func (m *DescribeSubnetsRequest) GetSubnetId() []string {
	if m != nil {
		return m.SubnetId
	}
	return nil
}

func (m *DescribeSubnetsRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type Subnet struct {
	SubnetId             *wrappers.StringValue `protobuf:"bytes,1,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	Name                 *wrappers.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreateTime           *timestamp.Timestamp  `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	Description          *wrappers.StringValue `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	InstanceId           []string              `protobuf:"bytes,5,rep,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	VpcId                *wrappers.StringValue `protobuf:"bytes,6,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	SubnetType           *wrappers.UInt32Value `protobuf:"bytes,7,opt,name=subnet_type,json=subnetType,proto3" json:"subnet_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Subnet) Reset()         { *m = Subnet{} }
func (m *Subnet) String() string { return proto.CompactTextString(m) }
func (*Subnet) ProtoMessage()    {}
func (*Subnet) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{1}
}
func (m *Subnet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subnet.Unmarshal(m, b)
}
func (m *Subnet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subnet.Marshal(b, m, deterministic)
}
func (dst *Subnet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subnet.Merge(dst, src)
}
func (m *Subnet) XXX_Size() int {
	return xxx_messageInfo_Subnet.Size(m)
}
func (m *Subnet) XXX_DiscardUnknown() {
	xxx_messageInfo_Subnet.DiscardUnknown(m)
}

var xxx_messageInfo_Subnet proto.InternalMessageInfo

func (m *Subnet) GetSubnetId() *wrappers.StringValue {
	if m != nil {
		return m.SubnetId
	}
	return nil
}

func (m *Subnet) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Subnet) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Subnet) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Subnet) GetInstanceId() []string {
	if m != nil {
		return m.InstanceId
	}
	return nil
}

func (m *Subnet) GetVpcId() *wrappers.StringValue {
	if m != nil {
		return m.VpcId
	}
	return nil
}

func (m *Subnet) GetSubnetType() *wrappers.UInt32Value {
	if m != nil {
		return m.SubnetType
	}
	return nil
}

type DescribeSubnetsResponse struct {
	TotalCount           uint32    `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	SubnetSet            []*Subnet `protobuf:"bytes,2,rep,name=subnet_set,json=subnetSet,proto3" json:"subnet_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DescribeSubnetsResponse) Reset()         { *m = DescribeSubnetsResponse{} }
func (m *DescribeSubnetsResponse) String() string { return proto.CompactTextString(m) }
func (*DescribeSubnetsResponse) ProtoMessage()    {}
func (*DescribeSubnetsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{2}
}
func (m *DescribeSubnetsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeSubnetsResponse.Unmarshal(m, b)
}
func (m *DescribeSubnetsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeSubnetsResponse.Marshal(b, m, deterministic)
}
func (dst *DescribeSubnetsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeSubnetsResponse.Merge(dst, src)
}
func (m *DescribeSubnetsResponse) XXX_Size() int {
	return xxx_messageInfo_DescribeSubnetsResponse.Size(m)
}
func (m *DescribeSubnetsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeSubnetsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeSubnetsResponse proto.InternalMessageInfo

func (m *DescribeSubnetsResponse) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *DescribeSubnetsResponse) GetSubnetSet() []*Subnet {
	if m != nil {
		return m.SubnetSet
	}
	return nil
}

type CreateClusterRequest struct {
	AppId                *wrappers.StringValue `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	VersionId            *wrappers.StringValue `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	RuntimeId            *wrappers.StringValue `protobuf:"bytes,3,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	Conf                 *wrappers.StringValue `protobuf:"bytes,4,opt,name=conf,proto3" json:"conf,omitempty"`
	AdvancedParam        []string              `protobuf:"bytes,5,rep,name=advanced_param,json=advancedParam,proto3" json:"advanced_param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CreateClusterRequest) Reset()         { *m = CreateClusterRequest{} }
func (m *CreateClusterRequest) String() string { return proto.CompactTextString(m) }
func (*CreateClusterRequest) ProtoMessage()    {}
func (*CreateClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{3}
}
func (m *CreateClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClusterRequest.Unmarshal(m, b)
}
func (m *CreateClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClusterRequest.Marshal(b, m, deterministic)
}
func (dst *CreateClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClusterRequest.Merge(dst, src)
}
func (m *CreateClusterRequest) XXX_Size() int {
	return xxx_messageInfo_CreateClusterRequest.Size(m)
}
func (m *CreateClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClusterRequest proto.InternalMessageInfo

func (m *CreateClusterRequest) GetAppId() *wrappers.StringValue {
	if m != nil {
		return m.AppId
	}
	return nil
}

func (m *CreateClusterRequest) GetVersionId() *wrappers.StringValue {
	if m != nil {
		return m.VersionId
	}
	return nil
}

func (m *CreateClusterRequest) GetRuntimeId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *CreateClusterRequest) GetConf() *wrappers.StringValue {
	if m != nil {
		return m.Conf
	}
	return nil
}

func (m *CreateClusterRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type CreateClusterResponse struct {
	ClusterId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	JobId                *wrappers.StringValue `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CreateClusterResponse) Reset()         { *m = CreateClusterResponse{} }
func (m *CreateClusterResponse) String() string { return proto.CompactTextString(m) }
func (*CreateClusterResponse) ProtoMessage()    {}
func (*CreateClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{4}
}
func (m *CreateClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClusterResponse.Unmarshal(m, b)
}
func (m *CreateClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClusterResponse.Marshal(b, m, deterministic)
}
func (dst *CreateClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClusterResponse.Merge(dst, src)
}
func (m *CreateClusterResponse) XXX_Size() int {
	return xxx_messageInfo_CreateClusterResponse.Size(m)
}
func (m *CreateClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClusterResponse proto.InternalMessageInfo

func (m *CreateClusterResponse) GetClusterId() *wrappers.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *CreateClusterResponse) GetJobId() *wrappers.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

type ModifyClusterRequest struct {
	Cluster                *Cluster               `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	ClusterNodeSet         []*ClusterNode         `protobuf:"bytes,2,rep,name=cluster_node_set,json=clusterNodeSet,proto3" json:"cluster_node_set,omitempty"`
	ClusterRoleSet         []*ClusterRole         `protobuf:"bytes,3,rep,name=cluster_role_set,json=clusterRoleSet,proto3" json:"cluster_role_set,omitempty"`
	ClusterLinkSet         []*ClusterLink         `protobuf:"bytes,4,rep,name=cluster_link_set,json=clusterLinkSet,proto3" json:"cluster_link_set,omitempty"`
	ClusterCommonSet       []*ClusterCommon       `protobuf:"bytes,5,rep,name=cluster_common_set,json=clusterCommonSet,proto3" json:"cluster_common_set,omitempty"`
	ClusterLoadbalancerSet []*ClusterLoadbalancer `protobuf:"bytes,6,rep,name=cluster_loadbalancer_set,json=clusterLoadbalancerSet,proto3" json:"cluster_loadbalancer_set,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}               `json:"-"`
	XXX_unrecognized       []byte                 `json:"-"`
	XXX_sizecache          int32                  `json:"-"`
}

func (m *ModifyClusterRequest) Reset()         { *m = ModifyClusterRequest{} }
func (m *ModifyClusterRequest) String() string { return proto.CompactTextString(m) }
func (*ModifyClusterRequest) ProtoMessage()    {}
func (*ModifyClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{5}
}
func (m *ModifyClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModifyClusterRequest.Unmarshal(m, b)
}
func (m *ModifyClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModifyClusterRequest.Marshal(b, m, deterministic)
}
func (dst *ModifyClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModifyClusterRequest.Merge(dst, src)
}
func (m *ModifyClusterRequest) XXX_Size() int {
	return xxx_messageInfo_ModifyClusterRequest.Size(m)
}
func (m *ModifyClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ModifyClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ModifyClusterRequest proto.InternalMessageInfo

func (m *ModifyClusterRequest) GetCluster() *Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

func (m *ModifyClusterRequest) GetClusterNodeSet() []*ClusterNode {
	if m != nil {
		return m.ClusterNodeSet
	}
	return nil
}

func (m *ModifyClusterRequest) GetClusterRoleSet() []*ClusterRole {
	if m != nil {
		return m.ClusterRoleSet
	}
	return nil
}

func (m *ModifyClusterRequest) GetClusterLinkSet() []*ClusterLink {
	if m != nil {
		return m.ClusterLinkSet
	}
	return nil
}

func (m *ModifyClusterRequest) GetClusterCommonSet() []*ClusterCommon {
	if m != nil {
		return m.ClusterCommonSet
	}
	return nil
}

func (m *ModifyClusterRequest) GetClusterLoadbalancerSet() []*ClusterLoadbalancer {
	if m != nil {
		return m.ClusterLoadbalancerSet
	}
	return nil
}

type ModifyClusterResponse struct {
	ClusterId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ModifyClusterResponse) Reset()         { *m = ModifyClusterResponse{} }
func (m *ModifyClusterResponse) String() string { return proto.CompactTextString(m) }
func (*ModifyClusterResponse) ProtoMessage()    {}
func (*ModifyClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{6}
}
func (m *ModifyClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModifyClusterResponse.Unmarshal(m, b)
}
func (m *ModifyClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModifyClusterResponse.Marshal(b, m, deterministic)
}
func (dst *ModifyClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModifyClusterResponse.Merge(dst, src)
}
func (m *ModifyClusterResponse) XXX_Size() int {
	return xxx_messageInfo_ModifyClusterResponse.Size(m)
}
func (m *ModifyClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ModifyClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ModifyClusterResponse proto.InternalMessageInfo

func (m *ModifyClusterResponse) GetClusterId() *wrappers.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

type ModifyClusterNodeRequest struct {
	ClusterNode          *ClusterNode `protobuf:"bytes,1,opt,name=cluster_node,json=clusterNode,proto3" json:"cluster_node,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ModifyClusterNodeRequest) Reset()         { *m = ModifyClusterNodeRequest{} }
func (m *ModifyClusterNodeRequest) String() string { return proto.CompactTextString(m) }
func (*ModifyClusterNodeRequest) ProtoMessage()    {}
func (*ModifyClusterNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{7}
}
func (m *ModifyClusterNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModifyClusterNodeRequest.Unmarshal(m, b)
}
func (m *ModifyClusterNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModifyClusterNodeRequest.Marshal(b, m, deterministic)
}
func (dst *ModifyClusterNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModifyClusterNodeRequest.Merge(dst, src)
}
func (m *ModifyClusterNodeRequest) XXX_Size() int {
	return xxx_messageInfo_ModifyClusterNodeRequest.Size(m)
}
func (m *ModifyClusterNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ModifyClusterNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ModifyClusterNodeRequest proto.InternalMessageInfo

func (m *ModifyClusterNodeRequest) GetClusterNode() *ClusterNode {
	if m != nil {
		return m.ClusterNode
	}
	return nil
}

type ModifyClusterNodeResponse struct {
	NodeId               *wrappers.StringValue `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ModifyClusterNodeResponse) Reset()         { *m = ModifyClusterNodeResponse{} }
func (m *ModifyClusterNodeResponse) String() string { return proto.CompactTextString(m) }
func (*ModifyClusterNodeResponse) ProtoMessage()    {}
func (*ModifyClusterNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{8}
}
func (m *ModifyClusterNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModifyClusterNodeResponse.Unmarshal(m, b)
}
func (m *ModifyClusterNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModifyClusterNodeResponse.Marshal(b, m, deterministic)
}
func (dst *ModifyClusterNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModifyClusterNodeResponse.Merge(dst, src)
}
func (m *ModifyClusterNodeResponse) XXX_Size() int {
	return xxx_messageInfo_ModifyClusterNodeResponse.Size(m)
}
func (m *ModifyClusterNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ModifyClusterNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ModifyClusterNodeResponse proto.InternalMessageInfo

func (m *ModifyClusterNodeResponse) GetNodeId() *wrappers.StringValue {
	if m != nil {
		return m.NodeId
	}
	return nil
}

type AddTableClusterNodesRequest struct {
	ClusterNodeSet       []*ClusterNode `protobuf:"bytes,1,rep,name=cluster_node_set,json=clusterNodeSet,proto3" json:"cluster_node_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AddTableClusterNodesRequest) Reset()         { *m = AddTableClusterNodesRequest{} }
func (m *AddTableClusterNodesRequest) String() string { return proto.CompactTextString(m) }
func (*AddTableClusterNodesRequest) ProtoMessage()    {}
func (*AddTableClusterNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{9}
}
func (m *AddTableClusterNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTableClusterNodesRequest.Unmarshal(m, b)
}
func (m *AddTableClusterNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTableClusterNodesRequest.Marshal(b, m, deterministic)
}
func (dst *AddTableClusterNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTableClusterNodesRequest.Merge(dst, src)
}
func (m *AddTableClusterNodesRequest) XXX_Size() int {
	return xxx_messageInfo_AddTableClusterNodesRequest.Size(m)
}
func (m *AddTableClusterNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTableClusterNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddTableClusterNodesRequest proto.InternalMessageInfo

func (m *AddTableClusterNodesRequest) GetClusterNodeSet() []*ClusterNode {
	if m != nil {
		return m.ClusterNodeSet
	}
	return nil
}

type DeleteTableClusterNodesRequest struct {
	NodeId               []string `protobuf:"bytes,1,rep,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTableClusterNodesRequest) Reset()         { *m = DeleteTableClusterNodesRequest{} }
func (m *DeleteTableClusterNodesRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTableClusterNodesRequest) ProtoMessage()    {}
func (*DeleteTableClusterNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{10}
}
func (m *DeleteTableClusterNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTableClusterNodesRequest.Unmarshal(m, b)
}
func (m *DeleteTableClusterNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTableClusterNodesRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteTableClusterNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTableClusterNodesRequest.Merge(dst, src)
}
func (m *DeleteTableClusterNodesRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTableClusterNodesRequest.Size(m)
}
func (m *DeleteTableClusterNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTableClusterNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTableClusterNodesRequest proto.InternalMessageInfo

func (m *DeleteTableClusterNodesRequest) GetNodeId() []string {
	if m != nil {
		return m.NodeId
	}
	return nil
}

type DeleteClustersRequest struct {
	ClusterId            []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	AdvancedParam        []string `protobuf:"bytes,2,rep,name=advanced_param,json=advancedParam,proto3" json:"advanced_param,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteClustersRequest) Reset()         { *m = DeleteClustersRequest{} }
func (m *DeleteClustersRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteClustersRequest) ProtoMessage()    {}
func (*DeleteClustersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{11}
}
func (m *DeleteClustersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteClustersRequest.Unmarshal(m, b)
}
func (m *DeleteClustersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteClustersRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteClustersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteClustersRequest.Merge(dst, src)
}
func (m *DeleteClustersRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteClustersRequest.Size(m)
}
func (m *DeleteClustersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteClustersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteClustersRequest proto.InternalMessageInfo

func (m *DeleteClustersRequest) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *DeleteClustersRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type DeleteClustersResponse struct {
	ClusterId            []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	JobId                []string `protobuf:"bytes,2,rep,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteClustersResponse) Reset()         { *m = DeleteClustersResponse{} }
func (m *DeleteClustersResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteClustersResponse) ProtoMessage()    {}
func (*DeleteClustersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{12}
}
func (m *DeleteClustersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteClustersResponse.Unmarshal(m, b)
}
func (m *DeleteClustersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteClustersResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteClustersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteClustersResponse.Merge(dst, src)
}
func (m *DeleteClustersResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteClustersResponse.Size(m)
}
func (m *DeleteClustersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteClustersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteClustersResponse proto.InternalMessageInfo

func (m *DeleteClustersResponse) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *DeleteClustersResponse) GetJobId() []string {
	if m != nil {
		return m.JobId
	}
	return nil
}

type UpgradeClusterRequest struct {
	ClusterId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	VersionId            *wrappers.StringValue `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	AdvancedParam        []string              `protobuf:"bytes,3,rep,name=advanced_param,json=advancedParam,proto3" json:"advanced_param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpgradeClusterRequest) Reset()         { *m = UpgradeClusterRequest{} }
func (m *UpgradeClusterRequest) String() string { return proto.CompactTextString(m) }
func (*UpgradeClusterRequest) ProtoMessage()    {}
func (*UpgradeClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{13}
}
func (m *UpgradeClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpgradeClusterRequest.Unmarshal(m, b)
}
func (m *UpgradeClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpgradeClusterRequest.Marshal(b, m, deterministic)
}
func (dst *UpgradeClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpgradeClusterRequest.Merge(dst, src)
}
func (m *UpgradeClusterRequest) XXX_Size() int {
	return xxx_messageInfo_UpgradeClusterRequest.Size(m)
}
func (m *UpgradeClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpgradeClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpgradeClusterRequest proto.InternalMessageInfo

func (m *UpgradeClusterRequest) GetClusterId() *wrappers.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *UpgradeClusterRequest) GetVersionId() *wrappers.StringValue {
	if m != nil {
		return m.VersionId
	}
	return nil
}

func (m *UpgradeClusterRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type UpgradeClusterResponse struct {
	ClusterId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	JobId                *wrappers.StringValue `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpgradeClusterResponse) Reset()         { *m = UpgradeClusterResponse{} }
func (m *UpgradeClusterResponse) String() string { return proto.CompactTextString(m) }
func (*UpgradeClusterResponse) ProtoMessage()    {}
func (*UpgradeClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{14}
}
func (m *UpgradeClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpgradeClusterResponse.Unmarshal(m, b)
}
func (m *UpgradeClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpgradeClusterResponse.Marshal(b, m, deterministic)
}
func (dst *UpgradeClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpgradeClusterResponse.Merge(dst, src)
}
func (m *UpgradeClusterResponse) XXX_Size() int {
	return xxx_messageInfo_UpgradeClusterResponse.Size(m)
}
func (m *UpgradeClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpgradeClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpgradeClusterResponse proto.InternalMessageInfo

func (m *UpgradeClusterResponse) GetClusterId() *wrappers.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *UpgradeClusterResponse) GetJobId() *wrappers.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

type RollbackClusterRequest struct {
	ClusterId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	AdvancedParam        []string              `protobuf:"bytes,2,rep,name=advanced_param,json=advancedParam,proto3" json:"advanced_param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RollbackClusterRequest) Reset()         { *m = RollbackClusterRequest{} }
func (m *RollbackClusterRequest) String() string { return proto.CompactTextString(m) }
func (*RollbackClusterRequest) ProtoMessage()    {}
func (*RollbackClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{15}
}
func (m *RollbackClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollbackClusterRequest.Unmarshal(m, b)
}
func (m *RollbackClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollbackClusterRequest.Marshal(b, m, deterministic)
}
func (dst *RollbackClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollbackClusterRequest.Merge(dst, src)
}
func (m *RollbackClusterRequest) XXX_Size() int {
	return xxx_messageInfo_RollbackClusterRequest.Size(m)
}
func (m *RollbackClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RollbackClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RollbackClusterRequest proto.InternalMessageInfo

func (m *RollbackClusterRequest) GetClusterId() *wrappers.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *RollbackClusterRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type RollbackClusterResponse struct {
	ClusterId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	JobId                *wrappers.StringValue `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RollbackClusterResponse) Reset()         { *m = RollbackClusterResponse{} }
func (m *RollbackClusterResponse) String() string { return proto.CompactTextString(m) }
func (*RollbackClusterResponse) ProtoMessage()    {}
func (*RollbackClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{16}
}
func (m *RollbackClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollbackClusterResponse.Unmarshal(m, b)
}
func (m *RollbackClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollbackClusterResponse.Marshal(b, m, deterministic)
}
func (dst *RollbackClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollbackClusterResponse.Merge(dst, src)
}
func (m *RollbackClusterResponse) XXX_Size() int {
	return xxx_messageInfo_RollbackClusterResponse.Size(m)
}
func (m *RollbackClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RollbackClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RollbackClusterResponse proto.InternalMessageInfo

func (m *RollbackClusterResponse) GetClusterId() *wrappers.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *RollbackClusterResponse) GetJobId() *wrappers.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

type ResizeClusterRequest struct {
	ClusterId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Role                 *wrappers.StringValue `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	Cpu                  *wrappers.UInt32Value `protobuf:"bytes,3,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory               *wrappers.UInt32Value `protobuf:"bytes,4,opt,name=memory,proto3" json:"memory,omitempty"`
	AdvancedParam        []string              `protobuf:"bytes,5,rep,name=advanced_param,json=advancedParam,proto3" json:"advanced_param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ResizeClusterRequest) Reset()         { *m = ResizeClusterRequest{} }
func (m *ResizeClusterRequest) String() string { return proto.CompactTextString(m) }
func (*ResizeClusterRequest) ProtoMessage()    {}
func (*ResizeClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{17}
}
func (m *ResizeClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResizeClusterRequest.Unmarshal(m, b)
}
func (m *ResizeClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResizeClusterRequest.Marshal(b, m, deterministic)
}
func (dst *ResizeClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResizeClusterRequest.Merge(dst, src)
}
func (m *ResizeClusterRequest) XXX_Size() int {
	return xxx_messageInfo_ResizeClusterRequest.Size(m)
}
func (m *ResizeClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResizeClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResizeClusterRequest proto.InternalMessageInfo

func (m *ResizeClusterRequest) GetClusterId() *wrappers.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *ResizeClusterRequest) GetRole() *wrappers.StringValue {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *ResizeClusterRequest) GetCpu() *wrappers.UInt32Value {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *ResizeClusterRequest) GetMemory() *wrappers.UInt32Value {
	if m != nil {
		return m.Memory
	}
	return nil
}

func (m *ResizeClusterRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type ResizeClusterResponse struct {
	ClusterId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	JobId                *wrappers.StringValue `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ResizeClusterResponse) Reset()         { *m = ResizeClusterResponse{} }
func (m *ResizeClusterResponse) String() string { return proto.CompactTextString(m) }
func (*ResizeClusterResponse) ProtoMessage()    {}
func (*ResizeClusterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{18}
}
func (m *ResizeClusterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResizeClusterResponse.Unmarshal(m, b)
}
func (m *ResizeClusterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResizeClusterResponse.Marshal(b, m, deterministic)
}
func (dst *ResizeClusterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResizeClusterResponse.Merge(dst, src)
}
func (m *ResizeClusterResponse) XXX_Size() int {
	return xxx_messageInfo_ResizeClusterResponse.Size(m)
}
func (m *ResizeClusterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResizeClusterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResizeClusterResponse proto.InternalMessageInfo

func (m *ResizeClusterResponse) GetClusterId() *wrappers.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *ResizeClusterResponse) GetJobId() *wrappers.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

type AddClusterNodesRequest struct {
	ClusterId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Role                 *wrappers.StringValue `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	NodeCount            *wrappers.UInt32Value `protobuf:"bytes,3,opt,name=node_count,json=nodeCount,proto3" json:"node_count,omitempty"`
	AdvancedParam        []string              `protobuf:"bytes,4,rep,name=advanced_param,json=advancedParam,proto3" json:"advanced_param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *AddClusterNodesRequest) Reset()         { *m = AddClusterNodesRequest{} }
func (m *AddClusterNodesRequest) String() string { return proto.CompactTextString(m) }
func (*AddClusterNodesRequest) ProtoMessage()    {}
func (*AddClusterNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{19}
}
func (m *AddClusterNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddClusterNodesRequest.Unmarshal(m, b)
}
func (m *AddClusterNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddClusterNodesRequest.Marshal(b, m, deterministic)
}
func (dst *AddClusterNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddClusterNodesRequest.Merge(dst, src)
}
func (m *AddClusterNodesRequest) XXX_Size() int {
	return xxx_messageInfo_AddClusterNodesRequest.Size(m)
}
func (m *AddClusterNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddClusterNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddClusterNodesRequest proto.InternalMessageInfo

func (m *AddClusterNodesRequest) GetClusterId() *wrappers.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *AddClusterNodesRequest) GetRole() *wrappers.StringValue {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *AddClusterNodesRequest) GetNodeCount() *wrappers.UInt32Value {
	if m != nil {
		return m.NodeCount
	}
	return nil
}

func (m *AddClusterNodesRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type AddClusterNodesResponse struct {
	ClusterId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	JobId                *wrappers.StringValue `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *AddClusterNodesResponse) Reset()         { *m = AddClusterNodesResponse{} }
func (m *AddClusterNodesResponse) String() string { return proto.CompactTextString(m) }
func (*AddClusterNodesResponse) ProtoMessage()    {}
func (*AddClusterNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{20}
}
func (m *AddClusterNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddClusterNodesResponse.Unmarshal(m, b)
}
func (m *AddClusterNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddClusterNodesResponse.Marshal(b, m, deterministic)
}
func (dst *AddClusterNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddClusterNodesResponse.Merge(dst, src)
}
func (m *AddClusterNodesResponse) XXX_Size() int {
	return xxx_messageInfo_AddClusterNodesResponse.Size(m)
}
func (m *AddClusterNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddClusterNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddClusterNodesResponse proto.InternalMessageInfo

func (m *AddClusterNodesResponse) GetClusterId() *wrappers.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *AddClusterNodesResponse) GetJobId() *wrappers.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

type DeleteClusterNodesRequest struct {
	ClusterId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Role                 *wrappers.StringValue `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	NodeId               []string              `protobuf:"bytes,3,rep,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	AdvancedParam        []string              `protobuf:"bytes,4,rep,name=advanced_param,json=advancedParam,proto3" json:"advanced_param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DeleteClusterNodesRequest) Reset()         { *m = DeleteClusterNodesRequest{} }
func (m *DeleteClusterNodesRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteClusterNodesRequest) ProtoMessage()    {}
func (*DeleteClusterNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{21}
}
func (m *DeleteClusterNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteClusterNodesRequest.Unmarshal(m, b)
}
func (m *DeleteClusterNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteClusterNodesRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteClusterNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteClusterNodesRequest.Merge(dst, src)
}
func (m *DeleteClusterNodesRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteClusterNodesRequest.Size(m)
}
func (m *DeleteClusterNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteClusterNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteClusterNodesRequest proto.InternalMessageInfo

func (m *DeleteClusterNodesRequest) GetClusterId() *wrappers.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *DeleteClusterNodesRequest) GetRole() *wrappers.StringValue {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *DeleteClusterNodesRequest) GetNodeId() []string {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *DeleteClusterNodesRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type DeleteClusterNodesResponse struct {
	ClusterId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	JobId                *wrappers.StringValue `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DeleteClusterNodesResponse) Reset()         { *m = DeleteClusterNodesResponse{} }
func (m *DeleteClusterNodesResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteClusterNodesResponse) ProtoMessage()    {}
func (*DeleteClusterNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{22}
}
func (m *DeleteClusterNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteClusterNodesResponse.Unmarshal(m, b)
}
func (m *DeleteClusterNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteClusterNodesResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteClusterNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteClusterNodesResponse.Merge(dst, src)
}
func (m *DeleteClusterNodesResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteClusterNodesResponse.Size(m)
}
func (m *DeleteClusterNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteClusterNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteClusterNodesResponse proto.InternalMessageInfo

func (m *DeleteClusterNodesResponse) GetClusterId() *wrappers.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *DeleteClusterNodesResponse) GetJobId() *wrappers.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

type UpdateClusterEnvRequest struct {
	ClusterId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Env                  *wrappers.StringValue `protobuf:"bytes,2,opt,name=env,proto3" json:"env,omitempty"`
	AdvancedParam        []string              `protobuf:"bytes,3,rep,name=advanced_param,json=advancedParam,proto3" json:"advanced_param,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateClusterEnvRequest) Reset()         { *m = UpdateClusterEnvRequest{} }
func (m *UpdateClusterEnvRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateClusterEnvRequest) ProtoMessage()    {}
func (*UpdateClusterEnvRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{23}
}
func (m *UpdateClusterEnvRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateClusterEnvRequest.Unmarshal(m, b)
}
func (m *UpdateClusterEnvRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateClusterEnvRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateClusterEnvRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateClusterEnvRequest.Merge(dst, src)
}
func (m *UpdateClusterEnvRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateClusterEnvRequest.Size(m)
}
func (m *UpdateClusterEnvRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateClusterEnvRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateClusterEnvRequest proto.InternalMessageInfo

func (m *UpdateClusterEnvRequest) GetClusterId() *wrappers.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *UpdateClusterEnvRequest) GetEnv() *wrappers.StringValue {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *UpdateClusterEnvRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type UpdateClusterEnvResponse struct {
	ClusterId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	JobId                *wrappers.StringValue `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateClusterEnvResponse) Reset()         { *m = UpdateClusterEnvResponse{} }
func (m *UpdateClusterEnvResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateClusterEnvResponse) ProtoMessage()    {}
func (*UpdateClusterEnvResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{24}
}
func (m *UpdateClusterEnvResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateClusterEnvResponse.Unmarshal(m, b)
}
func (m *UpdateClusterEnvResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateClusterEnvResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateClusterEnvResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateClusterEnvResponse.Merge(dst, src)
}
func (m *UpdateClusterEnvResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateClusterEnvResponse.Size(m)
}
func (m *UpdateClusterEnvResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateClusterEnvResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateClusterEnvResponse proto.InternalMessageInfo

func (m *UpdateClusterEnvResponse) GetClusterId() *wrappers.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *UpdateClusterEnvResponse) GetJobId() *wrappers.StringValue {
	if m != nil {
		return m.JobId
	}
	return nil
}

type ClusterCommon struct {
	ClusterId                  *wrappers.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Role                       *wrappers.StringValue `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	ServerIdUpperBound         *wrappers.UInt32Value `protobuf:"bytes,3,opt,name=server_id_upper_bound,json=serverIdUpperBound,proto3" json:"server_id_upper_bound,omitempty"`
	AdvancedActions            *wrappers.StringValue `protobuf:"bytes,4,opt,name=advanced_actions,json=advancedActions,proto3" json:"advanced_actions,omitempty"`
	InitService                *wrappers.StringValue `protobuf:"bytes,5,opt,name=init_service,json=initService,proto3" json:"init_service,omitempty"`
	StartService               *wrappers.StringValue `protobuf:"bytes,6,opt,name=start_service,json=startService,proto3" json:"start_service,omitempty"`
	StopService                *wrappers.StringValue `protobuf:"bytes,7,opt,name=stop_service,json=stopService,proto3" json:"stop_service,omitempty"`
	ScaleOutService            *wrappers.StringValue `protobuf:"bytes,8,opt,name=scale_out_service,json=scaleOutService,proto3" json:"scale_out_service,omitempty"`
	ScaleInService             *wrappers.StringValue `protobuf:"bytes,9,opt,name=scale_in_service,json=scaleInService,proto3" json:"scale_in_service,omitempty"`
	RestartService             *wrappers.StringValue `protobuf:"bytes,10,opt,name=restart_service,json=restartService,proto3" json:"restart_service,omitempty"`
	DestroyService             *wrappers.StringValue `protobuf:"bytes,11,opt,name=destroy_service,json=destroyService,proto3" json:"destroy_service,omitempty"`
	UpgradeService             *wrappers.StringValue `protobuf:"bytes,12,opt,name=upgrade_service,json=upgradeService,proto3" json:"upgrade_service,omitempty"`
	CustomService              *wrappers.StringValue `protobuf:"bytes,13,opt,name=custom_service,json=customService,proto3" json:"custom_service,omitempty"`
	BackupService              *wrappers.StringValue `protobuf:"bytes,14,opt,name=backup_service,json=backupService,proto3" json:"backup_service,omitempty"`
	RestoreService             *wrappers.StringValue `protobuf:"bytes,15,opt,name=restore_service,json=restoreService,proto3" json:"restore_service,omitempty"`
	DeleteSnapshotService      *wrappers.StringValue `protobuf:"bytes,16,opt,name=delete_snapshot_service,json=deleteSnapshotService,proto3" json:"delete_snapshot_service,omitempty"`
	HealthCheck                *wrappers.StringValue `protobuf:"bytes,17,opt,name=health_check,json=healthCheck,proto3" json:"health_check,omitempty"`
	Monitor                    *wrappers.StringValue `protobuf:"bytes,18,opt,name=monitor,proto3" json:"monitor,omitempty"`
	Passphraseless             *wrappers.StringValue `protobuf:"bytes,19,opt,name=passphraseless,proto3" json:"passphraseless,omitempty"`
	VerticalScalingPolicy      *wrappers.StringValue `protobuf:"bytes,20,opt,name=vertical_scaling_policy,json=verticalScalingPolicy,proto3" json:"vertical_scaling_policy,omitempty"`
	AgentInstalled             *wrappers.BoolValue   `protobuf:"bytes,21,opt,name=agent_installed,json=agentInstalled,proto3" json:"agent_installed,omitempty"`
	CustomMetadataScript       *wrappers.StringValue `protobuf:"bytes,22,opt,name=custom_metadata_script,json=customMetadataScript,proto3" json:"custom_metadata_script,omitempty"`
	ImageId                    *wrappers.StringValue `protobuf:"bytes,23,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	BackupPolicy               *wrappers.StringValue `protobuf:"bytes,24,opt,name=backup_policy,json=backupPolicy,proto3" json:"backup_policy,omitempty"`
	IncrementalBackupSupported *wrappers.BoolValue   `protobuf:"bytes,25,opt,name=incremental_backup_supported,json=incrementalBackupSupported,proto3" json:"incremental_backup_supported,omitempty"`
	Hypervisor                 *wrappers.StringValue `protobuf:"bytes,26,opt,name=hypervisor,proto3" json:"hypervisor,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}              `json:"-"`
	XXX_unrecognized           []byte                `json:"-"`
	XXX_sizecache              int32                 `json:"-"`
}

func (m *ClusterCommon) Reset()         { *m = ClusterCommon{} }
func (m *ClusterCommon) String() string { return proto.CompactTextString(m) }
func (*ClusterCommon) ProtoMessage()    {}
func (*ClusterCommon) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{25}
}
func (m *ClusterCommon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterCommon.Unmarshal(m, b)
}
func (m *ClusterCommon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterCommon.Marshal(b, m, deterministic)
}
func (dst *ClusterCommon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterCommon.Merge(dst, src)
}
func (m *ClusterCommon) XXX_Size() int {
	return xxx_messageInfo_ClusterCommon.Size(m)
}
func (m *ClusterCommon) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterCommon.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterCommon proto.InternalMessageInfo

func (m *ClusterCommon) GetClusterId() *wrappers.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *ClusterCommon) GetRole() *wrappers.StringValue {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *ClusterCommon) GetServerIdUpperBound() *wrappers.UInt32Value {
	if m != nil {
		return m.ServerIdUpperBound
	}
	return nil
}

func (m *ClusterCommon) GetAdvancedActions() *wrappers.StringValue {
	if m != nil {
		return m.AdvancedActions
	}
	return nil
}

func (m *ClusterCommon) GetInitService() *wrappers.StringValue {
	if m != nil {
		return m.InitService
	}
	return nil
}

func (m *ClusterCommon) GetStartService() *wrappers.StringValue {
	if m != nil {
		return m.StartService
	}
	return nil
}

func (m *ClusterCommon) GetStopService() *wrappers.StringValue {
	if m != nil {
		return m.StopService
	}
	return nil
}

func (m *ClusterCommon) GetScaleOutService() *wrappers.StringValue {
	if m != nil {
		return m.ScaleOutService
	}
	return nil
}

func (m *ClusterCommon) GetScaleInService() *wrappers.StringValue {
	if m != nil {
		return m.ScaleInService
	}
	return nil
}

func (m *ClusterCommon) GetRestartService() *wrappers.StringValue {
	if m != nil {
		return m.RestartService
	}
	return nil
}

func (m *ClusterCommon) GetDestroyService() *wrappers.StringValue {
	if m != nil {
		return m.DestroyService
	}
	return nil
}

func (m *ClusterCommon) GetUpgradeService() *wrappers.StringValue {
	if m != nil {
		return m.UpgradeService
	}
	return nil
}

func (m *ClusterCommon) GetCustomService() *wrappers.StringValue {
	if m != nil {
		return m.CustomService
	}
	return nil
}

func (m *ClusterCommon) GetBackupService() *wrappers.StringValue {
	if m != nil {
		return m.BackupService
	}
	return nil
}

func (m *ClusterCommon) GetRestoreService() *wrappers.StringValue {
	if m != nil {
		return m.RestoreService
	}
	return nil
}

func (m *ClusterCommon) GetDeleteSnapshotService() *wrappers.StringValue {
	if m != nil {
		return m.DeleteSnapshotService
	}
	return nil
}

func (m *ClusterCommon) GetHealthCheck() *wrappers.StringValue {
	if m != nil {
		return m.HealthCheck
	}
	return nil
}

func (m *ClusterCommon) GetMonitor() *wrappers.StringValue {
	if m != nil {
		return m.Monitor
	}
	return nil
}

func (m *ClusterCommon) GetPassphraseless() *wrappers.StringValue {
	if m != nil {
		return m.Passphraseless
	}
	return nil
}

func (m *ClusterCommon) GetVerticalScalingPolicy() *wrappers.StringValue {
	if m != nil {
		return m.VerticalScalingPolicy
	}
	return nil
}

func (m *ClusterCommon) GetAgentInstalled() *wrappers.BoolValue {
	if m != nil {
		return m.AgentInstalled
	}
	return nil
}

func (m *ClusterCommon) GetCustomMetadataScript() *wrappers.StringValue {
	if m != nil {
		return m.CustomMetadataScript
	}
	return nil
}

func (m *ClusterCommon) GetImageId() *wrappers.StringValue {
	if m != nil {
		return m.ImageId
	}
	return nil
}

func (m *ClusterCommon) GetBackupPolicy() *wrappers.StringValue {
	if m != nil {
		return m.BackupPolicy
	}
	return nil
}

func (m *ClusterCommon) GetIncrementalBackupSupported() *wrappers.BoolValue {
	if m != nil {
		return m.IncrementalBackupSupported
	}
	return nil
}

func (m *ClusterCommon) GetHypervisor() *wrappers.StringValue {
	if m != nil {
		return m.Hypervisor
	}
	return nil
}

type ClusterNode struct {
	NodeId               *wrappers.StringValue `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ClusterId            *wrappers.StringValue `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Name                 *wrappers.StringValue `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	InstanceId           *wrappers.StringValue `protobuf:"bytes,4,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	VolumeId             *wrappers.StringValue `protobuf:"bytes,5,opt,name=volume_id,json=volumeId,proto3" json:"volume_id,omitempty"`
	Device               *wrappers.StringValue `protobuf:"bytes,6,opt,name=device,proto3" json:"device,omitempty"`
	SubnetId             *wrappers.StringValue `protobuf:"bytes,7,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	PrivateIp            *wrappers.StringValue `protobuf:"bytes,8,opt,name=private_ip,json=privateIp,proto3" json:"private_ip,omitempty"`
	ServerId             *wrappers.UInt32Value `protobuf:"bytes,9,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Role                 *wrappers.StringValue `protobuf:"bytes,10,opt,name=role,proto3" json:"role,omitempty"`
	Status               *wrappers.StringValue `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	TransitionStatus     *wrappers.StringValue `protobuf:"bytes,12,opt,name=transition_status,json=transitionStatus,proto3" json:"transition_status,omitempty"`
	GroupId              *wrappers.UInt32Value `protobuf:"bytes,13,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Owner                *wrappers.StringValue `protobuf:"bytes,14,opt,name=owner,proto3" json:"owner,omitempty"`
	GlobalServerId       *wrappers.UInt32Value `protobuf:"bytes,15,opt,name=global_server_id,json=globalServerId,proto3" json:"global_server_id,omitempty"`
	CustomMetadata       *wrappers.StringValue `protobuf:"bytes,16,opt,name=custom_metadata,json=customMetadata,proto3" json:"custom_metadata,omitempty"`
	PubKey               *wrappers.StringValue `protobuf:"bytes,17,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	HealthStatus         *wrappers.StringValue `protobuf:"bytes,18,opt,name=health_status,json=healthStatus,proto3" json:"health_status,omitempty"`
	IsBackup             *wrappers.BoolValue   `protobuf:"bytes,19,opt,name=is_backup,json=isBackup,proto3" json:"is_backup,omitempty"`
	AutoBackup           *wrappers.BoolValue   `protobuf:"bytes,20,opt,name=auto_backup,json=autoBackup,proto3" json:"auto_backup,omitempty"`
	CreateTime           *timestamp.Timestamp  `protobuf:"bytes,21,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	StatusTime           *timestamp.Timestamp  `protobuf:"bytes,22,opt,name=status_time,json=statusTime,proto3" json:"status_time,omitempty"`
	ClusterRole          *ClusterRole          `protobuf:"bytes,23,opt,name=cluster_role,json=clusterRole,proto3" json:"cluster_role,omitempty"`
	ClusterCommon        *ClusterCommon        `protobuf:"bytes,24,opt,name=cluster_common,json=clusterCommon,proto3" json:"cluster_common,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ClusterNode) Reset()         { *m = ClusterNode{} }
func (m *ClusterNode) String() string { return proto.CompactTextString(m) }
func (*ClusterNode) ProtoMessage()    {}
func (*ClusterNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{26}
}
func (m *ClusterNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterNode.Unmarshal(m, b)
}
func (m *ClusterNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterNode.Marshal(b, m, deterministic)
}
func (dst *ClusterNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterNode.Merge(dst, src)
}
func (m *ClusterNode) XXX_Size() int {
	return xxx_messageInfo_ClusterNode.Size(m)
}
func (m *ClusterNode) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterNode.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterNode proto.InternalMessageInfo

func (m *ClusterNode) GetNodeId() *wrappers.StringValue {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *ClusterNode) GetClusterId() *wrappers.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *ClusterNode) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ClusterNode) GetInstanceId() *wrappers.StringValue {
	if m != nil {
		return m.InstanceId
	}
	return nil
}

func (m *ClusterNode) GetVolumeId() *wrappers.StringValue {
	if m != nil {
		return m.VolumeId
	}
	return nil
}

func (m *ClusterNode) GetDevice() *wrappers.StringValue {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *ClusterNode) GetSubnetId() *wrappers.StringValue {
	if m != nil {
		return m.SubnetId
	}
	return nil
}

func (m *ClusterNode) GetPrivateIp() *wrappers.StringValue {
	if m != nil {
		return m.PrivateIp
	}
	return nil
}

func (m *ClusterNode) GetServerId() *wrappers.UInt32Value {
	if m != nil {
		return m.ServerId
	}
	return nil
}

func (m *ClusterNode) GetRole() *wrappers.StringValue {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *ClusterNode) GetStatus() *wrappers.StringValue {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ClusterNode) GetTransitionStatus() *wrappers.StringValue {
	if m != nil {
		return m.TransitionStatus
	}
	return nil
}

func (m *ClusterNode) GetGroupId() *wrappers.UInt32Value {
	if m != nil {
		return m.GroupId
	}
	return nil
}

func (m *ClusterNode) GetOwner() *wrappers.StringValue {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *ClusterNode) GetGlobalServerId() *wrappers.UInt32Value {
	if m != nil {
		return m.GlobalServerId
	}
	return nil
}

func (m *ClusterNode) GetCustomMetadata() *wrappers.StringValue {
	if m != nil {
		return m.CustomMetadata
	}
	return nil
}

func (m *ClusterNode) GetPubKey() *wrappers.StringValue {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func (m *ClusterNode) GetHealthStatus() *wrappers.StringValue {
	if m != nil {
		return m.HealthStatus
	}
	return nil
}

func (m *ClusterNode) GetIsBackup() *wrappers.BoolValue {
	if m != nil {
		return m.IsBackup
	}
	return nil
}

func (m *ClusterNode) GetAutoBackup() *wrappers.BoolValue {
	if m != nil {
		return m.AutoBackup
	}
	return nil
}

func (m *ClusterNode) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *ClusterNode) GetStatusTime() *timestamp.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *ClusterNode) GetClusterRole() *ClusterRole {
	if m != nil {
		return m.ClusterRole
	}
	return nil
}

func (m *ClusterNode) GetClusterCommon() *ClusterCommon {
	if m != nil {
		return m.ClusterCommon
	}
	return nil
}

type ClusterRole struct {
	ClusterId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Role                 *wrappers.StringValue `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	Cpu                  *wrappers.UInt32Value `protobuf:"bytes,3,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Gpu                  *wrappers.UInt32Value `protobuf:"bytes,4,opt,name=gpu,proto3" json:"gpu,omitempty"`
	Memory               *wrappers.UInt32Value `protobuf:"bytes,5,opt,name=memory,proto3" json:"memory,omitempty"`
	InstanceSize         *wrappers.UInt32Value `protobuf:"bytes,6,opt,name=instance_size,json=instanceSize,proto3" json:"instance_size,omitempty"`
	StorageSize          *wrappers.UInt32Value `protobuf:"bytes,7,opt,name=storage_size,json=storageSize,proto3" json:"storage_size,omitempty"`
	MountPoint           *wrappers.StringValue `protobuf:"bytes,8,opt,name=mount_point,json=mountPoint,proto3" json:"mount_point,omitempty"`
	MountOptions         *wrappers.StringValue `protobuf:"bytes,9,opt,name=mount_options,json=mountOptions,proto3" json:"mount_options,omitempty"`
	FileSystem           *wrappers.StringValue `protobuf:"bytes,10,opt,name=file_system,json=fileSystem,proto3" json:"file_system,omitempty"`
	Env                  *wrappers.StringValue `protobuf:"bytes,11,opt,name=env,proto3" json:"env,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ClusterRole) Reset()         { *m = ClusterRole{} }
func (m *ClusterRole) String() string { return proto.CompactTextString(m) }
func (*ClusterRole) ProtoMessage()    {}
func (*ClusterRole) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{27}
}
func (m *ClusterRole) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterRole.Unmarshal(m, b)
}
func (m *ClusterRole) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterRole.Marshal(b, m, deterministic)
}
func (dst *ClusterRole) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterRole.Merge(dst, src)
}
func (m *ClusterRole) XXX_Size() int {
	return xxx_messageInfo_ClusterRole.Size(m)
}
func (m *ClusterRole) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterRole.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterRole proto.InternalMessageInfo

func (m *ClusterRole) GetClusterId() *wrappers.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *ClusterRole) GetRole() *wrappers.StringValue {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *ClusterRole) GetCpu() *wrappers.UInt32Value {
	if m != nil {
		return m.Cpu
	}
	return nil
}

func (m *ClusterRole) GetGpu() *wrappers.UInt32Value {
	if m != nil {
		return m.Gpu
	}
	return nil
}

func (m *ClusterRole) GetMemory() *wrappers.UInt32Value {
	if m != nil {
		return m.Memory
	}
	return nil
}

func (m *ClusterRole) GetInstanceSize() *wrappers.UInt32Value {
	if m != nil {
		return m.InstanceSize
	}
	return nil
}

func (m *ClusterRole) GetStorageSize() *wrappers.UInt32Value {
	if m != nil {
		return m.StorageSize
	}
	return nil
}

func (m *ClusterRole) GetMountPoint() *wrappers.StringValue {
	if m != nil {
		return m.MountPoint
	}
	return nil
}

func (m *ClusterRole) GetMountOptions() *wrappers.StringValue {
	if m != nil {
		return m.MountOptions
	}
	return nil
}

func (m *ClusterRole) GetFileSystem() *wrappers.StringValue {
	if m != nil {
		return m.FileSystem
	}
	return nil
}

func (m *ClusterRole) GetEnv() *wrappers.StringValue {
	if m != nil {
		return m.Env
	}
	return nil
}

type ClusterLoadbalancer struct {
	ClusterId              *wrappers.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Role                   *wrappers.StringValue `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	LoadbalancerListenerId *wrappers.StringValue `protobuf:"bytes,3,opt,name=loadbalancer_listener_id,json=loadbalancerListenerId,proto3" json:"loadbalancer_listener_id,omitempty"`
	LoadbalancerPort       *wrappers.UInt32Value `protobuf:"bytes,4,opt,name=loadbalancer_port,json=loadbalancerPort,proto3" json:"loadbalancer_port,omitempty"`
	LoadbalancerPolicyId   *wrappers.StringValue `protobuf:"bytes,5,opt,name=loadbalancer_policy_id,json=loadbalancerPolicyId,proto3" json:"loadbalancer_policy_id,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}              `json:"-"`
	XXX_unrecognized       []byte                `json:"-"`
	XXX_sizecache          int32                 `json:"-"`
}

func (m *ClusterLoadbalancer) Reset()         { *m = ClusterLoadbalancer{} }
func (m *ClusterLoadbalancer) String() string { return proto.CompactTextString(m) }
func (*ClusterLoadbalancer) ProtoMessage()    {}
func (*ClusterLoadbalancer) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{28}
}
func (m *ClusterLoadbalancer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterLoadbalancer.Unmarshal(m, b)
}
func (m *ClusterLoadbalancer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterLoadbalancer.Marshal(b, m, deterministic)
}
func (dst *ClusterLoadbalancer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterLoadbalancer.Merge(dst, src)
}
func (m *ClusterLoadbalancer) XXX_Size() int {
	return xxx_messageInfo_ClusterLoadbalancer.Size(m)
}
func (m *ClusterLoadbalancer) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterLoadbalancer.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterLoadbalancer proto.InternalMessageInfo

func (m *ClusterLoadbalancer) GetClusterId() *wrappers.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *ClusterLoadbalancer) GetRole() *wrappers.StringValue {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *ClusterLoadbalancer) GetLoadbalancerListenerId() *wrappers.StringValue {
	if m != nil {
		return m.LoadbalancerListenerId
	}
	return nil
}

func (m *ClusterLoadbalancer) GetLoadbalancerPort() *wrappers.UInt32Value {
	if m != nil {
		return m.LoadbalancerPort
	}
	return nil
}

func (m *ClusterLoadbalancer) GetLoadbalancerPolicyId() *wrappers.StringValue {
	if m != nil {
		return m.LoadbalancerPolicyId
	}
	return nil
}

type ClusterLink struct {
	ClusterId            *wrappers.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Name                 *wrappers.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ExternalClusterId    *wrappers.StringValue `protobuf:"bytes,3,opt,name=external_cluster_id,json=externalClusterId,proto3" json:"external_cluster_id,omitempty"`
	Owner                *wrappers.StringValue `protobuf:"bytes,4,opt,name=owner,proto3" json:"owner,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ClusterLink) Reset()         { *m = ClusterLink{} }
func (m *ClusterLink) String() string { return proto.CompactTextString(m) }
func (*ClusterLink) ProtoMessage()    {}
func (*ClusterLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{29}
}
func (m *ClusterLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterLink.Unmarshal(m, b)
}
func (m *ClusterLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterLink.Marshal(b, m, deterministic)
}
func (dst *ClusterLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterLink.Merge(dst, src)
}
func (m *ClusterLink) XXX_Size() int {
	return xxx_messageInfo_ClusterLink.Size(m)
}
func (m *ClusterLink) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterLink.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterLink proto.InternalMessageInfo

func (m *ClusterLink) GetClusterId() *wrappers.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *ClusterLink) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ClusterLink) GetExternalClusterId() *wrappers.StringValue {
	if m != nil {
		return m.ExternalClusterId
	}
	return nil
}

func (m *ClusterLink) GetOwner() *wrappers.StringValue {
	if m != nil {
		return m.Owner
	}
	return nil
}

type Cluster struct {
	ClusterId              *wrappers.StringValue  `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Name                   *wrappers.StringValue  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description            *wrappers.StringValue  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	AppId                  *wrappers.StringValue  `protobuf:"bytes,4,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	VersionId              *wrappers.StringValue  `protobuf:"bytes,5,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	SubnetId               *wrappers.StringValue  `protobuf:"bytes,6,opt,name=subnet_id,json=subnetId,proto3" json:"subnet_id,omitempty"`
	VpcId                  *wrappers.StringValue  `protobuf:"bytes,7,opt,name=vpc_id,json=vpcId,proto3" json:"vpc_id,omitempty"`
	FrontgateId            *wrappers.StringValue  `protobuf:"bytes,8,opt,name=frontgate_id,json=frontgateId,proto3" json:"frontgate_id,omitempty"`
	ClusterType            *wrappers.UInt32Value  `protobuf:"bytes,9,opt,name=cluster_type,json=clusterType,proto3" json:"cluster_type,omitempty"`
	Endpoints              *wrappers.StringValue  `protobuf:"bytes,10,opt,name=endpoints,proto3" json:"endpoints,omitempty"`
	Status                 *wrappers.StringValue  `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	TransitionStatus       *wrappers.StringValue  `protobuf:"bytes,12,opt,name=transition_status,json=transitionStatus,proto3" json:"transition_status,omitempty"`
	MetadataRootAccess     *wrappers.BoolValue    `protobuf:"bytes,13,opt,name=metadata_root_access,json=metadataRootAccess,proto3" json:"metadata_root_access,omitempty"`
	Owner                  *wrappers.StringValue  `protobuf:"bytes,14,opt,name=owner,proto3" json:"owner,omitempty"`
	GlobalUuid             *wrappers.StringValue  `protobuf:"bytes,15,opt,name=global_uuid,json=globalUuid,proto3" json:"global_uuid,omitempty"`
	UpgradeStatus          *wrappers.StringValue  `protobuf:"bytes,16,opt,name=upgrade_status,json=upgradeStatus,proto3" json:"upgrade_status,omitempty"`
	UpgradeTime            *timestamp.Timestamp   `protobuf:"bytes,17,opt,name=upgrade_time,json=upgradeTime,proto3" json:"upgrade_time,omitempty"`
	RuntimeId              *wrappers.StringValue  `protobuf:"bytes,18,opt,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	CreateTime             *timestamp.Timestamp   `protobuf:"bytes,19,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	StatusTime             *timestamp.Timestamp   `protobuf:"bytes,20,opt,name=status_time,json=statusTime,proto3" json:"status_time,omitempty"`
	ClusterNodeSet         []*ClusterNode         `protobuf:"bytes,21,rep,name=cluster_node_set,json=clusterNodeSet,proto3" json:"cluster_node_set,omitempty"`
	ClusterRoleSet         []*ClusterRole         `protobuf:"bytes,22,rep,name=cluster_role_set,json=clusterRoleSet,proto3" json:"cluster_role_set,omitempty"`
	ClusterLinkSet         []*ClusterLink         `protobuf:"bytes,23,rep,name=cluster_link_set,json=clusterLinkSet,proto3" json:"cluster_link_set,omitempty"`
	ClusterCommonSet       []*ClusterCommon       `protobuf:"bytes,24,rep,name=cluster_common_set,json=clusterCommonSet,proto3" json:"cluster_common_set,omitempty"`
	ClusterLoadbalancerSet []*ClusterLoadbalancer `protobuf:"bytes,25,rep,name=cluster_loadbalancer_set,json=clusterLoadbalancerSet,proto3" json:"cluster_loadbalancer_set,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}               `json:"-"`
	XXX_unrecognized       []byte                 `json:"-"`
	XXX_sizecache          int32                  `json:"-"`
}

func (m *Cluster) Reset()         { *m = Cluster{} }
func (m *Cluster) String() string { return proto.CompactTextString(m) }
func (*Cluster) ProtoMessage()    {}
func (*Cluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{30}
}
func (m *Cluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cluster.Unmarshal(m, b)
}
func (m *Cluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cluster.Marshal(b, m, deterministic)
}
func (dst *Cluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cluster.Merge(dst, src)
}
func (m *Cluster) XXX_Size() int {
	return xxx_messageInfo_Cluster.Size(m)
}
func (m *Cluster) XXX_DiscardUnknown() {
	xxx_messageInfo_Cluster.DiscardUnknown(m)
}

var xxx_messageInfo_Cluster proto.InternalMessageInfo

func (m *Cluster) GetClusterId() *wrappers.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *Cluster) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Cluster) GetDescription() *wrappers.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Cluster) GetAppId() *wrappers.StringValue {
	if m != nil {
		return m.AppId
	}
	return nil
}

func (m *Cluster) GetVersionId() *wrappers.StringValue {
	if m != nil {
		return m.VersionId
	}
	return nil
}

func (m *Cluster) GetSubnetId() *wrappers.StringValue {
	if m != nil {
		return m.SubnetId
	}
	return nil
}

func (m *Cluster) GetVpcId() *wrappers.StringValue {
	if m != nil {
		return m.VpcId
	}
	return nil
}

func (m *Cluster) GetFrontgateId() *wrappers.StringValue {
	if m != nil {
		return m.FrontgateId
	}
	return nil
}

func (m *Cluster) GetClusterType() *wrappers.UInt32Value {
	if m != nil {
		return m.ClusterType
	}
	return nil
}

func (m *Cluster) GetEndpoints() *wrappers.StringValue {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

func (m *Cluster) GetStatus() *wrappers.StringValue {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Cluster) GetTransitionStatus() *wrappers.StringValue {
	if m != nil {
		return m.TransitionStatus
	}
	return nil
}

func (m *Cluster) GetMetadataRootAccess() *wrappers.BoolValue {
	if m != nil {
		return m.MetadataRootAccess
	}
	return nil
}

func (m *Cluster) GetOwner() *wrappers.StringValue {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *Cluster) GetGlobalUuid() *wrappers.StringValue {
	if m != nil {
		return m.GlobalUuid
	}
	return nil
}

func (m *Cluster) GetUpgradeStatus() *wrappers.StringValue {
	if m != nil {
		return m.UpgradeStatus
	}
	return nil
}

func (m *Cluster) GetUpgradeTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpgradeTime
	}
	return nil
}

func (m *Cluster) GetRuntimeId() *wrappers.StringValue {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *Cluster) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Cluster) GetStatusTime() *timestamp.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

func (m *Cluster) GetClusterNodeSet() []*ClusterNode {
	if m != nil {
		return m.ClusterNodeSet
	}
	return nil
}

func (m *Cluster) GetClusterRoleSet() []*ClusterRole {
	if m != nil {
		return m.ClusterRoleSet
	}
	return nil
}

func (m *Cluster) GetClusterLinkSet() []*ClusterLink {
	if m != nil {
		return m.ClusterLinkSet
	}
	return nil
}

func (m *Cluster) GetClusterCommonSet() []*ClusterCommon {
	if m != nil {
		return m.ClusterCommonSet
	}
	return nil
}

func (m *Cluster) GetClusterLoadbalancerSet() []*ClusterLoadbalancer {
	if m != nil {
		return m.ClusterLoadbalancerSet
	}
	return nil
}

type DescribeClustersRequest struct {
	ClusterId         []string              `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	AppId             []string              `protobuf:"bytes,2,rep,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	VersionId         []string              `protobuf:"bytes,3,rep,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	Status            []string              `protobuf:"bytes,4,rep,name=status,proto3" json:"status,omitempty"`
	RuntimeId         []string              `protobuf:"bytes,5,rep,name=runtime_id,json=runtimeId,proto3" json:"runtime_id,omitempty"`
	FrontgateId       []string              `protobuf:"bytes,6,rep,name=frontgate_id,json=frontgateId,proto3" json:"frontgate_id,omitempty"`
	ExternalClusterId *wrappers.StringValue `protobuf:"bytes,7,opt,name=external_cluster_id,json=externalClusterId,proto3" json:"external_cluster_id,omitempty"`
	// default is 20, max value is 200
	Limit uint32 `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	// default is 0
	Offset               uint32                `protobuf:"varint,9,opt,name=offset,proto3" json:"offset,omitempty"`
	SearchWord           *wrappers.StringValue `protobuf:"bytes,10,opt,name=search_word,json=searchWord,proto3" json:"search_word,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DescribeClustersRequest) Reset()         { *m = DescribeClustersRequest{} }
func (m *DescribeClustersRequest) String() string { return proto.CompactTextString(m) }
func (*DescribeClustersRequest) ProtoMessage()    {}
func (*DescribeClustersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{31}
}
func (m *DescribeClustersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeClustersRequest.Unmarshal(m, b)
}
func (m *DescribeClustersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeClustersRequest.Marshal(b, m, deterministic)
}
func (dst *DescribeClustersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeClustersRequest.Merge(dst, src)
}
func (m *DescribeClustersRequest) XXX_Size() int {
	return xxx_messageInfo_DescribeClustersRequest.Size(m)
}
func (m *DescribeClustersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeClustersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeClustersRequest proto.InternalMessageInfo

func (m *DescribeClustersRequest) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *DescribeClustersRequest) GetAppId() []string {
	if m != nil {
		return m.AppId
	}
	return nil
}

func (m *DescribeClustersRequest) GetVersionId() []string {
	if m != nil {
		return m.VersionId
	}
	return nil
}

func (m *DescribeClustersRequest) GetStatus() []string {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DescribeClustersRequest) GetRuntimeId() []string {
	if m != nil {
		return m.RuntimeId
	}
	return nil
}

func (m *DescribeClustersRequest) GetFrontgateId() []string {
	if m != nil {
		return m.FrontgateId
	}
	return nil
}

func (m *DescribeClustersRequest) GetExternalClusterId() *wrappers.StringValue {
	if m != nil {
		return m.ExternalClusterId
	}
	return nil
}

func (m *DescribeClustersRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *DescribeClustersRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *DescribeClustersRequest) GetSearchWord() *wrappers.StringValue {
	if m != nil {
		return m.SearchWord
	}
	return nil
}

type DescribeClustersResponse struct {
	TotalCount           uint32     `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	ClusterSet           []*Cluster `protobuf:"bytes,2,rep,name=cluster_set,json=clusterSet,proto3" json:"cluster_set,omitempty"`
	RuntimeCount         uint32     `protobuf:"varint,3,opt,name=runtime_count,json=runtimeCount,proto3" json:"runtime_count,omitempty"`
	LastTwoWeekCount     uint32     `protobuf:"varint,4,opt,name=last_two_week_count,json=lastTwoWeekCount,proto3" json:"last_two_week_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DescribeClustersResponse) Reset()         { *m = DescribeClustersResponse{} }
func (m *DescribeClustersResponse) String() string { return proto.CompactTextString(m) }
func (*DescribeClustersResponse) ProtoMessage()    {}
func (*DescribeClustersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{32}
}
func (m *DescribeClustersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeClustersResponse.Unmarshal(m, b)
}
func (m *DescribeClustersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeClustersResponse.Marshal(b, m, deterministic)
}
func (dst *DescribeClustersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeClustersResponse.Merge(dst, src)
}
func (m *DescribeClustersResponse) XXX_Size() int {
	return xxx_messageInfo_DescribeClustersResponse.Size(m)
}
func (m *DescribeClustersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeClustersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeClustersResponse proto.InternalMessageInfo

func (m *DescribeClustersResponse) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *DescribeClustersResponse) GetClusterSet() []*Cluster {
	if m != nil {
		return m.ClusterSet
	}
	return nil
}

func (m *DescribeClustersResponse) GetRuntimeCount() uint32 {
	if m != nil {
		return m.RuntimeCount
	}
	return 0
}

func (m *DescribeClustersResponse) GetLastTwoWeekCount() uint32 {
	if m != nil {
		return m.LastTwoWeekCount
	}
	return 0
}

type DescribeClusterNodesRequest struct {
	ClusterId *wrappers.StringValue `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	NodeId    []string              `protobuf:"bytes,2,rep,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Status    []string              `protobuf:"bytes,3,rep,name=status,proto3" json:"status,omitempty"`
	// default is 20, max value is 200
	Limit uint32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	// default is 0
	Offset               uint32                `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	SearchWord           *wrappers.StringValue `protobuf:"bytes,6,opt,name=search_word,json=searchWord,proto3" json:"search_word,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DescribeClusterNodesRequest) Reset()         { *m = DescribeClusterNodesRequest{} }
func (m *DescribeClusterNodesRequest) String() string { return proto.CompactTextString(m) }
func (*DescribeClusterNodesRequest) ProtoMessage()    {}
func (*DescribeClusterNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{33}
}
func (m *DescribeClusterNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeClusterNodesRequest.Unmarshal(m, b)
}
func (m *DescribeClusterNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeClusterNodesRequest.Marshal(b, m, deterministic)
}
func (dst *DescribeClusterNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeClusterNodesRequest.Merge(dst, src)
}
func (m *DescribeClusterNodesRequest) XXX_Size() int {
	return xxx_messageInfo_DescribeClusterNodesRequest.Size(m)
}
func (m *DescribeClusterNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeClusterNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeClusterNodesRequest proto.InternalMessageInfo

func (m *DescribeClusterNodesRequest) GetClusterId() *wrappers.StringValue {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *DescribeClusterNodesRequest) GetNodeId() []string {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *DescribeClusterNodesRequest) GetStatus() []string {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DescribeClusterNodesRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *DescribeClusterNodesRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *DescribeClusterNodesRequest) GetSearchWord() *wrappers.StringValue {
	if m != nil {
		return m.SearchWord
	}
	return nil
}

type DescribeClusterNodesResponse struct {
	TotalCount           uint32         `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	ClusterNodeSet       []*ClusterNode `protobuf:"bytes,2,rep,name=cluster_node_set,json=clusterNodeSet,proto3" json:"cluster_node_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DescribeClusterNodesResponse) Reset()         { *m = DescribeClusterNodesResponse{} }
func (m *DescribeClusterNodesResponse) String() string { return proto.CompactTextString(m) }
func (*DescribeClusterNodesResponse) ProtoMessage()    {}
func (*DescribeClusterNodesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{34}
}
func (m *DescribeClusterNodesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DescribeClusterNodesResponse.Unmarshal(m, b)
}
func (m *DescribeClusterNodesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DescribeClusterNodesResponse.Marshal(b, m, deterministic)
}
func (dst *DescribeClusterNodesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DescribeClusterNodesResponse.Merge(dst, src)
}
func (m *DescribeClusterNodesResponse) XXX_Size() int {
	return xxx_messageInfo_DescribeClusterNodesResponse.Size(m)
}
func (m *DescribeClusterNodesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DescribeClusterNodesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DescribeClusterNodesResponse proto.InternalMessageInfo

func (m *DescribeClusterNodesResponse) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *DescribeClusterNodesResponse) GetClusterNodeSet() []*ClusterNode {
	if m != nil {
		return m.ClusterNodeSet
	}
	return nil
}

type StopClustersRequest struct {
	ClusterId            []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	AdvancedParam        []string `protobuf:"bytes,2,rep,name=advanced_param,json=advancedParam,proto3" json:"advanced_param,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopClustersRequest) Reset()         { *m = StopClustersRequest{} }
func (m *StopClustersRequest) String() string { return proto.CompactTextString(m) }
func (*StopClustersRequest) ProtoMessage()    {}
func (*StopClustersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{35}
}
func (m *StopClustersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopClustersRequest.Unmarshal(m, b)
}
func (m *StopClustersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopClustersRequest.Marshal(b, m, deterministic)
}
func (dst *StopClustersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopClustersRequest.Merge(dst, src)
}
func (m *StopClustersRequest) XXX_Size() int {
	return xxx_messageInfo_StopClustersRequest.Size(m)
}
func (m *StopClustersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopClustersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopClustersRequest proto.InternalMessageInfo

func (m *StopClustersRequest) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *StopClustersRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type StopClustersResponse struct {
	ClusterId            []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	JobId                []string `protobuf:"bytes,2,rep,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopClustersResponse) Reset()         { *m = StopClustersResponse{} }
func (m *StopClustersResponse) String() string { return proto.CompactTextString(m) }
func (*StopClustersResponse) ProtoMessage()    {}
func (*StopClustersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{36}
}
func (m *StopClustersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopClustersResponse.Unmarshal(m, b)
}
func (m *StopClustersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopClustersResponse.Marshal(b, m, deterministic)
}
func (dst *StopClustersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopClustersResponse.Merge(dst, src)
}
func (m *StopClustersResponse) XXX_Size() int {
	return xxx_messageInfo_StopClustersResponse.Size(m)
}
func (m *StopClustersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopClustersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopClustersResponse proto.InternalMessageInfo

func (m *StopClustersResponse) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *StopClustersResponse) GetJobId() []string {
	if m != nil {
		return m.JobId
	}
	return nil
}

type StartClustersRequest struct {
	ClusterId            []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	AdvancedParam        []string `protobuf:"bytes,2,rep,name=advanced_param,json=advancedParam,proto3" json:"advanced_param,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartClustersRequest) Reset()         { *m = StartClustersRequest{} }
func (m *StartClustersRequest) String() string { return proto.CompactTextString(m) }
func (*StartClustersRequest) ProtoMessage()    {}
func (*StartClustersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{37}
}
func (m *StartClustersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartClustersRequest.Unmarshal(m, b)
}
func (m *StartClustersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartClustersRequest.Marshal(b, m, deterministic)
}
func (dst *StartClustersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartClustersRequest.Merge(dst, src)
}
func (m *StartClustersRequest) XXX_Size() int {
	return xxx_messageInfo_StartClustersRequest.Size(m)
}
func (m *StartClustersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartClustersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartClustersRequest proto.InternalMessageInfo

func (m *StartClustersRequest) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *StartClustersRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type StartClustersResponse struct {
	ClusterId            []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	JobId                []string `protobuf:"bytes,2,rep,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartClustersResponse) Reset()         { *m = StartClustersResponse{} }
func (m *StartClustersResponse) String() string { return proto.CompactTextString(m) }
func (*StartClustersResponse) ProtoMessage()    {}
func (*StartClustersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{38}
}
func (m *StartClustersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartClustersResponse.Unmarshal(m, b)
}
func (m *StartClustersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartClustersResponse.Marshal(b, m, deterministic)
}
func (dst *StartClustersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartClustersResponse.Merge(dst, src)
}
func (m *StartClustersResponse) XXX_Size() int {
	return xxx_messageInfo_StartClustersResponse.Size(m)
}
func (m *StartClustersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartClustersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartClustersResponse proto.InternalMessageInfo

func (m *StartClustersResponse) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *StartClustersResponse) GetJobId() []string {
	if m != nil {
		return m.JobId
	}
	return nil
}

type RecoverClustersRequest struct {
	ClusterId            []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	AdvancedParam        []string `protobuf:"bytes,2,rep,name=advanced_param,json=advancedParam,proto3" json:"advanced_param,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecoverClustersRequest) Reset()         { *m = RecoverClustersRequest{} }
func (m *RecoverClustersRequest) String() string { return proto.CompactTextString(m) }
func (*RecoverClustersRequest) ProtoMessage()    {}
func (*RecoverClustersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{39}
}
func (m *RecoverClustersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecoverClustersRequest.Unmarshal(m, b)
}
func (m *RecoverClustersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecoverClustersRequest.Marshal(b, m, deterministic)
}
func (dst *RecoverClustersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecoverClustersRequest.Merge(dst, src)
}
func (m *RecoverClustersRequest) XXX_Size() int {
	return xxx_messageInfo_RecoverClustersRequest.Size(m)
}
func (m *RecoverClustersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RecoverClustersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RecoverClustersRequest proto.InternalMessageInfo

func (m *RecoverClustersRequest) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *RecoverClustersRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type RecoverClustersResponse struct {
	ClusterId            []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	JobId                []string `protobuf:"bytes,2,rep,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecoverClustersResponse) Reset()         { *m = RecoverClustersResponse{} }
func (m *RecoverClustersResponse) String() string { return proto.CompactTextString(m) }
func (*RecoverClustersResponse) ProtoMessage()    {}
func (*RecoverClustersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{40}
}
func (m *RecoverClustersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecoverClustersResponse.Unmarshal(m, b)
}
func (m *RecoverClustersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecoverClustersResponse.Marshal(b, m, deterministic)
}
func (dst *RecoverClustersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecoverClustersResponse.Merge(dst, src)
}
func (m *RecoverClustersResponse) XXX_Size() int {
	return xxx_messageInfo_RecoverClustersResponse.Size(m)
}
func (m *RecoverClustersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecoverClustersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecoverClustersResponse proto.InternalMessageInfo

func (m *RecoverClustersResponse) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *RecoverClustersResponse) GetJobId() []string {
	if m != nil {
		return m.JobId
	}
	return nil
}

type CeaseClustersRequest struct {
	ClusterId            []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	AdvancedParam        []string `protobuf:"bytes,2,rep,name=advanced_param,json=advancedParam,proto3" json:"advanced_param,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CeaseClustersRequest) Reset()         { *m = CeaseClustersRequest{} }
func (m *CeaseClustersRequest) String() string { return proto.CompactTextString(m) }
func (*CeaseClustersRequest) ProtoMessage()    {}
func (*CeaseClustersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{41}
}
func (m *CeaseClustersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CeaseClustersRequest.Unmarshal(m, b)
}
func (m *CeaseClustersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CeaseClustersRequest.Marshal(b, m, deterministic)
}
func (dst *CeaseClustersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CeaseClustersRequest.Merge(dst, src)
}
func (m *CeaseClustersRequest) XXX_Size() int {
	return xxx_messageInfo_CeaseClustersRequest.Size(m)
}
func (m *CeaseClustersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CeaseClustersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CeaseClustersRequest proto.InternalMessageInfo

func (m *CeaseClustersRequest) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *CeaseClustersRequest) GetAdvancedParam() []string {
	if m != nil {
		return m.AdvancedParam
	}
	return nil
}

type CeaseClustersResponse struct {
	ClusterId            []string `protobuf:"bytes,1,rep,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	JobId                []string `protobuf:"bytes,2,rep,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CeaseClustersResponse) Reset()         { *m = CeaseClustersResponse{} }
func (m *CeaseClustersResponse) String() string { return proto.CompactTextString(m) }
func (*CeaseClustersResponse) ProtoMessage()    {}
func (*CeaseClustersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cluster_278d18821242175c, []int{42}
}
func (m *CeaseClustersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CeaseClustersResponse.Unmarshal(m, b)
}
func (m *CeaseClustersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CeaseClustersResponse.Marshal(b, m, deterministic)
}
func (dst *CeaseClustersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CeaseClustersResponse.Merge(dst, src)
}
func (m *CeaseClustersResponse) XXX_Size() int {
	return xxx_messageInfo_CeaseClustersResponse.Size(m)
}
func (m *CeaseClustersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CeaseClustersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CeaseClustersResponse proto.InternalMessageInfo

func (m *CeaseClustersResponse) GetClusterId() []string {
	if m != nil {
		return m.ClusterId
	}
	return nil
}

func (m *CeaseClustersResponse) GetJobId() []string {
	if m != nil {
		return m.JobId
	}
	return nil
}

func init() {
	proto.RegisterType((*DescribeSubnetsRequest)(nil), "openpitrix.DescribeSubnetsRequest")
	proto.RegisterType((*Subnet)(nil), "openpitrix.Subnet")
	proto.RegisterType((*DescribeSubnetsResponse)(nil), "openpitrix.DescribeSubnetsResponse")
	proto.RegisterType((*CreateClusterRequest)(nil), "openpitrix.CreateClusterRequest")
	proto.RegisterType((*CreateClusterResponse)(nil), "openpitrix.CreateClusterResponse")
	proto.RegisterType((*ModifyClusterRequest)(nil), "openpitrix.ModifyClusterRequest")
	proto.RegisterType((*ModifyClusterResponse)(nil), "openpitrix.ModifyClusterResponse")
	proto.RegisterType((*ModifyClusterNodeRequest)(nil), "openpitrix.ModifyClusterNodeRequest")
	proto.RegisterType((*ModifyClusterNodeResponse)(nil), "openpitrix.ModifyClusterNodeResponse")
	proto.RegisterType((*AddTableClusterNodesRequest)(nil), "openpitrix.AddTableClusterNodesRequest")
	proto.RegisterType((*DeleteTableClusterNodesRequest)(nil), "openpitrix.DeleteTableClusterNodesRequest")
	proto.RegisterType((*DeleteClustersRequest)(nil), "openpitrix.DeleteClustersRequest")
	proto.RegisterType((*DeleteClustersResponse)(nil), "openpitrix.DeleteClustersResponse")
	proto.RegisterType((*UpgradeClusterRequest)(nil), "openpitrix.UpgradeClusterRequest")
	proto.RegisterType((*UpgradeClusterResponse)(nil), "openpitrix.UpgradeClusterResponse")
	proto.RegisterType((*RollbackClusterRequest)(nil), "openpitrix.RollbackClusterRequest")
	proto.RegisterType((*RollbackClusterResponse)(nil), "openpitrix.RollbackClusterResponse")
	proto.RegisterType((*ResizeClusterRequest)(nil), "openpitrix.ResizeClusterRequest")
	proto.RegisterType((*ResizeClusterResponse)(nil), "openpitrix.ResizeClusterResponse")
	proto.RegisterType((*AddClusterNodesRequest)(nil), "openpitrix.AddClusterNodesRequest")
	proto.RegisterType((*AddClusterNodesResponse)(nil), "openpitrix.AddClusterNodesResponse")
	proto.RegisterType((*DeleteClusterNodesRequest)(nil), "openpitrix.DeleteClusterNodesRequest")
	proto.RegisterType((*DeleteClusterNodesResponse)(nil), "openpitrix.DeleteClusterNodesResponse")
	proto.RegisterType((*UpdateClusterEnvRequest)(nil), "openpitrix.UpdateClusterEnvRequest")
	proto.RegisterType((*UpdateClusterEnvResponse)(nil), "openpitrix.UpdateClusterEnvResponse")
	proto.RegisterType((*ClusterCommon)(nil), "openpitrix.ClusterCommon")
	proto.RegisterType((*ClusterNode)(nil), "openpitrix.ClusterNode")
	proto.RegisterType((*ClusterRole)(nil), "openpitrix.ClusterRole")
	proto.RegisterType((*ClusterLoadbalancer)(nil), "openpitrix.ClusterLoadbalancer")
	proto.RegisterType((*ClusterLink)(nil), "openpitrix.ClusterLink")
	proto.RegisterType((*Cluster)(nil), "openpitrix.Cluster")
	proto.RegisterType((*DescribeClustersRequest)(nil), "openpitrix.DescribeClustersRequest")
	proto.RegisterType((*DescribeClustersResponse)(nil), "openpitrix.DescribeClustersResponse")
	proto.RegisterType((*DescribeClusterNodesRequest)(nil), "openpitrix.DescribeClusterNodesRequest")
	proto.RegisterType((*DescribeClusterNodesResponse)(nil), "openpitrix.DescribeClusterNodesResponse")
	proto.RegisterType((*StopClustersRequest)(nil), "openpitrix.StopClustersRequest")
	proto.RegisterType((*StopClustersResponse)(nil), "openpitrix.StopClustersResponse")
	proto.RegisterType((*StartClustersRequest)(nil), "openpitrix.StartClustersRequest")
	proto.RegisterType((*StartClustersResponse)(nil), "openpitrix.StartClustersResponse")
	proto.RegisterType((*RecoverClustersRequest)(nil), "openpitrix.RecoverClustersRequest")
	proto.RegisterType((*RecoverClustersResponse)(nil), "openpitrix.RecoverClustersResponse")
	proto.RegisterType((*CeaseClustersRequest)(nil), "openpitrix.CeaseClustersRequest")
	proto.RegisterType((*CeaseClustersResponse)(nil), "openpitrix.CeaseClustersResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ClusterManagerClient is the client API for ClusterManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClusterManagerClient interface {
	DescribeSubnets(ctx context.Context, in *DescribeSubnetsRequest, opts ...grpc.CallOption) (*DescribeSubnetsResponse, error)
	CreateCluster(ctx context.Context, in *CreateClusterRequest, opts ...grpc.CallOption) (*CreateClusterResponse, error)
	ModifyCluster(ctx context.Context, in *ModifyClusterRequest, opts ...grpc.CallOption) (*ModifyClusterResponse, error)
	ModifyClusterNode(ctx context.Context, in *ModifyClusterNodeRequest, opts ...grpc.CallOption) (*ModifyClusterNodeResponse, error)
	AddTableClusterNodes(ctx context.Context, in *AddTableClusterNodesRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteTableClusterNodes(ctx context.Context, in *DeleteTableClusterNodesRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteClusters(ctx context.Context, in *DeleteClustersRequest, opts ...grpc.CallOption) (*DeleteClustersResponse, error)
	UpgradeCluster(ctx context.Context, in *UpgradeClusterRequest, opts ...grpc.CallOption) (*UpgradeClusterResponse, error)
	RollbackCluster(ctx context.Context, in *RollbackClusterRequest, opts ...grpc.CallOption) (*RollbackClusterResponse, error)
	ResizeCluster(ctx context.Context, in *ResizeClusterRequest, opts ...grpc.CallOption) (*ResizeClusterResponse, error)
	AddClusterNodes(ctx context.Context, in *AddClusterNodesRequest, opts ...grpc.CallOption) (*AddClusterNodesResponse, error)
	DeleteClusterNodes(ctx context.Context, in *DeleteClusterNodesRequest, opts ...grpc.CallOption) (*DeleteClusterNodesResponse, error)
	UpdateClusterEnv(ctx context.Context, in *UpdateClusterEnvRequest, opts ...grpc.CallOption) (*UpdateClusterEnvResponse, error)
	DescribeClusters(ctx context.Context, in *DescribeClustersRequest, opts ...grpc.CallOption) (*DescribeClustersResponse, error)
	DescribeClusterNodes(ctx context.Context, in *DescribeClusterNodesRequest, opts ...grpc.CallOption) (*DescribeClusterNodesResponse, error)
	StopClusters(ctx context.Context, in *StopClustersRequest, opts ...grpc.CallOption) (*StopClustersResponse, error)
	StartClusters(ctx context.Context, in *StartClustersRequest, opts ...grpc.CallOption) (*StartClustersResponse, error)
	RecoverClusters(ctx context.Context, in *RecoverClustersRequest, opts ...grpc.CallOption) (*RecoverClustersResponse, error)
	CeaseClusters(ctx context.Context, in *CeaseClustersRequest, opts ...grpc.CallOption) (*CeaseClustersResponse, error)
}

type clusterManagerClient struct {
	cc *grpc.ClientConn
}

func NewClusterManagerClient(cc *grpc.ClientConn) ClusterManagerClient {
	return &clusterManagerClient{cc}
}

func (c *clusterManagerClient) DescribeSubnets(ctx context.Context, in *DescribeSubnetsRequest, opts ...grpc.CallOption) (*DescribeSubnetsResponse, error) {
	out := new(DescribeSubnetsResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.ClusterManager/DescribeSubnets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CreateCluster(ctx context.Context, in *CreateClusterRequest, opts ...grpc.CallOption) (*CreateClusterResponse, error) {
	out := new(CreateClusterResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.ClusterManager/CreateCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ModifyCluster(ctx context.Context, in *ModifyClusterRequest, opts ...grpc.CallOption) (*ModifyClusterResponse, error) {
	out := new(ModifyClusterResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.ClusterManager/ModifyCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ModifyClusterNode(ctx context.Context, in *ModifyClusterNodeRequest, opts ...grpc.CallOption) (*ModifyClusterNodeResponse, error) {
	out := new(ModifyClusterNodeResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.ClusterManager/ModifyClusterNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) AddTableClusterNodes(ctx context.Context, in *AddTableClusterNodesRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/openpitrix.ClusterManager/AddTableClusterNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteTableClusterNodes(ctx context.Context, in *DeleteTableClusterNodesRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/openpitrix.ClusterManager/DeleteTableClusterNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteClusters(ctx context.Context, in *DeleteClustersRequest, opts ...grpc.CallOption) (*DeleteClustersResponse, error) {
	out := new(DeleteClustersResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.ClusterManager/DeleteClusters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpgradeCluster(ctx context.Context, in *UpgradeClusterRequest, opts ...grpc.CallOption) (*UpgradeClusterResponse, error) {
	out := new(UpgradeClusterResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.ClusterManager/UpgradeCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) RollbackCluster(ctx context.Context, in *RollbackClusterRequest, opts ...grpc.CallOption) (*RollbackClusterResponse, error) {
	out := new(RollbackClusterResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.ClusterManager/RollbackCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) ResizeCluster(ctx context.Context, in *ResizeClusterRequest, opts ...grpc.CallOption) (*ResizeClusterResponse, error) {
	out := new(ResizeClusterResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.ClusterManager/ResizeCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) AddClusterNodes(ctx context.Context, in *AddClusterNodesRequest, opts ...grpc.CallOption) (*AddClusterNodesResponse, error) {
	out := new(AddClusterNodesResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.ClusterManager/AddClusterNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DeleteClusterNodes(ctx context.Context, in *DeleteClusterNodesRequest, opts ...grpc.CallOption) (*DeleteClusterNodesResponse, error) {
	out := new(DeleteClusterNodesResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.ClusterManager/DeleteClusterNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) UpdateClusterEnv(ctx context.Context, in *UpdateClusterEnvRequest, opts ...grpc.CallOption) (*UpdateClusterEnvResponse, error) {
	out := new(UpdateClusterEnvResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.ClusterManager/UpdateClusterEnv", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DescribeClusters(ctx context.Context, in *DescribeClustersRequest, opts ...grpc.CallOption) (*DescribeClustersResponse, error) {
	out := new(DescribeClustersResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.ClusterManager/DescribeClusters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) DescribeClusterNodes(ctx context.Context, in *DescribeClusterNodesRequest, opts ...grpc.CallOption) (*DescribeClusterNodesResponse, error) {
	out := new(DescribeClusterNodesResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.ClusterManager/DescribeClusterNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) StopClusters(ctx context.Context, in *StopClustersRequest, opts ...grpc.CallOption) (*StopClustersResponse, error) {
	out := new(StopClustersResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.ClusterManager/StopClusters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) StartClusters(ctx context.Context, in *StartClustersRequest, opts ...grpc.CallOption) (*StartClustersResponse, error) {
	out := new(StartClustersResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.ClusterManager/StartClusters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) RecoverClusters(ctx context.Context, in *RecoverClustersRequest, opts ...grpc.CallOption) (*RecoverClustersResponse, error) {
	out := new(RecoverClustersResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.ClusterManager/RecoverClusters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterManagerClient) CeaseClusters(ctx context.Context, in *CeaseClustersRequest, opts ...grpc.CallOption) (*CeaseClustersResponse, error) {
	out := new(CeaseClustersResponse)
	err := c.cc.Invoke(ctx, "/openpitrix.ClusterManager/CeaseClusters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClusterManagerServer is the server API for ClusterManager service.
type ClusterManagerServer interface {
	DescribeSubnets(context.Context, *DescribeSubnetsRequest) (*DescribeSubnetsResponse, error)
	CreateCluster(context.Context, *CreateClusterRequest) (*CreateClusterResponse, error)
	ModifyCluster(context.Context, *ModifyClusterRequest) (*ModifyClusterResponse, error)
	ModifyClusterNode(context.Context, *ModifyClusterNodeRequest) (*ModifyClusterNodeResponse, error)
	AddTableClusterNodes(context.Context, *AddTableClusterNodesRequest) (*empty.Empty, error)
	DeleteTableClusterNodes(context.Context, *DeleteTableClusterNodesRequest) (*empty.Empty, error)
	DeleteClusters(context.Context, *DeleteClustersRequest) (*DeleteClustersResponse, error)
	UpgradeCluster(context.Context, *UpgradeClusterRequest) (*UpgradeClusterResponse, error)
	RollbackCluster(context.Context, *RollbackClusterRequest) (*RollbackClusterResponse, error)
	ResizeCluster(context.Context, *ResizeClusterRequest) (*ResizeClusterResponse, error)
	AddClusterNodes(context.Context, *AddClusterNodesRequest) (*AddClusterNodesResponse, error)
	DeleteClusterNodes(context.Context, *DeleteClusterNodesRequest) (*DeleteClusterNodesResponse, error)
	UpdateClusterEnv(context.Context, *UpdateClusterEnvRequest) (*UpdateClusterEnvResponse, error)
	DescribeClusters(context.Context, *DescribeClustersRequest) (*DescribeClustersResponse, error)
	DescribeClusterNodes(context.Context, *DescribeClusterNodesRequest) (*DescribeClusterNodesResponse, error)
	StopClusters(context.Context, *StopClustersRequest) (*StopClustersResponse, error)
	StartClusters(context.Context, *StartClustersRequest) (*StartClustersResponse, error)
	RecoverClusters(context.Context, *RecoverClustersRequest) (*RecoverClustersResponse, error)
	CeaseClusters(context.Context, *CeaseClustersRequest) (*CeaseClustersResponse, error)
}

func RegisterClusterManagerServer(s *grpc.Server, srv ClusterManagerServer) {
	s.RegisterService(&_ClusterManager_serviceDesc, srv)
}

func _ClusterManager_DescribeSubnets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeSubnetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DescribeSubnets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/DescribeSubnets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DescribeSubnets(ctx, req.(*DescribeSubnetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CreateCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CreateCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/CreateCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CreateCluster(ctx, req.(*CreateClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ModifyCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ModifyCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/ModifyCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ModifyCluster(ctx, req.(*ModifyClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ModifyClusterNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyClusterNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ModifyClusterNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/ModifyClusterNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ModifyClusterNode(ctx, req.(*ModifyClusterNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_AddTableClusterNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTableClusterNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).AddTableClusterNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/AddTableClusterNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).AddTableClusterNodes(ctx, req.(*AddTableClusterNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteTableClusterNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTableClusterNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteTableClusterNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/DeleteTableClusterNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteTableClusterNodes(ctx, req.(*DeleteTableClusterNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteClustersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/DeleteClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteClusters(ctx, req.(*DeleteClustersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpgradeCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpgradeClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpgradeCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/UpgradeCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpgradeCluster(ctx, req.(*UpgradeClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_RollbackCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RollbackClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).RollbackCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/RollbackCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).RollbackCluster(ctx, req.(*RollbackClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_ResizeCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResizeClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).ResizeCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/ResizeCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).ResizeCluster(ctx, req.(*ResizeClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_AddClusterNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddClusterNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).AddClusterNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/AddClusterNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).AddClusterNodes(ctx, req.(*AddClusterNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DeleteClusterNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteClusterNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DeleteClusterNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/DeleteClusterNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DeleteClusterNodes(ctx, req.(*DeleteClusterNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_UpdateClusterEnv_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateClusterEnvRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).UpdateClusterEnv(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/UpdateClusterEnv",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).UpdateClusterEnv(ctx, req.(*UpdateClusterEnvRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DescribeClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeClustersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DescribeClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/DescribeClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DescribeClusters(ctx, req.(*DescribeClustersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_DescribeClusterNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeClusterNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).DescribeClusterNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/DescribeClusterNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).DescribeClusterNodes(ctx, req.(*DescribeClusterNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_StopClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopClustersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).StopClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/StopClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).StopClusters(ctx, req.(*StopClustersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_StartClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartClustersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).StartClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/StartClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).StartClusters(ctx, req.(*StartClustersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_RecoverClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecoverClustersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).RecoverClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/RecoverClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).RecoverClusters(ctx, req.(*RecoverClustersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterManager_CeaseClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CeaseClustersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterManagerServer).CeaseClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.ClusterManager/CeaseClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterManagerServer).CeaseClusters(ctx, req.(*CeaseClustersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClusterManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openpitrix.ClusterManager",
	HandlerType: (*ClusterManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DescribeSubnets",
			Handler:    _ClusterManager_DescribeSubnets_Handler,
		},
		{
			MethodName: "CreateCluster",
			Handler:    _ClusterManager_CreateCluster_Handler,
		},
		{
			MethodName: "ModifyCluster",
			Handler:    _ClusterManager_ModifyCluster_Handler,
		},
		{
			MethodName: "ModifyClusterNode",
			Handler:    _ClusterManager_ModifyClusterNode_Handler,
		},
		{
			MethodName: "AddTableClusterNodes",
			Handler:    _ClusterManager_AddTableClusterNodes_Handler,
		},
		{
			MethodName: "DeleteTableClusterNodes",
			Handler:    _ClusterManager_DeleteTableClusterNodes_Handler,
		},
		{
			MethodName: "DeleteClusters",
			Handler:    _ClusterManager_DeleteClusters_Handler,
		},
		{
			MethodName: "UpgradeCluster",
			Handler:    _ClusterManager_UpgradeCluster_Handler,
		},
		{
			MethodName: "RollbackCluster",
			Handler:    _ClusterManager_RollbackCluster_Handler,
		},
		{
			MethodName: "ResizeCluster",
			Handler:    _ClusterManager_ResizeCluster_Handler,
		},
		{
			MethodName: "AddClusterNodes",
			Handler:    _ClusterManager_AddClusterNodes_Handler,
		},
		{
			MethodName: "DeleteClusterNodes",
			Handler:    _ClusterManager_DeleteClusterNodes_Handler,
		},
		{
			MethodName: "UpdateClusterEnv",
			Handler:    _ClusterManager_UpdateClusterEnv_Handler,
		},
		{
			MethodName: "DescribeClusters",
			Handler:    _ClusterManager_DescribeClusters_Handler,
		},
		{
			MethodName: "DescribeClusterNodes",
			Handler:    _ClusterManager_DescribeClusterNodes_Handler,
		},
		{
			MethodName: "StopClusters",
			Handler:    _ClusterManager_StopClusters_Handler,
		},
		{
			MethodName: "StartClusters",
			Handler:    _ClusterManager_StartClusters_Handler,
		},
		{
			MethodName: "RecoverClusters",
			Handler:    _ClusterManager_RecoverClusters_Handler,
		},
		{
			MethodName: "CeaseClusters",
			Handler:    _ClusterManager_CeaseClusters_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cluster.proto",
}

func init() { proto.RegisterFile("cluster.proto", fileDescriptor_cluster_278d18821242175c) }

var fileDescriptor_cluster_278d18821242175c = []byte{
	// 3166 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5a, 0xcf, 0x6f, 0x1b, 0xc7,
	0xf5, 0xc7, 0x8a, 0xfa, 0x61, 0x3d, 0x8a, 0x94, 0x34, 0xa2, 0x28, 0x9a, 0x76, 0x12, 0x65, 0x93,
	0x7c, 0xbf, 0x86, 0xf1, 0xb5, 0xec, 0xc8, 0xce, 0x37, 0xb0, 0x5d, 0x37, 0x95, 0x15, 0x37, 0x25,
	0x6a, 0xc7, 0x06, 0x65, 0x27, 0x68, 0x9b, 0x94, 0x59, 0xee, 0x8e, 0xe9, 0x8d, 0x96, 0x3b, 0xdb,
	0xdd, 0x59, 0x3a, 0x0a, 0x7a, 0x69, 0x02, 0x24, 0x48, 0x93, 0x16, 0xad, 0x73, 0xe9, 0xa9, 0x28,
	0x7a, 0xcf, 0xa1, 0x3d, 0xf5, 0x5c, 0xa0, 0x97, 0x5e, 0xfb, 0x2f, 0xf4, 0xd6, 0x7f, 0xa0, 0x40,
	0x81, 0xa2, 0x98, 0x1f, 0xbb, 0xdc, 0x59, 0x2e, 0xa9, 0xa1, 0x65, 0x5b, 0x3d, 0x09, 0xda, 0x7d,
	0x9f, 0xcf, 0xbc, 0x7d, 0xef, 0xcd, 0x7b, 0x8f, 0x33, 0x0f, 0x2a, 0xb6, 0x17, 0x47, 0x14, 0x87,
	0x5b, 0x41, 0x48, 0x28, 0x41, 0x40, 0x02, 0xec, 0x07, 0x2e, 0x0d, 0xdd, 0x8f, 0x9a, 0xa7, 0x7a,
	0x84, 0xf4, 0x3c, 0x7c, 0x9e, 0xbf, 0xe9, 0xc6, 0xf7, 0xcf, 0xe3, 0x7e, 0x40, 0x0f, 0x84, 0x60,
	0xf3, 0xf9, 0xfc, 0xcb, 0x87, 0xa1, 0x15, 0x04, 0x38, 0x8c, 0xe4, 0xfb, 0x17, 0xf2, 0xef, 0xa9,
	0xdb, 0xc7, 0x11, 0xb5, 0xfa, 0x81, 0x14, 0x38, 0x2d, 0x05, 0xac, 0xc0, 0x3d, 0x6f, 0xf9, 0x3e,
	0xa1, 0x16, 0x75, 0x89, 0x9f, 0xc0, 0xff, 0x8f, 0xff, 0xb1, 0xcf, 0xf5, 0xb0, 0x7f, 0x2e, 0x7a,
	0x68, 0xf5, 0x7a, 0x38, 0x3c, 0x4f, 0x02, 0x2e, 0x31, 0x2a, 0x6d, 0x7e, 0x36, 0x03, 0xf5, 0x37,
	0x71, 0x64, 0x87, 0x6e, 0x17, 0xef, 0xc5, 0x5d, 0x1f, 0xd3, 0xa8, 0x8d, 0x7f, 0x12, 0xe3, 0x88,
	0xa2, 0xab, 0x00, 0x61, 0xec, 0xb3, 0xc5, 0x3b, 0xae, 0xd3, 0x30, 0x36, 0x8d, 0x33, 0xe5, 0xed,
	0xd3, 0x5b, 0x62, 0xed, 0xad, 0x44, 0xb9, 0xad, 0x3d, 0x1a, 0xba, 0x7e, 0xef, 0x1d, 0xcb, 0x8b,
	0x71, 0x7b, 0x51, 0xca, 0xb7, 0x1c, 0x54, 0x83, 0x39, 0xcf, 0xed, 0xbb, 0xb4, 0x31, 0xb3, 0x69,
	0x9c, 0xa9, 0xb4, 0xc5, 0x3f, 0xa8, 0x0e, 0xf3, 0xe4, 0xfe, 0xfd, 0x08, 0xd3, 0x46, 0x89, 0x3f,
	0x96, 0xff, 0xa1, 0x6b, 0x50, 0x8e, 0xf8, 0xe2, 0x1d, 0x7a, 0x10, 0xe0, 0xc6, 0xec, 0x98, 0xb5,
	0xee, 0xb5, 0x7c, 0x7a, 0x71, 0x5b, 0xac, 0x05, 0x02, 0x70, 0xf7, 0x20, 0xc0, 0xe8, 0x14, 0x2c,
	0x4a, 0xb8, 0xeb, 0x34, 0xe6, 0x36, 0x4b, 0x67, 0x16, 0xdb, 0x27, 0xc4, 0x83, 0x96, 0x83, 0x5e,
	0x81, 0xaa, 0xe5, 0x0c, 0x2c, 0xdf, 0xc6, 0x4e, 0x27, 0xb0, 0x42, 0xab, 0xdf, 0x98, 0xe7, 0x12,
	0x95, 0xe4, 0xe9, 0x1d, 0xf6, 0xd0, 0xfc, 0xbc, 0x04, 0xf3, 0xc2, 0x00, 0xe8, 0x72, 0x96, 0x4e,
	0xe7, 0xbb, 0x87, 0x8b, 0x5d, 0x80, 0x59, 0xdf, 0xea, 0x63, 0xfe, 0xd5, 0x87, 0xa1, 0xb8, 0x24,
	0xba, 0x0a, 0x65, 0x3b, 0xc4, 0x16, 0xc5, 0x1d, 0x66, 0x39, 0x6e, 0x97, 0xf2, 0x76, 0x73, 0x04,
	0x78, 0x37, 0x89, 0x81, 0x36, 0x08, 0x71, 0xf6, 0x00, 0x7d, 0x1b, 0xca, 0x0e, 0x77, 0x1e, 0xf7,
	0xef, 0x58, 0xbb, 0x65, 0x57, 0xcd, 0x02, 0xd0, 0x0b, 0x50, 0x76, 0xfd, 0x88, 0x32, 0x33, 0x0c,
	0x4d, 0x07, 0xc9, 0xa3, 0x96, 0x83, 0x2e, 0xc2, 0xfc, 0x20, 0xb0, 0xd9, 0xbb, 0x79, 0x0d, 0xee,
	0xb9, 0x41, 0x60, 0xb7, 0x9c, 0xbc, 0x37, 0x17, 0xa6, 0xf3, 0xa6, 0xd9, 0x87, 0x8d, 0x91, 0x88,
	0x8c, 0x02, 0xe2, 0x47, 0x98, 0xe9, 0x4b, 0x09, 0xb5, 0xbc, 0x8e, 0x4d, 0x62, 0x9f, 0x72, 0xdf,
	0x54, 0xda, 0xc0, 0x1f, 0xed, 0xb2, 0x27, 0xe8, 0x55, 0x90, 0x4c, 0x1d, 0x16, 0x64, 0x33, 0x9b,
	0xa5, 0x33, 0xe5, 0x6d, 0xb4, 0x35, 0xdc, 0x99, 0x5b, 0x82, 0xb1, 0x2d, 0x1d, 0xbc, 0x87, 0xa9,
	0xf9, 0xdb, 0x19, 0xa8, 0xed, 0x72, 0x93, 0xee, 0x8a, 0xfd, 0x9c, 0xc4, 0xff, 0x45, 0x98, 0xb7,
	0x82, 0x40, 0x37, 0x06, 0xe6, 0xac, 0x20, 0x68, 0x39, 0x6c, 0xd3, 0x0c, 0x70, 0x18, 0xb9, 0xc4,
	0x67, 0x40, 0x9d, 0x30, 0x58, 0x94, 0xf2, 0x02, 0x9c, 0xd9, 0x71, 0xa5, 0xe9, 0x76, 0xdc, 0x05,
	0x98, 0xb5, 0x89, 0x7f, 0x5f, 0x2b, 0x08, 0xb8, 0x64, 0xc1, 0xce, 0x98, 0x2b, 0xda, 0x19, 0x5f,
	0x18, 0xb0, 0x9e, 0x33, 0x90, 0x74, 0xc7, 0x55, 0x00, 0x99, 0x03, 0xb5, 0x33, 0x84, 0x94, 0x17,
	0xa1, 0xf5, 0x21, 0xe9, 0xea, 0x5a, 0x69, 0xee, 0x43, 0xd2, 0x6d, 0x39, 0xe6, 0x1f, 0x4b, 0x50,
	0xbb, 0x45, 0x1c, 0xf7, 0xfe, 0x41, 0xce, 0x59, 0xe7, 0x60, 0x41, 0x52, 0x4b, 0x3d, 0xd6, 0xb2,
	0x5e, 0x4f, 0x84, 0x13, 0x19, 0xb4, 0x03, 0x2b, 0x89, 0xe6, 0x3e, 0x71, 0x70, 0x26, 0x5a, 0x36,
	0x0a, 0x70, 0x6f, 0x13, 0x07, 0xb7, 0xab, 0xf6, 0xf0, 0x9f, 0x3d, 0x4c, 0xb3, 0x14, 0x21, 0xf1,
	0x04, 0x45, 0x69, 0x2c, 0x45, 0x9b, 0x78, 0x43, 0x0a, 0xf6, 0x4f, 0x8e, 0xc2, 0x73, 0xfd, 0x7d,
	0x4e, 0x31, 0x3b, 0x96, 0xe2, 0xa6, 0xeb, 0xef, 0xa7, 0x14, 0xec, 0x1f, 0x46, 0xf1, 0x16, 0xa0,
	0x84, 0xc2, 0x26, 0xfd, 0x3e, 0xf1, 0x39, 0xc9, 0x1c, 0x27, 0x39, 0x59, 0x40, 0xb2, 0xcb, 0x85,
	0xda, 0xc9, 0xba, 0xe2, 0x5f, 0x46, 0xf4, 0x03, 0x68, 0xa4, 0xba, 0x10, 0xcb, 0xe9, 0x5a, 0x1e,
	0x0b, 0x81, 0x90, 0xd3, 0xcd, 0x73, 0xba, 0x17, 0x8a, 0x74, 0xca, 0x88, 0xb6, 0xeb, 0xf6, 0xe8,
	0x43, 0xb6, 0xc3, 0xee, 0xc2, 0x7a, 0xce, 0x67, 0x4f, 0x20, 0x7e, 0xcc, 0x77, 0xa0, 0xa1, 0xb0,
	0x72, 0x27, 0xc9, 0x68, 0xb8, 0x02, 0x4b, 0x59, 0xf7, 0x4a, 0xea, 0xb1, 0xae, 0x2d, 0x67, 0x5c,
	0x6b, 0xb6, 0xe1, 0x64, 0x01, 0xaf, 0xd4, 0xf8, 0x35, 0x58, 0xe0, 0xf1, 0xa2, 0xa9, 0xee, 0x3c,
	0x13, 0x6e, 0x39, 0xe6, 0x07, 0x70, 0x6a, 0xc7, 0x71, 0xee, 0x5a, 0x5d, 0x0f, 0x67, 0x58, 0xd3,
	0x4a, 0x5b, 0x14, 0x8d, 0xc6, 0x54, 0xd1, 0x68, 0x5e, 0x86, 0xe7, 0xdf, 0xc4, 0x1e, 0xa6, 0x78,
	0xec, 0x22, 0x1b, 0x59, 0xd5, 0xd9, 0x36, 0x4f, 0x94, 0x7b, 0x1f, 0xd6, 0x05, 0x54, 0xa2, 0x52,
	0xc4, 0x73, 0x39, 0xf7, 0x30, 0x50, 0x66, 0x03, 0x8f, 0xa6, 0x8f, 0x99, 0xa2, 0xf4, 0xf1, 0x36,
	0x6b, 0x30, 0x54, 0x7a, 0x69, 0xcc, 0x43, 0xf8, 0xd7, 0x33, 0x09, 0x82, 0xbd, 0x92, 0x29, 0xe0,
	0x4f, 0x06, 0xac, 0xdf, 0x0b, 0x7a, 0xa1, 0xe5, 0xe4, 0x13, 0xf6, 0x91, 0xd2, 0xd1, 0x91, 0x12,
	0xf7, 0xa8, 0x29, 0x4a, 0x45, 0xa6, 0xf8, 0xb9, 0x01, 0xf5, 0xbc, 0xea, 0xc7, 0x96, 0x4a, 0x7f,
	0x0a, 0xf5, 0x36, 0xf1, 0xbc, 0xae, 0x65, 0xef, 0x3f, 0x49, 0x3b, 0x6a, 0x46, 0xc5, 0x97, 0x06,
	0x6c, 0x8c, 0x2c, 0x7f, 0x6c, 0xb6, 0x78, 0x34, 0x03, 0xb5, 0x36, 0x8e, 0xdc, 0x8f, 0x9f, 0x68,
	0x48, 0x5d, 0x80, 0x59, 0x56, 0x19, 0xf4, 0x9a, 0x41, 0x26, 0x89, 0xb6, 0xa0, 0x64, 0x07, 0xf1,
	0xd8, 0xca, 0x9f, 0xed, 0x98, 0x98, 0x20, 0xba, 0x04, 0xf3, 0x7d, 0xdc, 0x27, 0xe1, 0x81, 0x56,
	0xcb, 0x2c, 0x65, 0xa7, 0xa9, 0xfb, 0x39, 0xa3, 0x1c, 0x9b, 0x83, 0xfe, 0x61, 0x40, 0x7d, 0xc7,
	0x71, 0x8a, 0xf2, 0xda, 0x33, 0x76, 0xd1, 0x55, 0x00, 0x9e, 0x46, 0x45, 0x07, 0xaa, 0xe3, 0xa9,
	0x45, 0x26, 0x2f, 0xda, 0xd3, 0x51, 0xcb, 0xcf, 0x8e, 0xdb, 0x1c, 0x23, 0x5f, 0x7b, 0x6c, 0xb6,
	0xff, 0xab, 0x01, 0x27, 0x95, 0x0c, 0x7e, 0x9c, 0xe6, 0xcf, 0x54, 0xb1, 0x52, 0xb6, 0x8a, 0xe9,
	0x9a, 0xf6, 0x97, 0x06, 0x34, 0x8b, 0x3e, 0xe6, 0xd8, 0xac, 0xfb, 0x8d, 0x01, 0x1b, 0xf7, 0x02,
	0x67, 0xd8, 0x5d, 0xdf, 0xf0, 0x07, 0x4f, 0xc4, 0xb6, 0x5b, 0x50, 0xc2, 0xfe, 0x40, 0x4b, 0x15,
	0x26, 0xa8, 0x5b, 0xc3, 0xbe, 0x32, 0xa0, 0x31, 0xaa, 0xef, 0xb1, 0x99, 0xef, 0x0f, 0x55, 0xa8,
	0x28, 0xad, 0xed, 0xb3, 0x0e, 0xc8, 0xdb, 0xb0, 0x1e, 0xe1, 0x70, 0xc0, 0x57, 0xeb, 0xc4, 0x41,
	0x80, 0xc3, 0x4e, 0x97, 0xc4, 0xbe, 0xa3, 0x95, 0x1a, 0x90, 0x80, 0xb6, 0x9c, 0x7b, 0x0c, 0x78,
	0x9d, 0xe1, 0xd0, 0x5b, 0xb0, 0x92, 0xfa, 0xc1, 0xb2, 0xf9, 0x59, 0x8d, 0xd6, 0x6f, 0xba, 0xe5,
	0x04, 0xb5, 0x23, 0x40, 0xe8, 0x0d, 0x58, 0x72, 0x7d, 0x97, 0xfd, 0x12, 0x0e, 0x07, 0xae, 0x8d,
	0x1b, 0x73, 0x3a, 0xa7, 0x03, 0x0c, 0xb1, 0x27, 0x00, 0x68, 0x07, 0x2a, 0x11, 0xb5, 0xc2, 0x21,
	0x83, 0xce, 0x19, 0xc0, 0x12, 0x87, 0x24, 0x14, 0x6f, 0xc0, 0x52, 0x44, 0x49, 0x90, 0x32, 0x2c,
	0xe8, 0xe8, 0xc0, 0x10, 0x09, 0xc1, 0xf7, 0x60, 0x35, 0xb2, 0x2d, 0x0f, 0x77, 0x48, 0x3c, 0xd4,
	0xe3, 0x84, 0x8e, 0x39, 0x38, 0xec, 0x76, 0x9c, 0xaa, 0xf2, 0x5d, 0x58, 0x11, 0x4c, 0xae, 0x9f,
	0x12, 0x2d, 0x6a, 0x10, 0x55, 0x39, 0xaa, 0xe5, 0x27, 0x3c, 0x37, 0x60, 0x39, 0xc4, 0xaa, 0x5d,
	0x40, 0x87, 0x46, 0x82, 0x32, 0x34, 0x0e, 0x8e, 0x68, 0x48, 0x0e, 0x52, 0x9a, 0xb2, 0x0e, 0x8d,
	0x04, 0x65, 0x68, 0x62, 0xd1, 0x51, 0xa6, 0x34, 0x4b, 0x3a, 0x34, 0x12, 0x94, 0xd0, 0xec, 0x42,
	0xd5, 0x8e, 0x23, 0x4a, 0xfa, 0x29, 0x4b, 0x45, 0x83, 0xa5, 0x22, 0x30, 0x19, 0x12, 0xd6, 0xce,
	0xc5, 0x43, 0x77, 0x57, 0x75, 0x48, 0x04, 0x26, 0x67, 0x5e, 0x12, 0x0e, 0x3f, 0x68, 0x59, 0xd7,
	0xbc, 0x24, 0x4c, 0x3f, 0xe8, 0x2e, 0x6c, 0x38, 0x3c, 0xcd, 0x77, 0x22, 0xdf, 0x0a, 0xa2, 0x07,
	0x64, 0xe8, 0xad, 0x15, 0x0d, 0xba, 0x75, 0x01, 0xde, 0x93, 0xd8, 0x4c, 0x38, 0x3f, 0xc0, 0x96,
	0x47, 0x1f, 0x74, 0xec, 0x07, 0xd8, 0xde, 0x6f, 0xac, 0xea, 0x84, 0xb3, 0x40, 0xec, 0x32, 0x00,
	0xfa, 0x7f, 0x58, 0xe8, 0x13, 0xdf, 0xa5, 0x24, 0x6c, 0x20, 0x0d, 0x6c, 0x22, 0x8c, 0xde, 0x84,
	0x6a, 0x60, 0x45, 0x51, 0xf0, 0x20, 0xb4, 0x22, 0xec, 0xe1, 0x28, 0x6a, 0xac, 0xe9, 0x18, 0x45,
	0xc5, 0x30, 0xa3, 0x0c, 0x70, 0x48, 0x5d, 0xdb, 0xf2, 0x3a, 0x2c, 0xaa, 0x5d, 0xbf, 0xd7, 0x09,
	0x88, 0xe7, 0xda, 0x07, 0x8d, 0x9a, 0x8e, 0x51, 0x12, 0xf0, 0x9e, 0xc0, 0xde, 0xe1, 0x50, 0xb4,
	0x0b, 0xcb, 0x56, 0x0f, 0xfb, 0xb4, 0xc3, 0xcf, 0x0d, 0x3d, 0x0f, 0x3b, 0x8d, 0xf5, 0x31, 0xa7,
	0x98, 0xd7, 0x09, 0xf1, 0xa4, 0x6a, 0x1c, 0xd2, 0x4a, 0x10, 0xa8, 0x0d, 0x75, 0x19, 0x80, 0x7d,
	0x4c, 0x2d, 0xc7, 0xa2, 0x56, 0x47, 0x1c, 0x53, 0x36, 0xea, 0x1a, 0x9a, 0xd5, 0x04, 0xf6, 0x96,
	0x84, 0xee, 0x71, 0x24, 0x7a, 0x1d, 0x4e, 0xb8, 0x7d, 0xab, 0xc7, 0x9b, 0x85, 0x0d, 0x1d, 0x6b,
	0x73, 0xe9, 0x96, 0xc3, 0x12, 0x9f, 0x0c, 0x64, 0x69, 0x9d, 0x86, 0x4e, 0xe2, 0x13, 0x10, 0x69,
	0x94, 0xf7, 0xe0, 0xb4, 0xeb, 0xdb, 0x21, 0xee, 0x63, 0x9f, 0x5a, 0x5e, 0x27, 0xd9, 0x17, 0x71,
	0x10, 0x90, 0x90, 0x62, 0xa7, 0x71, 0xf2, 0x50, 0x0b, 0x35, 0x33, 0xf8, 0xeb, 0x62, 0x8b, 0x24,
	0x68, 0xf4, 0x2d, 0x80, 0x07, 0x07, 0x01, 0x0b, 0xca, 0x88, 0x84, 0x8d, 0xa6, 0x86, 0x76, 0x19,
	0x79, 0xf3, 0x9b, 0x32, 0x94, 0x33, 0xdd, 0xcf, 0x63, 0x1e, 0x6a, 0xe4, 0x0a, 0xed, 0xcc, 0xd4,
	0x85, 0x96, 0x1f, 0x94, 0x97, 0xb4, 0x0f, 0xca, 0xaf, 0xa9, 0x67, 0xd5, 0x3a, 0x25, 0x31, 0x7b,
	0x92, 0x7d, 0x19, 0x16, 0x07, 0xc4, 0x8b, 0xfb, 0xf2, 0xa0, 0x5b, 0xe3, 0x50, 0x5f, 0x88, 0xb7,
	0x1c, 0xf6, 0x2b, 0xcb, 0xc1, 0xda, 0x05, 0x50, 0xca, 0xaa, 0xb7, 0x08, 0x0b, 0x53, 0xdd, 0x22,
	0x5c, 0x05, 0x08, 0x42, 0x77, 0x60, 0x51, 0xdc, 0x71, 0x03, 0xad, 0x6a, 0xb7, 0x28, 0xe5, 0x5b,
	0x01, 0x5f, 0x37, 0x69, 0x48, 0xc6, 0x16, 0xb8, 0x6c, 0x13, 0x72, 0x22, 0x69, 0x42, 0xd2, 0xee,
	0x07, 0xb4, 0xbb, 0x9f, 0x4b, 0x30, 0x1f, 0x51, 0x8b, 0xc6, 0x91, 0x56, 0xf1, 0x92, 0xb2, 0xa8,
	0x05, 0xab, 0x34, 0xb4, 0xfc, 0xc8, 0x65, 0x8d, 0x4a, 0x47, 0x12, 0xe8, 0x94, 0xad, 0x95, 0x21,
	0x6c, 0x4f, 0x50, 0xbd, 0x0e, 0x27, 0x7a, 0x21, 0x89, 0xf9, 0x31, 0x7d, 0x45, 0xe3, 0x63, 0x17,
	0xb8, 0x74, 0xcb, 0x41, 0xdb, 0x30, 0x47, 0x1e, 0xfa, 0x38, 0xd4, 0xaa, 0x51, 0x42, 0x94, 0xb5,
	0x10, 0x3d, 0x8f, 0x74, 0x59, 0xf6, 0x4c, 0x2d, 0xbc, 0xac, 0xb1, 0x68, 0x55, 0xa0, 0xf6, 0x12,
	0x3b, 0xdf, 0x80, 0xe5, 0x5c, 0xb2, 0xd3, 0x2a, 0x4a, 0x55, 0x35, 0xcb, 0xb1, 0x7d, 0x1b, 0xc4,
	0xdd, 0xce, 0x3e, 0x3e, 0xd0, 0x2a, 0x44, 0xf3, 0x41, 0xdc, 0xfd, 0x3e, 0x3e, 0x60, 0xd9, 0x4d,
	0x16, 0x31, 0x69, 0x79, 0x9d, 0x4a, 0x24, 0xeb, 0x5e, 0x6a, 0xf5, 0x45, 0x37, 0x92, 0x49, 0x4d,
	0x56, 0xa2, 0x49, 0xa9, 0xec, 0x84, 0x1b, 0x89, 0x0c, 0x86, 0xae, 0x42, 0xd9, 0x8a, 0x29, 0x49,
	0xa0, 0xb5, 0x43, 0xa1, 0xc0, 0xc4, 0x87, 0xe0, 0xec, 0x55, 0xd9, 0xfa, 0x54, 0x57, 0x65, 0x57,
	0xa1, 0x2c, 0x3e, 0x57, 0x80, 0xeb, 0x87, 0x83, 0x85, 0x38, 0x07, 0x67, 0xce, 0x93, 0xf9, 0x06,
	0xd9, 0x18, 0x7b, 0x9e, 0xcc, 0xcf, 0xf9, 0xcb, 0x99, 0x73, 0x7e, 0xf4, 0x1d, 0xa8, 0xaa, 0x27,
	0xf4, 0xb2, 0x9a, 0x4c, 0x38, 0x9d, 0xaf, 0x28, 0xa7, 0xf3, 0xe6, 0xe7, 0x73, 0x69, 0xbe, 0x6e,
	0xcb, 0x23, 0x88, 0xff, 0xe6, 0x43, 0xa9, 0x2d, 0x28, 0xf5, 0x82, 0x58, 0xeb, 0x44, 0x8a, 0x09,
	0x66, 0x0e, 0xb1, 0xe6, 0xa6, 0x38, 0xc4, 0xda, 0x81, 0x4a, 0x5a, 0x0e, 0x22, 0xf7, 0xe3, 0xf1,
	0xb9, 0x39, 0x0b, 0x5e, 0x4a, 0x20, 0x7b, 0xee, 0xc7, 0xc9, 0x8f, 0x93, 0x90, 0x75, 0x08, 0x9c,
	0x41, 0xe7, 0xa2, 0xb2, 0x2c, 0x11, 0x9c, 0xe0, 0x1a, 0x94, 0xfb, 0x24, 0xf6, 0x69, 0x27, 0x20,
	0xae, 0x4f, 0xb5, 0x12, 0x35, 0x70, 0xc0, 0x1d, 0x26, 0xcf, 0x3e, 0x41, 0xc0, 0xe5, 0xf5, 0xbc,
	0xd6, 0xcf, 0x91, 0x25, 0x0e, 0xb9, 0x2d, 0x10, 0x4c, 0x83, 0xfb, 0xae, 0x87, 0x3b, 0xd1, 0x41,
	0x44, 0x71, 0x5f, 0x2b, 0x71, 0x03, 0x03, 0xec, 0x71, 0xf9, 0xe4, 0x8c, 0xa0, 0xac, 0x79, 0x46,
	0x60, 0xfe, 0x6b, 0x06, 0xd6, 0x0a, 0x6e, 0x7e, 0x9e, 0x75, 0x44, 0xbe, 0x03, 0x0d, 0xe5, 0x8e,
	0xca, 0x73, 0x23, 0x8a, 0x7d, 0xb1, 0xb8, 0x4e, 0x43, 0x51, 0xcf, 0xa2, 0x6f, 0x4a, 0x70, 0xcb,
	0x61, 0x75, 0x49, 0xe1, 0x65, 0xdd, 0x96, 0x56, 0x1c, 0xaf, 0x64, 0x61, 0x77, 0x48, 0x48, 0x59,
	0x3f, 0x9b, 0xa3, 0x62, 0x6d, 0xa1, 0x6e, 0xef, 0x51, 0x53, 0xf9, 0x18, 0xb4, 0xe5, 0x98, 0xff,
	0x36, 0xd2, 0x3c, 0x70, 0xd3, 0xf5, 0xf7, 0x8f, 0x6c, 0xf5, 0x29, 0x27, 0x15, 0x6e, 0xc2, 0x1a,
	0xfe, 0x88, 0xe2, 0xd0, 0xb7, 0xbc, 0x4e, 0x66, 0x5d, 0x1d, 0x83, 0xaf, 0x26, 0xc0, 0xdd, 0x74,
	0xfd, 0xb4, 0xfe, 0xce, 0x6a, 0xd7, 0x5f, 0xf3, 0xcf, 0x4b, 0xb0, 0x20, 0x19, 0x9e, 0xf5, 0xc7,
	0xe7, 0x26, 0x2d, 0x4a, 0xd3, 0x4e, 0x5a, 0x0c, 0x87, 0x09, 0x66, 0x1f, 0x77, 0x98, 0x60, 0x6e,
	0xba, 0x3b, 0x29, 0xa5, 0xff, 0x9c, 0x9f, 0xaa, 0xff, 0x1c, 0x4e, 0x7d, 0x2c, 0xe8, 0x4f, 0x7d,
	0xbc, 0x01, 0x4b, 0xf7, 0x43, 0xe2, 0xd3, 0x1e, 0x6f, 0x5b, 0x1d, 0xad, 0x6c, 0x58, 0x4e, 0x11,
	0x82, 0x20, 0xf1, 0x28, 0x9f, 0x1b, 0xd1, 0xe9, 0x5d, 0x93, 0x4a, 0xcb, 0xc7, 0x80, 0xae, 0xc0,
	0x22, 0xf6, 0x1d, 0x9e, 0x8b, 0x23, 0xad, 0x54, 0x38, 0x14, 0x3f, 0xfe, 0x46, 0xf6, 0x26, 0xd4,
	0xd2, 0x5f, 0xbe, 0x21, 0x21, 0xb4, 0x63, 0xd9, 0x36, 0xfb, 0x9d, 0x5f, 0x39, 0xb4, 0x45, 0x42,
	0x09, 0xae, 0x4d, 0x08, 0xdd, 0xe1, 0xa8, 0xc7, 0xea, 0x6e, 0xaf, 0x41, 0x59, 0x76, 0xb7, 0x71,
	0x3c, 0xa1, 0xb1, 0x55, 0x6a, 0x89, 0x00, 0xdc, 0x8b, 0x5d, 0x07, 0xed, 0x42, 0x35, 0x3d, 0x89,
	0x12, 0x86, 0xd0, 0xe9, 0x69, 0x2b, 0xc9, 0x41, 0x94, 0xb0, 0xc2, 0x35, 0x58, 0x4a, 0x48, 0x78,
	0x9b, 0xb6, 0x7a, 0x68, 0x9b, 0x56, 0x96, 0xf2, 0xb2, 0xc9, 0xcb, 0x0e, 0xd0, 0xa0, 0xe9, 0x06,
	0x68, 0x72, 0xed, 0xe5, 0xda, 0x51, 0xda, 0xcb, 0xda, 0x54, 0xed, 0x65, 0xd1, 0xfd, 0xff, 0xfa,
	0xd1, 0xa7, 0x51, 0xea, 0x47, 0x9f, 0x46, 0xd9, 0x78, 0x12, 0xd3, 0x28, 0x8d, 0x27, 0x3b, 0x8d,
	0x72, 0xf2, 0x68, 0xd3, 0x28, 0x9f, 0x96, 0x86, 0xf3, 0x65, 0x53, 0x4e, 0x3c, 0xac, 0xa7, 0x49,
	0x5c, 0x4e, 0x24, 0x88, 0x34, 0xfd, 0x9c, 0x92, 0xa6, 0xc5, 0xad, 0x49, 0x26, 0x11, 0xd7, 0xd3,
	0xd4, 0x22, 0x6e, 0xa4, 0x92, 0xe4, 0xf1, 0x9c, 0x12, 0xac, 0xe2, 0x0a, 0x36, 0x13, 0x8e, 0x2f,
	0xe6, 0xf2, 0xa9, 0x98, 0x5a, 0x54, 0x32, 0xe6, 0x98, 0x8a, 0xbc, 0xf0, 0x78, 0x15, 0x39, 0x1d,
	0xd9, 0x3c, 0x51, 0x3c, 0xb2, 0xb9, 0x38, 0x32, 0xb2, 0x89, 0xad, 0xd0, 0x7e, 0xd0, 0x79, 0x48,
	0x42, 0x47, 0xaf, 0xf3, 0x14, 0x80, 0x77, 0x49, 0xe8, 0x98, 0x7f, 0x31, 0xa0, 0x31, 0xea, 0x05,
	0xdd, 0x31, 0xbf, 0x4b, 0x90, 0x24, 0xfe, 0xcc, 0xe4, 0x56, 0xe1, 0xc4, 0x57, 0xe2, 0x4f, 0x16,
	0x54, 0x2f, 0x41, 0x25, 0x31, 0xf8, 0xf0, 0xf6, 0xb6, 0xd2, 0x5e, 0x92, 0x0f, 0x05, 0xf5, 0x39,
	0x58, 0xf3, 0xac, 0x88, 0x76, 0xe8, 0x43, 0xd2, 0x79, 0x88, 0xf1, 0xbe, 0x14, 0x9d, 0xe5, 0xa2,
	0x2b, 0xec, 0xd5, 0xdd, 0x87, 0xe4, 0x5d, 0x8c, 0xf7, 0xb9, 0xb8, 0xf9, 0x4f, 0x03, 0x4e, 0xe5,
	0xbe, 0xe3, 0xc9, 0x5d, 0x8f, 0x66, 0x2e, 0x3b, 0x67, 0x94, 0xcb, 0xce, 0x61, 0x48, 0x95, 0x94,
	0x90, 0x4a, 0x5d, 0x38, 0x5b, 0xec, 0xc2, 0xb9, 0x49, 0x2e, 0x9c, 0x9f, 0xd2, 0x85, 0x9f, 0x18,
	0x70, 0xba, 0xf8, 0xd3, 0x75, 0xdd, 0x78, 0xf4, 0x29, 0x3c, 0xf3, 0x47, 0xb0, 0xb6, 0x47, 0x49,
	0xf0, 0x74, 0x46, 0x97, 0x6e, 0x42, 0x4d, 0x25, 0x3f, 0xd2, 0xe0, 0xd2, 0x7b, 0x8c, 0xcd, 0x0a,
	0xe9, 0xd3, 0xd1, 0xf5, 0x16, 0xac, 0xe7, 0xd8, 0x8f, 0xa4, 0xec, 0x8f, 0xa1, 0xde, 0xc6, 0x36,
	0x19, 0xe0, 0xf0, 0xe9, 0xa8, 0x7b, 0x1b, 0x36, 0x46, 0xf8, 0x8f, 0x6a, 0xdd, 0x5d, 0x6c, 0x45,
	0xf8, 0xa9, 0x59, 0x37, 0xc7, 0x7e, 0x14, 0x65, 0xb7, 0x3f, 0xad, 0x41, 0x55, 0x52, 0xdd, 0xb2,
	0x7c, 0xab, 0x87, 0x43, 0xf4, 0x0b, 0x03, 0x96, 0x73, 0x63, 0xcf, 0xc8, 0xcc, 0xee, 0x82, 0xe2,
	0x29, 0xfd, 0xe6, 0x4b, 0x13, 0x65, 0x84, 0x96, 0xe6, 0xab, 0x8f, 0x76, 0x10, 0x5a, 0x71, 0xe4,
	0xdb, 0x4d, 0xd1, 0xe8, 0x47, 0x9f, 0xfc, 0xed, 0xef, 0x5f, 0xcf, 0xd4, 0x51, 0xed, 0xfc, 0xe0,
	0xd5, 0xf3, 0x52, 0xe5, 0xe8, 0xbc, 0x7c, 0x87, 0x3e, 0x37, 0xa0, 0xa2, 0x4c, 0xfd, 0xa2, 0x4d,
	0x65, 0x4f, 0x16, 0x4c, 0x4c, 0x37, 0x5f, 0x9c, 0x20, 0x31, 0xd4, 0x64, 0x05, 0x55, 0x45, 0xe3,
	0xb4, 0x29, 0x17, 0xe5, 0x7a, 0x34, 0xcc, 0x35, 0x45, 0x0f, 0x21, 0x72, 0xc5, 0x38, 0x8b, 0xee,
	0x42, 0x45, 0x19, 0xc8, 0x54, 0x15, 0x29, 0x9a, 0x06, 0x56, 0x15, 0x29, 0x9e, 0x3d, 0xfd, 0x00,
	0x56, 0x47, 0xc6, 0x3c, 0xd1, 0xcb, 0x63, 0x71, 0x99, 0xe9, 0xd2, 0xe6, 0x2b, 0x87, 0x48, 0xc9,
	0x15, 0xde, 0x85, 0x5a, 0xd1, 0xd0, 0x27, 0xfa, 0xdf, 0x2c, 0x7c, 0xc2, 0x58, 0x68, 0xb3, 0x3e,
	0x92, 0x8a, 0x6f, 0xf4, 0x03, 0x7a, 0x80, 0xde, 0x67, 0x0d, 0x4c, 0xe1, 0xac, 0x27, 0x3a, 0xab,
	0x46, 0xc3, 0xa4, 0x81, 0xd0, 0xb1, 0xf4, 0x5f, 0x1a, 0x50, 0x55, 0x27, 0x36, 0xd1, 0x8b, 0xa3,
	0xb4, 0xb9, 0x7d, 0xd6, 0x34, 0x27, 0x89, 0x48, 0xe7, 0x6f, 0x3f, 0xda, 0x59, 0x45, 0xcb, 0xe2,
	0x6a, 0x35, 0x71, 0x7e, 0x54, 0xe8, 0x7d, 0x21, 0xc3, 0xbc, 0xff, 0x95, 0x01, 0x55, 0x75, 0x66,
	0x52, 0xd5, 0xa6, 0x70, 0x14, 0x54, 0xd5, 0xa6, 0x78, 0xe4, 0xd2, 0xbc, 0xc8, 0xb5, 0x91, 0x3f,
	0x1f, 0x94, 0x58, 0x3c, 0x69, 0xaa, 0x7b, 0x42, 0xca, 0x30, 0x75, 0x7e, 0x6d, 0xc0, 0x72, 0x6e,
	0x6e, 0x51, 0xdd, 0xa6, 0xc5, 0x33, 0x95, 0xea, 0x36, 0x1d, 0x33, 0xf8, 0x68, 0xbe, 0xc6, 0xb7,
	0x69, 0x28, 0xdf, 0x2a, 0x2a, 0x35, 0xcd, 0x75, 0x45, 0xa5, 0x44, 0x88, 0xe9, 0xc4, 0xb6, 0xaa,
	0x32, 0xa8, 0xa7, 0xee, 0x90, 0xa2, 0xc1, 0x46, 0x75, 0x87, 0x14, 0x4e, 0xf9, 0xc9, 0xad, 0x1a,
	0xf2, 0x77, 0x13, 0xb7, 0xaa, 0x10, 0x61, 0x9a, 0x7c, 0x6d, 0xc0, 0x72, 0x6e, 0x70, 0x4d, 0xb5,
	0x4e, 0xf1, 0x0c, 0x9f, 0x6a, 0x9d, 0x31, 0x93, 0x6f, 0xe6, 0xeb, 0x8f, 0x76, 0xd6, 0xd0, 0xaa,
	0xe5, 0x38, 0x89, 0x32, 0x9b, 0xac, 0x69, 0x10, 0xf1, 0x73, 0xca, 0xac, 0x2b, 0x2a, 0x59, 0x8e,
	0xc3, 0x5b, 0x8a, 0x88, 0x69, 0xf5, 0x7b, 0x03, 0xd0, 0xe8, 0xcc, 0x17, 0x7a, 0x65, 0x6c, 0xc4,
	0x2a, 0xba, 0xfd, 0xcf, 0x61, 0x62, 0x52, 0xbd, 0x6b, 0x8f, 0x76, 0xea, 0xa8, 0xa6, 0x06, 0x77,
	0x46, 0xc3, 0xe7, 0xcd, 0x93, 0x05, 0x11, 0x3e, 0x54, 0xf2, 0x37, 0x06, 0xac, 0xe4, 0xe7, 0xaa,
	0xd0, 0x4b, 0x6a, 0x18, 0x17, 0x4e, 0x89, 0x35, 0x5f, 0x9e, 0x2c, 0x24, 0xd5, 0xbb, 0xfc, 0x68,
	0xa7, 0x86, 0x50, 0xcc, 0x5f, 0xa7, 0xea, 0x61, 0x7f, 0xc0, 0x95, 0x3b, 0xbd, 0xbd, 0x91, 0x0b,
	0x78, 0x26, 0xd6, 0xc1, 0xfe, 0x80, 0xa9, 0xf6, 0x85, 0x01, 0x2b, 0xf9, 0x5e, 0x1d, 0x15, 0xd6,
	0x9d, 0x7c, 0x52, 0x78, 0x79, 0xb2, 0x90, 0x54, 0xed, 0x2c, 0x77, 0x6c, 0x5a, 0x9d, 0x94, 0xc4,
	0x50, 0x45, 0x4b, 0x59, 0xcd, 0xd0, 0xef, 0x0c, 0xa8, 0x15, 0x35, 0x9d, 0x6a, 0x56, 0x9d, 0xd0,
	0x91, 0x37, 0xcf, 0x1c, 0x2e, 0x38, 0xdc, 0x8e, 0x0d, 0x54, 0xcf, 0xeb, 0x95, 0xf1, 0x69, 0x0d,
	0x21, 0xc5, 0x6c, 0xfc, 0x0d, 0xfa, 0x99, 0x01, 0x4b, 0xd9, 0xb6, 0x11, 0x29, 0x3f, 0x55, 0x0b,
	0xba, 0xd5, 0xe6, 0xe6, 0x78, 0x01, 0xa9, 0xca, 0xd6, 0xa3, 0x9d, 0x65, 0x54, 0x89, 0x28, 0x09,
	0x54, 0xf3, 0xd4, 0xcd, 0x55, 0xb5, 0x7a, 0x53, 0x12, 0x30, 0x97, 0x7d, 0x66, 0x40, 0x45, 0x69,
	0x07, 0x51, 0x6e, 0x8d, 0xd1, 0x3e, 0x54, 0x4d, 0x09, 0x85, 0xbd, 0xa4, 0x79, 0x81, 0xa7, 0x04,
	0x3e, 0xc7, 0xa4, 0xea, 0xb1, 0x61, 0xa2, 0x9c, 0x1e, 0x56, 0x48, 0x99, 0x22, 0xbf, 0x62, 0xf9,
	0x52, 0x6d, 0xf4, 0x72, 0xf9, 0xb2, 0xb0, 0xcb, 0xcc, 0xe5, 0xcb, 0xe2, 0x4e, 0xd1, 0xbc, 0x24,
	0xf2, 0xa5, 0x78, 0xab, 0x2a, 0x94, 0x4f, 0xe1, 0x52, 0x28, 0xb1, 0x8d, 0xd2, 0xcc, 0xe5, 0x3a,
	0x9b, 0x82, 0x2e, 0x32, 0xd7, 0xd9, 0x14, 0x75, 0x82, 0xd2, 0x36, 0x36, 0x7b, 0x37, 0xd9, 0x36,
	0x5c, 0xe4, 0x8a, 0x71, 0xf6, 0xfa, 0xec, 0x0f, 0x67, 0x82, 0x6e, 0x77, 0x9e, 0x97, 0xdf, 0x8b,
	0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0xaa, 0x62, 0x7f, 0xb9, 0x4f, 0x3a, 0x00, 0x00,
}
