// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// OpenpitrixRelease openpitrix release
// swagger:model openpitrixRelease
type OpenpitrixRelease struct {

	// deleted time
	DeletedTime strfmt.DateTime `json:"deleted_time,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// first deployed time
	FirstDeployedTime strfmt.DateTime `json:"first_deployed_time,omitempty"`

	// last deployed time
	LastDeployedTime strfmt.DateTime `json:"last_deployed_time,omitempty"`

	// namespace
	Namespace string `json:"namespace,omitempty"`

	// release name
	ReleaseName string `json:"release_name,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// version
	Version int32 `json:"version,omitempty"`
}

// Validate validates this openpitrix release
func (m *OpenpitrixRelease) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *OpenpitrixRelease) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OpenpitrixRelease) UnmarshalBinary(b []byte) error {
	var res OpenpitrixRelease
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
