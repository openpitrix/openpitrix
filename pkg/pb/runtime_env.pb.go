// Code generated by protoc-gen-go. DO NOT EDIT.
// source: runtime_env.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/wrappers"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RuntimeEnv struct {
	RuntimeEnvId           *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=runtime_env_id,json=runtimeEnvId" json:"runtime_env_id,omitempty"`
	Name                   *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description            *google_protobuf.StringValue `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	RuntimeEnvUrl          *google_protobuf.StringValue `protobuf:"bytes,4,opt,name=runtime_env_url,json=runtimeEnvUrl" json:"runtime_env_url,omitempty"`
	RuntimeEnvCredentialId *google_protobuf.StringValue `protobuf:"bytes,5,opt,name=runtime_env_credential_id,json=runtimeEnvCredentialId" json:"runtime_env_credential_id,omitempty"`
	Labels                 *google_protobuf.StringValue `protobuf:"bytes,6,opt,name=labels" json:"labels,omitempty"`
	Owner                  *google_protobuf.StringValue `protobuf:"bytes,7,opt,name=owner" json:"owner,omitempty"`
	Status                 *google_protobuf.StringValue `protobuf:"bytes,8,opt,name=status" json:"status,omitempty"`
	CreateTime             *google_protobuf1.Timestamp  `protobuf:"bytes,9,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	StatusTime             *google_protobuf1.Timestamp  `protobuf:"bytes,10,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
}

func (m *RuntimeEnv) Reset()                    { *m = RuntimeEnv{} }
func (m *RuntimeEnv) String() string            { return proto.CompactTextString(m) }
func (*RuntimeEnv) ProtoMessage()               {}
func (*RuntimeEnv) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *RuntimeEnv) GetRuntimeEnvId() *google_protobuf.StringValue {
	if m != nil {
		return m.RuntimeEnvId
	}
	return nil
}

func (m *RuntimeEnv) GetName() *google_protobuf.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *RuntimeEnv) GetDescription() *google_protobuf.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *RuntimeEnv) GetRuntimeEnvUrl() *google_protobuf.StringValue {
	if m != nil {
		return m.RuntimeEnvUrl
	}
	return nil
}

func (m *RuntimeEnv) GetRuntimeEnvCredentialId() *google_protobuf.StringValue {
	if m != nil {
		return m.RuntimeEnvCredentialId
	}
	return nil
}

func (m *RuntimeEnv) GetLabels() *google_protobuf.StringValue {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *RuntimeEnv) GetOwner() *google_protobuf.StringValue {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *RuntimeEnv) GetStatus() *google_protobuf.StringValue {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *RuntimeEnv) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *RuntimeEnv) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

type CreateRuntimeEnvRequest struct {
	Name          *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description   *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Labels        *google_protobuf.StringValue `protobuf:"bytes,3,opt,name=labels" json:"labels,omitempty"`
	RuntimeEnvUrl *google_protobuf.StringValue `protobuf:"bytes,4,opt,name=runtime_env_url,json=runtimeEnvUrl" json:"runtime_env_url,omitempty"`
}

func (m *CreateRuntimeEnvRequest) Reset()                    { *m = CreateRuntimeEnvRequest{} }
func (m *CreateRuntimeEnvRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRuntimeEnvRequest) ProtoMessage()               {}
func (*CreateRuntimeEnvRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *CreateRuntimeEnvRequest) GetName() *google_protobuf.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *CreateRuntimeEnvRequest) GetDescription() *google_protobuf.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *CreateRuntimeEnvRequest) GetLabels() *google_protobuf.StringValue {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateRuntimeEnvRequest) GetRuntimeEnvUrl() *google_protobuf.StringValue {
	if m != nil {
		return m.RuntimeEnvUrl
	}
	return nil
}

type CreateRuntimeEnvResponse struct {
	RuntimeEnv *RuntimeEnv `protobuf:"bytes,1,opt,name=runtime_env,json=runtimeEnv" json:"runtime_env,omitempty"`
}

func (m *CreateRuntimeEnvResponse) Reset()                    { *m = CreateRuntimeEnvResponse{} }
func (m *CreateRuntimeEnvResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateRuntimeEnvResponse) ProtoMessage()               {}
func (*CreateRuntimeEnvResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *CreateRuntimeEnvResponse) GetRuntimeEnv() *RuntimeEnv {
	if m != nil {
		return m.RuntimeEnv
	}
	return nil
}

type DescribeRuntimeEnvsRequest struct {
	RuntimeEnvIds []*google_protobuf.StringValue `protobuf:"bytes,1,rep,name=runtime_env_ids,json=runtimeEnvIds" json:"runtime_env_ids,omitempty"`
	Statuses      []*google_protobuf.StringValue `protobuf:"bytes,2,rep,name=statuses" json:"statuses,omitempty"`
	SearchWord    *google_protobuf.StringValue   `protobuf:"bytes,3,opt,name=search_word,json=searchWord" json:"search_word,omitempty"`
	Selector      *google_protobuf.StringValue   `protobuf:"bytes,4,opt,name=selector" json:"selector,omitempty"`
	Owners        []*google_protobuf.StringValue `protobuf:"bytes,5,rep,name=owners" json:"owners,omitempty"`
	Limit         *google_protobuf.UInt32Value   `protobuf:"bytes,6,opt,name=limit" json:"limit,omitempty"`
	Offset        *google_protobuf.UInt32Value   `protobuf:"bytes,7,opt,name=offset" json:"offset,omitempty"`
	Verbose       *google_protobuf.UInt32Value   `protobuf:"bytes,8,opt,name=verbose" json:"verbose,omitempty"`
}

func (m *DescribeRuntimeEnvsRequest) Reset()                    { *m = DescribeRuntimeEnvsRequest{} }
func (m *DescribeRuntimeEnvsRequest) String() string            { return proto.CompactTextString(m) }
func (*DescribeRuntimeEnvsRequest) ProtoMessage()               {}
func (*DescribeRuntimeEnvsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *DescribeRuntimeEnvsRequest) GetRuntimeEnvIds() []*google_protobuf.StringValue {
	if m != nil {
		return m.RuntimeEnvIds
	}
	return nil
}

func (m *DescribeRuntimeEnvsRequest) GetStatuses() []*google_protobuf.StringValue {
	if m != nil {
		return m.Statuses
	}
	return nil
}

func (m *DescribeRuntimeEnvsRequest) GetSearchWord() *google_protobuf.StringValue {
	if m != nil {
		return m.SearchWord
	}
	return nil
}

func (m *DescribeRuntimeEnvsRequest) GetSelector() *google_protobuf.StringValue {
	if m != nil {
		return m.Selector
	}
	return nil
}

func (m *DescribeRuntimeEnvsRequest) GetOwners() []*google_protobuf.StringValue {
	if m != nil {
		return m.Owners
	}
	return nil
}

func (m *DescribeRuntimeEnvsRequest) GetLimit() *google_protobuf.UInt32Value {
	if m != nil {
		return m.Limit
	}
	return nil
}

func (m *DescribeRuntimeEnvsRequest) GetOffset() *google_protobuf.UInt32Value {
	if m != nil {
		return m.Offset
	}
	return nil
}

func (m *DescribeRuntimeEnvsRequest) GetVerbose() *google_protobuf.UInt32Value {
	if m != nil {
		return m.Verbose
	}
	return nil
}

type DescribeRuntimeEnvsResponse struct {
	TotalCount    *google_protobuf.UInt32Value `protobuf:"bytes,1,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	RuntimeEnvSet []*RuntimeEnv                `protobuf:"bytes,2,rep,name=runtime_env_set,json=runtimeEnvSet" json:"runtime_env_set,omitempty"`
}

func (m *DescribeRuntimeEnvsResponse) Reset()                    { *m = DescribeRuntimeEnvsResponse{} }
func (m *DescribeRuntimeEnvsResponse) String() string            { return proto.CompactTextString(m) }
func (*DescribeRuntimeEnvsResponse) ProtoMessage()               {}
func (*DescribeRuntimeEnvsResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *DescribeRuntimeEnvsResponse) GetTotalCount() *google_protobuf.UInt32Value {
	if m != nil {
		return m.TotalCount
	}
	return nil
}

func (m *DescribeRuntimeEnvsResponse) GetRuntimeEnvSet() []*RuntimeEnv {
	if m != nil {
		return m.RuntimeEnvSet
	}
	return nil
}

type ModifyRuntimeEnvRequest struct {
	RuntimeEnvId *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=runtime_env_id,json=runtimeEnvId" json:"runtime_env_id,omitempty"`
	Name         *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description  *google_protobuf.StringValue `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Labels       *google_protobuf.StringValue `protobuf:"bytes,4,opt,name=labels" json:"labels,omitempty"`
}

func (m *ModifyRuntimeEnvRequest) Reset()                    { *m = ModifyRuntimeEnvRequest{} }
func (m *ModifyRuntimeEnvRequest) String() string            { return proto.CompactTextString(m) }
func (*ModifyRuntimeEnvRequest) ProtoMessage()               {}
func (*ModifyRuntimeEnvRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *ModifyRuntimeEnvRequest) GetRuntimeEnvId() *google_protobuf.StringValue {
	if m != nil {
		return m.RuntimeEnvId
	}
	return nil
}

func (m *ModifyRuntimeEnvRequest) GetName() *google_protobuf.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ModifyRuntimeEnvRequest) GetDescription() *google_protobuf.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ModifyRuntimeEnvRequest) GetLabels() *google_protobuf.StringValue {
	if m != nil {
		return m.Labels
	}
	return nil
}

type ModifyRuntimeEnvResponse struct {
	RuntimeEnv *RuntimeEnv `protobuf:"bytes,1,opt,name=runtime_env,json=runtimeEnv" json:"runtime_env,omitempty"`
}

func (m *ModifyRuntimeEnvResponse) Reset()                    { *m = ModifyRuntimeEnvResponse{} }
func (m *ModifyRuntimeEnvResponse) String() string            { return proto.CompactTextString(m) }
func (*ModifyRuntimeEnvResponse) ProtoMessage()               {}
func (*ModifyRuntimeEnvResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *ModifyRuntimeEnvResponse) GetRuntimeEnv() *RuntimeEnv {
	if m != nil {
		return m.RuntimeEnv
	}
	return nil
}

type DeleteRuntimeEnvRequest struct {
	RuntimeEnvId *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=runtime_env_id,json=runtimeEnvId" json:"runtime_env_id,omitempty"`
}

func (m *DeleteRuntimeEnvRequest) Reset()                    { *m = DeleteRuntimeEnvRequest{} }
func (m *DeleteRuntimeEnvRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRuntimeEnvRequest) ProtoMessage()               {}
func (*DeleteRuntimeEnvRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *DeleteRuntimeEnvRequest) GetRuntimeEnvId() *google_protobuf.StringValue {
	if m != nil {
		return m.RuntimeEnvId
	}
	return nil
}

type DeleteRuntimeEnvResponse struct {
	RuntimeEnv *RuntimeEnv `protobuf:"bytes,1,opt,name=runtime_env,json=runtimeEnv" json:"runtime_env,omitempty"`
}

func (m *DeleteRuntimeEnvResponse) Reset()                    { *m = DeleteRuntimeEnvResponse{} }
func (m *DeleteRuntimeEnvResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteRuntimeEnvResponse) ProtoMessage()               {}
func (*DeleteRuntimeEnvResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *DeleteRuntimeEnvResponse) GetRuntimeEnv() *RuntimeEnv {
	if m != nil {
		return m.RuntimeEnv
	}
	return nil
}

type RuntimeEnvCredential struct {
	RuntimeEnvCredentialId *google_protobuf.StringValue   `protobuf:"bytes,1,opt,name=runtime_env_credential_id,json=runtimeEnvCredentialId" json:"runtime_env_credential_id,omitempty"`
	Name                   *google_protobuf.StringValue   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description            *google_protobuf.StringValue   `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Content                map[string]string              `protobuf:"bytes,4,rep,name=content" json:"content,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Owner                  *google_protobuf.StringValue   `protobuf:"bytes,5,opt,name=owner" json:"owner,omitempty"`
	RuntimeEnvIds          []*google_protobuf.StringValue `protobuf:"bytes,6,rep,name=runtime_env_ids,json=runtimeEnvIds" json:"runtime_env_ids,omitempty"`
	Status                 *google_protobuf.StringValue   `protobuf:"bytes,7,opt,name=status" json:"status,omitempty"`
	CreateTime             *google_protobuf1.Timestamp    `protobuf:"bytes,9,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	StatusTime             *google_protobuf1.Timestamp    `protobuf:"bytes,10,opt,name=status_time,json=statusTime" json:"status_time,omitempty"`
}

func (m *RuntimeEnvCredential) Reset()                    { *m = RuntimeEnvCredential{} }
func (m *RuntimeEnvCredential) String() string            { return proto.CompactTextString(m) }
func (*RuntimeEnvCredential) ProtoMessage()               {}
func (*RuntimeEnvCredential) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *RuntimeEnvCredential) GetRuntimeEnvCredentialId() *google_protobuf.StringValue {
	if m != nil {
		return m.RuntimeEnvCredentialId
	}
	return nil
}

func (m *RuntimeEnvCredential) GetName() *google_protobuf.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *RuntimeEnvCredential) GetDescription() *google_protobuf.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *RuntimeEnvCredential) GetContent() map[string]string {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *RuntimeEnvCredential) GetOwner() *google_protobuf.StringValue {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *RuntimeEnvCredential) GetRuntimeEnvIds() []*google_protobuf.StringValue {
	if m != nil {
		return m.RuntimeEnvIds
	}
	return nil
}

func (m *RuntimeEnvCredential) GetStatus() *google_protobuf.StringValue {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *RuntimeEnvCredential) GetCreateTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *RuntimeEnvCredential) GetStatusTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.StatusTime
	}
	return nil
}

type CreateRuntimeEnvCredentialRequset struct {
	Name        *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Content     map[string]string            `protobuf:"bytes,3,rep,name=content" json:"content,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *CreateRuntimeEnvCredentialRequset) Reset()         { *m = CreateRuntimeEnvCredentialRequset{} }
func (m *CreateRuntimeEnvCredentialRequset) String() string { return proto.CompactTextString(m) }
func (*CreateRuntimeEnvCredentialRequset) ProtoMessage()    {}
func (*CreateRuntimeEnvCredentialRequset) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{10}
}

func (m *CreateRuntimeEnvCredentialRequset) GetName() *google_protobuf.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *CreateRuntimeEnvCredentialRequset) GetDescription() *google_protobuf.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *CreateRuntimeEnvCredentialRequset) GetContent() map[string]string {
	if m != nil {
		return m.Content
	}
	return nil
}

type CreateRuntimeEnvCredentialResponse struct {
	RuntimeEnvCredential *RuntimeEnvCredential `protobuf:"bytes,1,opt,name=runtime_env_credential,json=runtimeEnvCredential" json:"runtime_env_credential,omitempty"`
}

func (m *CreateRuntimeEnvCredentialResponse) Reset()         { *m = CreateRuntimeEnvCredentialResponse{} }
func (m *CreateRuntimeEnvCredentialResponse) String() string { return proto.CompactTextString(m) }
func (*CreateRuntimeEnvCredentialResponse) ProtoMessage()    {}
func (*CreateRuntimeEnvCredentialResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{11}
}

func (m *CreateRuntimeEnvCredentialResponse) GetRuntimeEnvCredential() *RuntimeEnvCredential {
	if m != nil {
		return m.RuntimeEnvCredential
	}
	return nil
}

type DescribeRuntimeEnvCredentialsRequset struct {
	RuntimeEnvCredentialIds []*google_protobuf.StringValue `protobuf:"bytes,1,rep,name=runtime_env_credential_ids,json=runtimeEnvCredentialIds" json:"runtime_env_credential_ids,omitempty"`
	Statuses                []*google_protobuf.StringValue `protobuf:"bytes,2,rep,name=statuses" json:"statuses,omitempty"`
	SearchWord              *google_protobuf.StringValue   `protobuf:"bytes,3,opt,name=search_word,json=searchWord" json:"search_word,omitempty"`
	Owners                  []*google_protobuf.StringValue `protobuf:"bytes,4,rep,name=owners" json:"owners,omitempty"`
	Limit                   *google_protobuf.UInt32Value   `protobuf:"bytes,5,opt,name=limit" json:"limit,omitempty"`
	Offset                  *google_protobuf.UInt32Value   `protobuf:"bytes,6,opt,name=offset" json:"offset,omitempty"`
	Verbose                 *google_protobuf.UInt32Value   `protobuf:"bytes,7,opt,name=verbose" json:"verbose,omitempty"`
}

func (m *DescribeRuntimeEnvCredentialsRequset) Reset()         { *m = DescribeRuntimeEnvCredentialsRequset{} }
func (m *DescribeRuntimeEnvCredentialsRequset) String() string { return proto.CompactTextString(m) }
func (*DescribeRuntimeEnvCredentialsRequset) ProtoMessage()    {}
func (*DescribeRuntimeEnvCredentialsRequset) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{12}
}

func (m *DescribeRuntimeEnvCredentialsRequset) GetRuntimeEnvCredentialIds() []*google_protobuf.StringValue {
	if m != nil {
		return m.RuntimeEnvCredentialIds
	}
	return nil
}

func (m *DescribeRuntimeEnvCredentialsRequset) GetStatuses() []*google_protobuf.StringValue {
	if m != nil {
		return m.Statuses
	}
	return nil
}

func (m *DescribeRuntimeEnvCredentialsRequset) GetSearchWord() *google_protobuf.StringValue {
	if m != nil {
		return m.SearchWord
	}
	return nil
}

func (m *DescribeRuntimeEnvCredentialsRequset) GetOwners() []*google_protobuf.StringValue {
	if m != nil {
		return m.Owners
	}
	return nil
}

func (m *DescribeRuntimeEnvCredentialsRequset) GetLimit() *google_protobuf.UInt32Value {
	if m != nil {
		return m.Limit
	}
	return nil
}

func (m *DescribeRuntimeEnvCredentialsRequset) GetOffset() *google_protobuf.UInt32Value {
	if m != nil {
		return m.Offset
	}
	return nil
}

func (m *DescribeRuntimeEnvCredentialsRequset) GetVerbose() *google_protobuf.UInt32Value {
	if m != nil {
		return m.Verbose
	}
	return nil
}

type DescribeRuntimeEnvCredentialsResponse struct {
	TotalCount              *google_protobuf.UInt32Value `protobuf:"bytes,1,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	RuntimeEnvCredentialSet []*RuntimeEnvCredential      `protobuf:"bytes,2,rep,name=runtime_env_credential_set,json=runtimeEnvCredentialSet" json:"runtime_env_credential_set,omitempty"`
}

func (m *DescribeRuntimeEnvCredentialsResponse) Reset()         { *m = DescribeRuntimeEnvCredentialsResponse{} }
func (m *DescribeRuntimeEnvCredentialsResponse) String() string { return proto.CompactTextString(m) }
func (*DescribeRuntimeEnvCredentialsResponse) ProtoMessage()    {}
func (*DescribeRuntimeEnvCredentialsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{13}
}

func (m *DescribeRuntimeEnvCredentialsResponse) GetTotalCount() *google_protobuf.UInt32Value {
	if m != nil {
		return m.TotalCount
	}
	return nil
}

func (m *DescribeRuntimeEnvCredentialsResponse) GetRuntimeEnvCredentialSet() []*RuntimeEnvCredential {
	if m != nil {
		return m.RuntimeEnvCredentialSet
	}
	return nil
}

type ModifyRuntimeEnvCredentialRequest struct {
	RuntimeEnvCredentialId *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=runtime_env_credential_id,json=runtimeEnvCredentialId" json:"runtime_env_credential_id,omitempty"`
	Name                   *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description            *google_protobuf.StringValue `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Content                map[string]string            `protobuf:"bytes,4,rep,name=content" json:"content,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ModifyRuntimeEnvCredentialRequest) Reset()         { *m = ModifyRuntimeEnvCredentialRequest{} }
func (m *ModifyRuntimeEnvCredentialRequest) String() string { return proto.CompactTextString(m) }
func (*ModifyRuntimeEnvCredentialRequest) ProtoMessage()    {}
func (*ModifyRuntimeEnvCredentialRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{14}
}

func (m *ModifyRuntimeEnvCredentialRequest) GetRuntimeEnvCredentialId() *google_protobuf.StringValue {
	if m != nil {
		return m.RuntimeEnvCredentialId
	}
	return nil
}

func (m *ModifyRuntimeEnvCredentialRequest) GetName() *google_protobuf.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *ModifyRuntimeEnvCredentialRequest) GetDescription() *google_protobuf.StringValue {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *ModifyRuntimeEnvCredentialRequest) GetContent() map[string]string {
	if m != nil {
		return m.Content
	}
	return nil
}

type ModifyRuntimeEnvCredentialResponse struct {
	RuntimeEnvCredential *RuntimeEnvCredential `protobuf:"bytes,1,opt,name=runtime_env_credential,json=runtimeEnvCredential" json:"runtime_env_credential,omitempty"`
}

func (m *ModifyRuntimeEnvCredentialResponse) Reset()         { *m = ModifyRuntimeEnvCredentialResponse{} }
func (m *ModifyRuntimeEnvCredentialResponse) String() string { return proto.CompactTextString(m) }
func (*ModifyRuntimeEnvCredentialResponse) ProtoMessage()    {}
func (*ModifyRuntimeEnvCredentialResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{15}
}

func (m *ModifyRuntimeEnvCredentialResponse) GetRuntimeEnvCredential() *RuntimeEnvCredential {
	if m != nil {
		return m.RuntimeEnvCredential
	}
	return nil
}

type DeleteRuntimeEnvCredentialRequset struct {
	RuntimeEnvCredentialId *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=runtime_env_credential_id,json=runtimeEnvCredentialId" json:"runtime_env_credential_id,omitempty"`
}

func (m *DeleteRuntimeEnvCredentialRequset) Reset()         { *m = DeleteRuntimeEnvCredentialRequset{} }
func (m *DeleteRuntimeEnvCredentialRequset) String() string { return proto.CompactTextString(m) }
func (*DeleteRuntimeEnvCredentialRequset) ProtoMessage()    {}
func (*DeleteRuntimeEnvCredentialRequset) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{16}
}

func (m *DeleteRuntimeEnvCredentialRequset) GetRuntimeEnvCredentialId() *google_protobuf.StringValue {
	if m != nil {
		return m.RuntimeEnvCredentialId
	}
	return nil
}

type DeleteRuntimeEnvCredentialResponse struct {
	RuntimeEnvCredential *RuntimeEnvCredential `protobuf:"bytes,1,opt,name=runtime_env_credential,json=runtimeEnvCredential" json:"runtime_env_credential,omitempty"`
}

func (m *DeleteRuntimeEnvCredentialResponse) Reset()         { *m = DeleteRuntimeEnvCredentialResponse{} }
func (m *DeleteRuntimeEnvCredentialResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteRuntimeEnvCredentialResponse) ProtoMessage()    {}
func (*DeleteRuntimeEnvCredentialResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{17}
}

func (m *DeleteRuntimeEnvCredentialResponse) GetRuntimeEnvCredential() *RuntimeEnvCredential {
	if m != nil {
		return m.RuntimeEnvCredential
	}
	return nil
}

type AttachCredentialToRuntimeEnvRequset struct {
	RuntimeEnvCredentialId *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=runtime_env_credential_id,json=runtimeEnvCredentialId" json:"runtime_env_credential_id,omitempty"`
	RuntimeEnvId           *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=runtime_env_id,json=runtimeEnvId" json:"runtime_env_id,omitempty"`
}

func (m *AttachCredentialToRuntimeEnvRequset) Reset()         { *m = AttachCredentialToRuntimeEnvRequset{} }
func (m *AttachCredentialToRuntimeEnvRequset) String() string { return proto.CompactTextString(m) }
func (*AttachCredentialToRuntimeEnvRequset) ProtoMessage()    {}
func (*AttachCredentialToRuntimeEnvRequset) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{18}
}

func (m *AttachCredentialToRuntimeEnvRequset) GetRuntimeEnvCredentialId() *google_protobuf.StringValue {
	if m != nil {
		return m.RuntimeEnvCredentialId
	}
	return nil
}

func (m *AttachCredentialToRuntimeEnvRequset) GetRuntimeEnvId() *google_protobuf.StringValue {
	if m != nil {
		return m.RuntimeEnvId
	}
	return nil
}

type AttachCredentialToRuntimeEnvResponse struct {
	RuntimeEnvCredentialId *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=runtime_env_credential_id,json=runtimeEnvCredentialId" json:"runtime_env_credential_id,omitempty"`
	RuntimeEnvId           *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=runtime_env_id,json=runtimeEnvId" json:"runtime_env_id,omitempty"`
}

func (m *AttachCredentialToRuntimeEnvResponse) Reset()         { *m = AttachCredentialToRuntimeEnvResponse{} }
func (m *AttachCredentialToRuntimeEnvResponse) String() string { return proto.CompactTextString(m) }
func (*AttachCredentialToRuntimeEnvResponse) ProtoMessage()    {}
func (*AttachCredentialToRuntimeEnvResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{19}
}

func (m *AttachCredentialToRuntimeEnvResponse) GetRuntimeEnvCredentialId() *google_protobuf.StringValue {
	if m != nil {
		return m.RuntimeEnvCredentialId
	}
	return nil
}

func (m *AttachCredentialToRuntimeEnvResponse) GetRuntimeEnvId() *google_protobuf.StringValue {
	if m != nil {
		return m.RuntimeEnvId
	}
	return nil
}

type DetachCredentialFromRuntimeEnvRequset struct {
	RuntimeEnvCredentialId *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=runtime_env_credential_id,json=runtimeEnvCredentialId" json:"runtime_env_credential_id,omitempty"`
	RuntimeEnvId           *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=runtime_env_id,json=runtimeEnvId" json:"runtime_env_id,omitempty"`
}

func (m *DetachCredentialFromRuntimeEnvRequset) Reset()         { *m = DetachCredentialFromRuntimeEnvRequset{} }
func (m *DetachCredentialFromRuntimeEnvRequset) String() string { return proto.CompactTextString(m) }
func (*DetachCredentialFromRuntimeEnvRequset) ProtoMessage()    {}
func (*DetachCredentialFromRuntimeEnvRequset) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{20}
}

func (m *DetachCredentialFromRuntimeEnvRequset) GetRuntimeEnvCredentialId() *google_protobuf.StringValue {
	if m != nil {
		return m.RuntimeEnvCredentialId
	}
	return nil
}

func (m *DetachCredentialFromRuntimeEnvRequset) GetRuntimeEnvId() *google_protobuf.StringValue {
	if m != nil {
		return m.RuntimeEnvId
	}
	return nil
}

type DetachCredentialFromRuntimeEnvResponse struct {
	RuntimeEnvCredentialId *google_protobuf.StringValue `protobuf:"bytes,1,opt,name=runtime_env_credential_id,json=runtimeEnvCredentialId" json:"runtime_env_credential_id,omitempty"`
	RuntimeEnvId           *google_protobuf.StringValue `protobuf:"bytes,2,opt,name=runtime_env_id,json=runtimeEnvId" json:"runtime_env_id,omitempty"`
}

func (m *DetachCredentialFromRuntimeEnvResponse) Reset() {
	*m = DetachCredentialFromRuntimeEnvResponse{}
}
func (m *DetachCredentialFromRuntimeEnvResponse) String() string { return proto.CompactTextString(m) }
func (*DetachCredentialFromRuntimeEnvResponse) ProtoMessage()    {}
func (*DetachCredentialFromRuntimeEnvResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{21}
}

func (m *DetachCredentialFromRuntimeEnvResponse) GetRuntimeEnvCredentialId() *google_protobuf.StringValue {
	if m != nil {
		return m.RuntimeEnvCredentialId
	}
	return nil
}

func (m *DetachCredentialFromRuntimeEnvResponse) GetRuntimeEnvId() *google_protobuf.StringValue {
	if m != nil {
		return m.RuntimeEnvId
	}
	return nil
}

func init() {
	proto.RegisterType((*RuntimeEnv)(nil), "openpitrix.RuntimeEnv")
	proto.RegisterType((*CreateRuntimeEnvRequest)(nil), "openpitrix.CreateRuntimeEnvRequest")
	proto.RegisterType((*CreateRuntimeEnvResponse)(nil), "openpitrix.CreateRuntimeEnvResponse")
	proto.RegisterType((*DescribeRuntimeEnvsRequest)(nil), "openpitrix.DescribeRuntimeEnvsRequest")
	proto.RegisterType((*DescribeRuntimeEnvsResponse)(nil), "openpitrix.DescribeRuntimeEnvsResponse")
	proto.RegisterType((*ModifyRuntimeEnvRequest)(nil), "openpitrix.ModifyRuntimeEnvRequest")
	proto.RegisterType((*ModifyRuntimeEnvResponse)(nil), "openpitrix.ModifyRuntimeEnvResponse")
	proto.RegisterType((*DeleteRuntimeEnvRequest)(nil), "openpitrix.DeleteRuntimeEnvRequest")
	proto.RegisterType((*DeleteRuntimeEnvResponse)(nil), "openpitrix.DeleteRuntimeEnvResponse")
	proto.RegisterType((*RuntimeEnvCredential)(nil), "openpitrix.RuntimeEnvCredential")
	proto.RegisterType((*CreateRuntimeEnvCredentialRequset)(nil), "openpitrix.CreateRuntimeEnvCredentialRequset")
	proto.RegisterType((*CreateRuntimeEnvCredentialResponse)(nil), "openpitrix.CreateRuntimeEnvCredentialResponse")
	proto.RegisterType((*DescribeRuntimeEnvCredentialsRequset)(nil), "openpitrix.DescribeRuntimeEnvCredentialsRequset")
	proto.RegisterType((*DescribeRuntimeEnvCredentialsResponse)(nil), "openpitrix.DescribeRuntimeEnvCredentialsResponse")
	proto.RegisterType((*ModifyRuntimeEnvCredentialRequest)(nil), "openpitrix.ModifyRuntimeEnvCredentialRequest")
	proto.RegisterType((*ModifyRuntimeEnvCredentialResponse)(nil), "openpitrix.ModifyRuntimeEnvCredentialResponse")
	proto.RegisterType((*DeleteRuntimeEnvCredentialRequset)(nil), "openpitrix.DeleteRuntimeEnvCredentialRequset")
	proto.RegisterType((*DeleteRuntimeEnvCredentialResponse)(nil), "openpitrix.DeleteRuntimeEnvCredentialResponse")
	proto.RegisterType((*AttachCredentialToRuntimeEnvRequset)(nil), "openpitrix.AttachCredentialToRuntimeEnvRequset")
	proto.RegisterType((*AttachCredentialToRuntimeEnvResponse)(nil), "openpitrix.AttachCredentialToRuntimeEnvResponse")
	proto.RegisterType((*DetachCredentialFromRuntimeEnvRequset)(nil), "openpitrix.DetachCredentialFromRuntimeEnvRequset")
	proto.RegisterType((*DetachCredentialFromRuntimeEnvResponse)(nil), "openpitrix.DetachCredentialFromRuntimeEnvResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for RuntimeEnvManager service

type RuntimeEnvManagerClient interface {
	CreateRuntimeEnv(ctx context.Context, in *CreateRuntimeEnvRequest, opts ...grpc.CallOption) (*CreateRuntimeEnvResponse, error)
	DescribeRuntimeEnvs(ctx context.Context, in *DescribeRuntimeEnvsRequest, opts ...grpc.CallOption) (*DescribeRuntimeEnvsResponse, error)
	ModifyRuntimeEnv(ctx context.Context, in *ModifyRuntimeEnvRequest, opts ...grpc.CallOption) (*ModifyRuntimeEnvResponse, error)
	DeleteRuntimeEnv(ctx context.Context, in *DeleteRuntimeEnvRequest, opts ...grpc.CallOption) (*DeleteRuntimeEnvResponse, error)
	CreateRuntimeEnvCredential(ctx context.Context, in *CreateRuntimeEnvCredentialRequset, opts ...grpc.CallOption) (*CreateRuntimeEnvCredentialResponse, error)
	DescribeRuntimeEnvCredentials(ctx context.Context, in *DescribeRuntimeEnvCredentialsRequset, opts ...grpc.CallOption) (*DescribeRuntimeEnvCredentialsResponse, error)
	ModifyRuntimeEnvCredential(ctx context.Context, in *ModifyRuntimeEnvCredentialRequest, opts ...grpc.CallOption) (*ModifyRuntimeEnvCredentialResponse, error)
	DeleteRuntimeEnvCredential(ctx context.Context, in *DeleteRuntimeEnvCredentialRequset, opts ...grpc.CallOption) (*DeleteRuntimeEnvCredentialResponse, error)
	AttachCredentialToRuntimeEnv(ctx context.Context, in *AttachCredentialToRuntimeEnvRequset, opts ...grpc.CallOption) (*AttachCredentialToRuntimeEnvResponse, error)
	DetachCredentialFromRuntimeEnv(ctx context.Context, in *DetachCredentialFromRuntimeEnvRequset, opts ...grpc.CallOption) (*DetachCredentialFromRuntimeEnvResponse, error)
}

type runtimeEnvManagerClient struct {
	cc *grpc.ClientConn
}

func NewRuntimeEnvManagerClient(cc *grpc.ClientConn) RuntimeEnvManagerClient {
	return &runtimeEnvManagerClient{cc}
}

func (c *runtimeEnvManagerClient) CreateRuntimeEnv(ctx context.Context, in *CreateRuntimeEnvRequest, opts ...grpc.CallOption) (*CreateRuntimeEnvResponse, error) {
	out := new(CreateRuntimeEnvResponse)
	err := grpc.Invoke(ctx, "/openpitrix.RuntimeEnvManager/CreateRuntimeEnv", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeEnvManagerClient) DescribeRuntimeEnvs(ctx context.Context, in *DescribeRuntimeEnvsRequest, opts ...grpc.CallOption) (*DescribeRuntimeEnvsResponse, error) {
	out := new(DescribeRuntimeEnvsResponse)
	err := grpc.Invoke(ctx, "/openpitrix.RuntimeEnvManager/DescribeRuntimeEnvs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeEnvManagerClient) ModifyRuntimeEnv(ctx context.Context, in *ModifyRuntimeEnvRequest, opts ...grpc.CallOption) (*ModifyRuntimeEnvResponse, error) {
	out := new(ModifyRuntimeEnvResponse)
	err := grpc.Invoke(ctx, "/openpitrix.RuntimeEnvManager/ModifyRuntimeEnv", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeEnvManagerClient) DeleteRuntimeEnv(ctx context.Context, in *DeleteRuntimeEnvRequest, opts ...grpc.CallOption) (*DeleteRuntimeEnvResponse, error) {
	out := new(DeleteRuntimeEnvResponse)
	err := grpc.Invoke(ctx, "/openpitrix.RuntimeEnvManager/DeleteRuntimeEnv", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeEnvManagerClient) CreateRuntimeEnvCredential(ctx context.Context, in *CreateRuntimeEnvCredentialRequset, opts ...grpc.CallOption) (*CreateRuntimeEnvCredentialResponse, error) {
	out := new(CreateRuntimeEnvCredentialResponse)
	err := grpc.Invoke(ctx, "/openpitrix.RuntimeEnvManager/CreateRuntimeEnvCredential", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeEnvManagerClient) DescribeRuntimeEnvCredentials(ctx context.Context, in *DescribeRuntimeEnvCredentialsRequset, opts ...grpc.CallOption) (*DescribeRuntimeEnvCredentialsResponse, error) {
	out := new(DescribeRuntimeEnvCredentialsResponse)
	err := grpc.Invoke(ctx, "/openpitrix.RuntimeEnvManager/DescribeRuntimeEnvCredentials", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeEnvManagerClient) ModifyRuntimeEnvCredential(ctx context.Context, in *ModifyRuntimeEnvCredentialRequest, opts ...grpc.CallOption) (*ModifyRuntimeEnvCredentialResponse, error) {
	out := new(ModifyRuntimeEnvCredentialResponse)
	err := grpc.Invoke(ctx, "/openpitrix.RuntimeEnvManager/ModifyRuntimeEnvCredential", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeEnvManagerClient) DeleteRuntimeEnvCredential(ctx context.Context, in *DeleteRuntimeEnvCredentialRequset, opts ...grpc.CallOption) (*DeleteRuntimeEnvCredentialResponse, error) {
	out := new(DeleteRuntimeEnvCredentialResponse)
	err := grpc.Invoke(ctx, "/openpitrix.RuntimeEnvManager/DeleteRuntimeEnvCredential", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeEnvManagerClient) AttachCredentialToRuntimeEnv(ctx context.Context, in *AttachCredentialToRuntimeEnvRequset, opts ...grpc.CallOption) (*AttachCredentialToRuntimeEnvResponse, error) {
	out := new(AttachCredentialToRuntimeEnvResponse)
	err := grpc.Invoke(ctx, "/openpitrix.RuntimeEnvManager/AttachCredentialToRuntimeEnv", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *runtimeEnvManagerClient) DetachCredentialFromRuntimeEnv(ctx context.Context, in *DetachCredentialFromRuntimeEnvRequset, opts ...grpc.CallOption) (*DetachCredentialFromRuntimeEnvResponse, error) {
	out := new(DetachCredentialFromRuntimeEnvResponse)
	err := grpc.Invoke(ctx, "/openpitrix.RuntimeEnvManager/DetachCredentialFromRuntimeEnv", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RuntimeEnvManager service

type RuntimeEnvManagerServer interface {
	CreateRuntimeEnv(context.Context, *CreateRuntimeEnvRequest) (*CreateRuntimeEnvResponse, error)
	DescribeRuntimeEnvs(context.Context, *DescribeRuntimeEnvsRequest) (*DescribeRuntimeEnvsResponse, error)
	ModifyRuntimeEnv(context.Context, *ModifyRuntimeEnvRequest) (*ModifyRuntimeEnvResponse, error)
	DeleteRuntimeEnv(context.Context, *DeleteRuntimeEnvRequest) (*DeleteRuntimeEnvResponse, error)
	CreateRuntimeEnvCredential(context.Context, *CreateRuntimeEnvCredentialRequset) (*CreateRuntimeEnvCredentialResponse, error)
	DescribeRuntimeEnvCredentials(context.Context, *DescribeRuntimeEnvCredentialsRequset) (*DescribeRuntimeEnvCredentialsResponse, error)
	ModifyRuntimeEnvCredential(context.Context, *ModifyRuntimeEnvCredentialRequest) (*ModifyRuntimeEnvCredentialResponse, error)
	DeleteRuntimeEnvCredential(context.Context, *DeleteRuntimeEnvCredentialRequset) (*DeleteRuntimeEnvCredentialResponse, error)
	AttachCredentialToRuntimeEnv(context.Context, *AttachCredentialToRuntimeEnvRequset) (*AttachCredentialToRuntimeEnvResponse, error)
	DetachCredentialFromRuntimeEnv(context.Context, *DetachCredentialFromRuntimeEnvRequset) (*DetachCredentialFromRuntimeEnvResponse, error)
}

func RegisterRuntimeEnvManagerServer(s *grpc.Server, srv RuntimeEnvManagerServer) {
	s.RegisterService(&_RuntimeEnvManager_serviceDesc, srv)
}

func _RuntimeEnvManager_CreateRuntimeEnv_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRuntimeEnvRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeEnvManagerServer).CreateRuntimeEnv(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeEnvManager/CreateRuntimeEnv",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeEnvManagerServer).CreateRuntimeEnv(ctx, req.(*CreateRuntimeEnvRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeEnvManager_DescribeRuntimeEnvs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeRuntimeEnvsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeEnvManagerServer).DescribeRuntimeEnvs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeEnvManager/DescribeRuntimeEnvs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeEnvManagerServer).DescribeRuntimeEnvs(ctx, req.(*DescribeRuntimeEnvsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeEnvManager_ModifyRuntimeEnv_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyRuntimeEnvRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeEnvManagerServer).ModifyRuntimeEnv(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeEnvManager/ModifyRuntimeEnv",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeEnvManagerServer).ModifyRuntimeEnv(ctx, req.(*ModifyRuntimeEnvRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeEnvManager_DeleteRuntimeEnv_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRuntimeEnvRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeEnvManagerServer).DeleteRuntimeEnv(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeEnvManager/DeleteRuntimeEnv",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeEnvManagerServer).DeleteRuntimeEnv(ctx, req.(*DeleteRuntimeEnvRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeEnvManager_CreateRuntimeEnvCredential_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRuntimeEnvCredentialRequset)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeEnvManagerServer).CreateRuntimeEnvCredential(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeEnvManager/CreateRuntimeEnvCredential",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeEnvManagerServer).CreateRuntimeEnvCredential(ctx, req.(*CreateRuntimeEnvCredentialRequset))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeEnvManager_DescribeRuntimeEnvCredentials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeRuntimeEnvCredentialsRequset)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeEnvManagerServer).DescribeRuntimeEnvCredentials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeEnvManager/DescribeRuntimeEnvCredentials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeEnvManagerServer).DescribeRuntimeEnvCredentials(ctx, req.(*DescribeRuntimeEnvCredentialsRequset))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeEnvManager_ModifyRuntimeEnvCredential_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyRuntimeEnvCredentialRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeEnvManagerServer).ModifyRuntimeEnvCredential(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeEnvManager/ModifyRuntimeEnvCredential",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeEnvManagerServer).ModifyRuntimeEnvCredential(ctx, req.(*ModifyRuntimeEnvCredentialRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeEnvManager_DeleteRuntimeEnvCredential_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRuntimeEnvCredentialRequset)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeEnvManagerServer).DeleteRuntimeEnvCredential(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeEnvManager/DeleteRuntimeEnvCredential",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeEnvManagerServer).DeleteRuntimeEnvCredential(ctx, req.(*DeleteRuntimeEnvCredentialRequset))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeEnvManager_AttachCredentialToRuntimeEnv_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttachCredentialToRuntimeEnvRequset)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeEnvManagerServer).AttachCredentialToRuntimeEnv(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeEnvManager/AttachCredentialToRuntimeEnv",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeEnvManagerServer).AttachCredentialToRuntimeEnv(ctx, req.(*AttachCredentialToRuntimeEnvRequset))
	}
	return interceptor(ctx, in, info, handler)
}

func _RuntimeEnvManager_DetachCredentialFromRuntimeEnv_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetachCredentialFromRuntimeEnvRequset)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RuntimeEnvManagerServer).DetachCredentialFromRuntimeEnv(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/openpitrix.RuntimeEnvManager/DetachCredentialFromRuntimeEnv",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RuntimeEnvManagerServer).DetachCredentialFromRuntimeEnv(ctx, req.(*DetachCredentialFromRuntimeEnvRequset))
	}
	return interceptor(ctx, in, info, handler)
}

var _RuntimeEnvManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openpitrix.RuntimeEnvManager",
	HandlerType: (*RuntimeEnvManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRuntimeEnv",
			Handler:    _RuntimeEnvManager_CreateRuntimeEnv_Handler,
		},
		{
			MethodName: "DescribeRuntimeEnvs",
			Handler:    _RuntimeEnvManager_DescribeRuntimeEnvs_Handler,
		},
		{
			MethodName: "ModifyRuntimeEnv",
			Handler:    _RuntimeEnvManager_ModifyRuntimeEnv_Handler,
		},
		{
			MethodName: "DeleteRuntimeEnv",
			Handler:    _RuntimeEnvManager_DeleteRuntimeEnv_Handler,
		},
		{
			MethodName: "CreateRuntimeEnvCredential",
			Handler:    _RuntimeEnvManager_CreateRuntimeEnvCredential_Handler,
		},
		{
			MethodName: "DescribeRuntimeEnvCredentials",
			Handler:    _RuntimeEnvManager_DescribeRuntimeEnvCredentials_Handler,
		},
		{
			MethodName: "ModifyRuntimeEnvCredential",
			Handler:    _RuntimeEnvManager_ModifyRuntimeEnvCredential_Handler,
		},
		{
			MethodName: "DeleteRuntimeEnvCredential",
			Handler:    _RuntimeEnvManager_DeleteRuntimeEnvCredential_Handler,
		},
		{
			MethodName: "AttachCredentialToRuntimeEnv",
			Handler:    _RuntimeEnvManager_AttachCredentialToRuntimeEnv_Handler,
		},
		{
			MethodName: "DetachCredentialFromRuntimeEnv",
			Handler:    _RuntimeEnvManager_DetachCredentialFromRuntimeEnv_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "runtime_env.proto",
}

func init() { proto.RegisterFile("runtime_env.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 1386 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x59, 0x5d, 0x6f, 0xdb, 0xd4,
	0x1b, 0x97, 0xf3, 0xd2, 0x6e, 0x4f, 0xf6, 0xdf, 0xbf, 0x3b, 0x74, 0xad, 0xf1, 0xda, 0x35, 0x75,
	0xcb, 0x40, 0x85, 0x26, 0x6d, 0x86, 0x60, 0x0a, 0x6c, 0x52, 0xd7, 0x0e, 0xd6, 0x8b, 0x89, 0x29,
	0xed, 0x36, 0x81, 0x34, 0x55, 0x4e, 0x7c, 0x9a, 0x7a, 0x38, 0xb6, 0x77, 0x7c, 0x92, 0xb6, 0xd2,
	0x2e, 0x10, 0x12, 0xe2, 0x16, 0xca, 0x1d, 0xe2, 0x82, 0x3b, 0x3e, 0x06, 0x12, 0xd0, 0x6b, 0x24,
	0xf8, 0x0a, 0xdc, 0xf2, 0x09, 0xb8, 0x41, 0xe7, 0xd8, 0xa9, 0xed, 0xf8, 0x35, 0x7d, 0x19, 0x94,
	0xab, 0xb6, 0xce, 0xf3, 0x9c, 0xf3, 0xfb, 0x3d, 0xaf, 0x3f, 0xa7, 0x70, 0x85, 0x74, 0x0d, 0xaa,
	0x75, 0xf0, 0x16, 0x36, 0x7a, 0x15, 0x8b, 0x98, 0xd4, 0x44, 0x60, 0x5a, 0xd8, 0xb0, 0x34, 0x4a,
	0xb4, 0x3d, 0xe9, 0x7a, 0xdb, 0x34, 0xdb, 0x3a, 0xae, 0xf2, 0x4f, 0x9a, 0xdd, 0xed, 0xea, 0x2e,
	0x51, 0x2c, 0x0b, 0x13, 0xdb, 0xb1, 0x95, 0x66, 0x06, 0x3f, 0x67, 0x67, 0xd9, 0x54, 0xe9, 0x58,
	0xae, 0xc1, 0x94, 0x6b, 0xa0, 0x58, 0x5a, 0x55, 0x31, 0x0c, 0x93, 0x2a, 0x54, 0x33, 0x8d, 0xbe,
	0xfb, 0x5b, 0xfc, 0x47, 0x6b, 0xb1, 0x8d, 0x8d, 0x45, 0x7b, 0x57, 0x69, 0xb7, 0x31, 0xa9, 0x9a,
	0x16, 0xb7, 0x08, 0x5b, 0xcb, 0x7f, 0x15, 0x00, 0x1a, 0x0e, 0xdc, 0x7b, 0x46, 0x0f, 0xdd, 0x85,
	0xcb, 0x3e, 0xf0, 0x5b, 0x9a, 0x2a, 0x0a, 0x65, 0xe1, 0x8d, 0x52, 0x6d, 0xaa, 0xe2, 0xdc, 0x59,
	0xe9, 0x83, 0xaa, 0x6c, 0x50, 0xa2, 0x19, 0xed, 0xc7, 0x8a, 0xde, 0xc5, 0x8d, 0x4b, 0xe4, 0xe8,
	0x84, 0x75, 0x15, 0x2d, 0x41, 0xc1, 0x50, 0x3a, 0x58, 0xcc, 0x65, 0xf0, 0xe4, 0x96, 0xe8, 0x0e,
	0x94, 0x54, 0x6c, 0xb7, 0x88, 0xc6, 0x61, 0x8a, 0xf9, 0x0c, 0x8e, 0x7e, 0x07, 0xb4, 0x06, 0xff,
	0xf7, 0xa3, 0xee, 0x12, 0x5d, 0x2c, 0x64, 0x38, 0xe3, 0x7f, 0x1e, 0xec, 0x47, 0x44, 0x47, 0x4f,
	0xe0, 0x55, 0xff, 0x29, 0x2d, 0x82, 0x55, 0x6c, 0x50, 0x4d, 0xd1, 0x59, 0x18, 0x8a, 0x19, 0xce,
	0x9b, 0xf0, 0xce, 0x5b, 0x3d, 0x72, 0x5e, 0x57, 0xd1, 0xdb, 0x30, 0xa2, 0x2b, 0x4d, 0xac, 0xdb,
	0xe2, 0x48, 0x86, 0x53, 0x5c, 0x5b, 0x54, 0x83, 0xa2, 0xb9, 0x6b, 0x60, 0x22, 0x8e, 0x66, 0x70,
	0x72, 0x4c, 0xd9, 0x4d, 0x36, 0x55, 0x68, 0xd7, 0x16, 0x2f, 0x64, 0xb9, 0xc9, 0xb1, 0x45, 0xef,
	0x41, 0xa9, 0x45, 0xb0, 0x42, 0xf1, 0x16, 0x43, 0x2f, 0x5e, 0xe4, 0xae, 0x52, 0xc8, 0x75, 0xb3,
	0x5f, 0x86, 0x0d, 0x70, 0xcc, 0xd9, 0x03, 0xe6, 0xec, 0x1c, 0xe3, 0x38, 0x43, 0xba, 0xb3, 0x63,
	0xce, 0x1e, 0xc8, 0x5f, 0xe6, 0x60, 0x72, 0x95, 0x9f, 0xe5, 0xd5, 0x60, 0x03, 0x3f, 0xef, 0x62,
	0x9b, 0x1e, 0x95, 0x91, 0x70, 0xdc, 0x32, 0xca, 0x0d, 0x5b, 0x46, 0x5e, 0x9e, 0xf2, 0x43, 0xe4,
	0xe9, 0x54, 0x8a, 0x4f, 0xde, 0x00, 0x31, 0x1c, 0x08, 0xdb, 0x32, 0x0d, 0x1b, 0xa3, 0x77, 0xa1,
	0xe4, 0xbb, 0xc1, 0x0d, 0xc8, 0x44, 0xc5, 0x1b, 0x29, 0x15, 0x9f, 0x13, 0x78, 0xe7, 0xca, 0x7f,
	0xe6, 0x41, 0x5a, 0xe3, 0x04, 0x9b, 0xbe, 0x73, 0xed, 0x7e, 0x84, 0x07, 0x90, 0x6b, 0xaa, 0x2d,
	0x0a, 0xe5, 0xfc, 0x30, 0xc8, 0xd7, 0x55, 0x1b, 0xdd, 0x82, 0x0b, 0x4e, 0x46, 0xb1, 0x2d, 0xe6,
	0x32, 0xb8, 0x1f, 0x59, 0xa3, 0xdb, 0x50, 0xb2, 0xb1, 0x42, 0x5a, 0x3b, 0x5b, 0xbb, 0x26, 0x51,
	0x33, 0x05, 0x1d, 0x1c, 0x87, 0x27, 0x26, 0x51, 0xf9, 0xc5, 0x58, 0xc7, 0x2d, 0x6a, 0x92, 0x4c,
	0x11, 0x3f, 0xb2, 0x66, 0x89, 0xe6, 0xfd, 0x62, 0x8b, 0xc5, 0x0c, 0x80, 0x5d, 0x5b, 0xd6, 0x90,
	0xba, 0xd6, 0xd1, 0x68, 0x6c, 0x17, 0x3f, 0x5a, 0x37, 0xe8, 0xcd, 0x9a, 0xdb, 0x90, 0xdc, 0x94,
	0xdf, 0xb4, 0xbd, 0x6d, 0x63, 0x1a, 0xdb, 0xc5, 0x7e, 0x27, 0xd7, 0x16, 0xbd, 0x03, 0xa3, 0x3d,
	0x4c, 0x9a, 0xa6, 0x8d, 0x63, 0xfb, 0xd8, 0xef, 0xd6, 0x37, 0x96, 0xbf, 0x13, 0xe0, 0x5a, 0x64,
	0xbe, 0xdd, 0x42, 0xba, 0x0d, 0x25, 0x6a, 0x52, 0x45, 0xdf, 0x6a, 0x99, 0x5d, 0x83, 0xc6, 0x76,
	0x96, 0xff, 0x6c, 0xe0, 0x0e, 0xab, 0xcc, 0x1e, 0xdd, 0x09, 0xd6, 0x0b, 0x63, 0xe5, 0x24, 0x3c,
	0xae, 0x16, 0x7d, 0x95, 0xb2, 0x81, 0xa9, 0xfc, 0x45, 0x0e, 0x26, 0x1f, 0x98, 0xaa, 0xb6, 0xbd,
	0x1f, 0xee, 0xf6, 0xf3, 0xb9, 0x78, 0xbc, 0x89, 0x51, 0xc8, 0x3e, 0x31, 0x58, 0xaf, 0x87, 0xc3,
	0x70, 0xd2, 0x5e, 0x7f, 0x0a, 0x93, 0x6b, 0x58, 0xc7, 0x51, 0x93, 0xf4, 0x14, 0x62, 0xcb, 0x30,
	0x87, 0x8f, 0x3f, 0x29, 0xe6, 0xaf, 0x8a, 0x30, 0xde, 0x88, 0xd8, 0x99, 0xc9, 0xab, 0x58, 0x38,
	0xc1, 0x2a, 0x7e, 0xf9, 0x25, 0xf2, 0x21, 0x8c, 0xb6, 0x4c, 0x83, 0x62, 0x83, 0x8a, 0x05, 0xde,
	0x2c, 0x8b, 0xd1, 0x81, 0xf1, 0x60, 0x56, 0x56, 0x1d, 0xfb, 0x7b, 0x06, 0x25, 0xfb, 0x8d, 0xbe,
	0xb7, 0xa7, 0x07, 0x8a, 0xd9, 0xf5, 0x40, 0xc4, 0x84, 0x1f, 0x19, 0x7e, 0xc2, 0x7b, 0xaa, 0x62,
	0xf4, 0x3c, 0xa8, 0x0a, 0xa9, 0x0e, 0x97, 0xfc, 0x21, 0x44, 0x63, 0x90, 0xff, 0x14, 0xef, 0xf3,
	0xba, 0xb9, 0xd8, 0x60, 0xbf, 0xa2, 0x71, 0x28, 0xf6, 0x18, 0x58, 0x5e, 0x07, 0x17, 0x1b, 0xce,
	0x1f, 0xf5, 0xdc, 0x2d, 0x41, 0xfe, 0x21, 0x07, 0xb3, 0x83, 0x8b, 0xd8, 0x4b, 0x0d, 0xeb, 0x28,
	0x36, 0xa0, 0x5f, 0xbe, 0x36, 0xd9, 0xf4, 0xca, 0x28, 0xcf, 0x33, 0x58, 0xf7, 0x97, 0x51, 0x2a,
	0xe2, 0xe8, 0x9a, 0x3a, 0x51, 0xa4, 0x5e, 0x80, 0x9c, 0x74, 0xad, 0x3b, 0x1b, 0x1e, 0xc3, 0x44,
	0x74, 0x27, 0xbb, 0xb1, 0x2b, 0xa7, 0x75, 0x43, 0x63, 0x3c, 0xaa, 0x95, 0xe5, 0xdf, 0xf2, 0x30,
	0x1f, 0x5e, 0x75, 0x9e, 0x81, 0xdd, 0x4f, 0xd5, 0xc7, 0x20, 0xc5, 0x8e, 0x92, 0x6c, 0x7a, 0x67,
	0x32, 0x7a, 0x96, 0xfc, 0x83, 0xca, 0xc7, 0xd3, 0x2f, 0x85, 0xe3, 0xe8, 0x97, 0xe2, 0x71, 0xf4,
	0xcb, 0xc8, 0xf1, 0xf4, 0xcb, 0xe8, 0x30, 0xfa, 0xe5, 0x50, 0x80, 0xd7, 0x52, 0x92, 0x7a, 0x3a,
	0x4a, 0xe6, 0x69, 0x6c, 0x51, 0x78, 0xa2, 0x26, 0xbd, 0x32, 0x23, 0x0b, 0x83, 0x09, 0x9d, 0xcf,
	0xf2, 0x30, 0x3b, 0xb8, 0xe1, 0x83, 0x2d, 0xc9, 0xd6, 0xf2, 0x7f, 0x68, 0xc9, 0x6d, 0x0e, 0x2e,
	0xb9, 0xc0, 0x74, 0x4a, 0x0d, 0xc5, 0xd9, 0x4c, 0xa7, 0xa4, 0x6b, 0xcf, 0x78, 0x3a, 0xbd, 0x80,
	0xd9, 0x41, 0xb5, 0x14, 0x5e, 0x22, 0x67, 0x95, 0x7f, 0xc6, 0x3d, 0xe9, 0xf6, 0x33, 0xe6, 0xfe,
	0x93, 0x00, 0x73, 0x2b, 0x94, 0x2a, 0xad, 0x1d, 0xef, 0xe1, 0xa6, 0x19, 0x54, 0xa5, 0x67, 0x49,
	0x3f, 0x42, 0xee, 0xe6, 0x86, 0x96, 0xbb, 0x3f, 0x0b, 0x30, 0x9f, 0x4c, 0xc2, 0x8d, 0xe2, 0xbf,
	0x9a, 0xc5, 0x2f, 0x7c, 0x9e, 0x06, 0x59, 0x7c, 0x40, 0xcc, 0xce, 0x39, 0x4b, 0xc6, 0xa1, 0x00,
	0x37, 0xd2, 0x68, 0x9c, 0x83, 0x74, 0xd4, 0xbe, 0xbf, 0x0c, 0x57, 0x3c, 0xcc, 0x0f, 0x14, 0x43,
	0x69, 0x63, 0x82, 0xbe, 0x16, 0x60, 0x6c, 0x50, 0x48, 0xa1, 0xb9, 0x24, 0x75, 0xe7, 0x4e, 0x4d,
	0x69, 0x3e, 0xd9, 0xc8, 0x09, 0x89, 0x5c, 0x3b, 0x58, 0x19, 0x47, 0xc8, 0xd1, 0xd6, 0x65, 0x17,
	0x4f, 0x19, 0x1b, 0xbd, 0xcf, 0x7f, 0xff, 0xe3, 0x9b, 0xdc, 0x55, 0x79, 0xac, 0xda, 0x5b, 0xae,
	0xfa, 0xa8, 0xd9, 0x75, 0x61, 0x01, 0x7d, 0x2b, 0xc0, 0x2b, 0x11, 0x5f, 0x24, 0xa0, 0x1b, 0xfe,
	0x1b, 0xe3, 0xbf, 0x59, 0x92, 0x5e, 0x4f, 0xb5, 0xf3, 0xc0, 0x4d, 0xa2, 0xab, 0xaa, 0x6b, 0xe1,
	0x87, 0x67, 0x73, 0x7c, 0x08, 0x85, 0xf0, 0xf1, 0x80, 0x0d, 0xce, 0xf6, 0x60, 0xc0, 0x62, 0xbe,
	0x64, 0x08, 0x06, 0x2c, 0xee, 0x15, 0xdc, 0x0d, 0x58, 0x87, 0x7f, 0x1c, 0x0e, 0x58, 0x2d, 0x32,
	0x60, 0x0c, 0xd3, 0xe0, 0xcc, 0x0d, 0x62, 0x8a, 0x79, 0x39, 0x0f, 0x62, 0x8a, 0x7b, 0xc5, 0x4e,
	0x49, 0xe2, 0x42, 0x24, 0xa6, 0x43, 0x01, 0xa4, 0x78, 0x85, 0x8e, 0x16, 0x87, 0x7a, 0x81, 0x90,
	0x2a, 0x59, 0xcd, 0x5d, 0xc4, 0xf7, 0x0f, 0x56, 0x66, 0xd0, 0x74, 0x18, 0x71, 0xd9, 0xeb, 0x49,
	0x0e, 0xbe, 0x2c, 0x5f, 0x1b, 0x00, 0xef, 0xeb, 0x5a, 0xce, 0xe3, 0x57, 0x01, 0xa6, 0x13, 0x55,
	0x21, 0x5a, 0x4a, 0x2e, 0xb7, 0xf0, 0x5b, 0x81, 0xb4, 0x3c, 0x84, 0x87, 0x4b, 0x68, 0xfd, 0x60,
	0x65, 0x0e, 0xcd, 0x46, 0x95, 0x2a, 0xa3, 0x64, 0xf4, 0xed, 0x39, 0xa9, 0x69, 0x94, 0x44, 0x8a,
	0x67, 0x26, 0x5e, 0x9d, 0x04, 0x33, 0x93, 0x2a, 0x9e, 0x82, 0x99, 0x49, 0x17, 0x3d, 0x6e, 0x66,
	0xc2, 0xf5, 0x1d, 0xca, 0x4c, 0x2d, 0x2d, 0x33, 0x8c, 0x47, 0xbc, 0xd2, 0x08, 0xf2, 0x48, 0xd5,
	0x43, 0x41, 0x1e, 0xe9, 0x02, 0x26, 0x3b, 0x8f, 0x85, 0x34, 0x1e, 0x3f, 0x0a, 0x30, 0x95, 0xb4,
	0xed, 0x51, 0xd5, 0x0f, 0x2d, 0x83, 0xb8, 0x91, 0x96, 0xb2, 0x3b, 0xb8, 0x6c, 0xde, 0x4f, 0xea,
	0xf0, 0x19, 0x59, 0x62, 0x14, 0x7c, 0xeb, 0xcc, 0xc7, 0xc6, 0xcd, 0xc4, 0xf5, 0xe4, 0x15, 0x89,
	0x06, 0x4a, 0x3e, 0x83, 0x2a, 0x90, 0x6a, 0xc3, 0xb8, 0x04, 0x78, 0xa8, 0xdc, 0x38, 0xcc, 0x63,
	0x21, 0x99, 0xc7, 0xdd, 0xbd, 0x83, 0x95, 0xe7, 0xe8, 0x3e, 0xa0, 0x8f, 0x2c, 0x6c, 0x3c, 0xd4,
	0x08, 0xd6, 0xf6, 0xca, 0x0f, 0x89, 0xf9, 0x0c, 0xb7, 0xa8, 0xfc, 0x66, 0xd4, 0x53, 0x74, 0x75,
	0x87, 0x52, 0xcb, 0xae, 0x57, 0xab, 0x3e, 0xa4, 0x9a, 0x59, 0x2b, 0x2e, 0x55, 0x96, 0x2a, 0xcb,
	0x0b, 0x82, 0x50, 0x1b, 0x53, 0x2c, 0x4b, 0xd7, 0x5a, 0xfc, 0x9f, 0x9e, 0xd5, 0x67, 0xb6, 0x69,
	0xd4, 0x43, 0x4f, 0x3e, 0xc9, 0x59, 0xcd, 0xe6, 0x08, 0x5f, 0xe0, 0x37, 0xff, 0x0e, 0x00, 0x00,
	0xff, 0xff, 0xec, 0x3e, 0x86, 0xad, 0xbd, 0x1d, 0x00, 0x00,
}
