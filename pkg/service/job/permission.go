// Copyright 2018 The OpenPitrix Authors. All rights reserved.
// Use of this source code is governed by a Apache license
// that can be found in the LICENSE file.

// Auto generated by 'go run gen_helper.go', DO NOT EDIT.

package job

import (
	"context"

	"openpitrix.io/openpitrix/pkg/constants"
	"openpitrix.io/openpitrix/pkg/db"
	"openpitrix.io/openpitrix/pkg/gerr"
	"openpitrix.io/openpitrix/pkg/models"
	"openpitrix.io/openpitrix/pkg/pi"
	"openpitrix.io/openpitrix/pkg/util/ctxutil"
)

func CheckJobsPermission(ctx context.Context, resourceIds []string) ([]*models.Job, error) {
	if len(resourceIds) == 0 {
		return nil, nil
	}
	var sender = ctxutil.GetSender(ctx)
	var jobs []*models.Job
	_, err := pi.Global().DB(ctx).
		Select(models.JobColumns...).
		From(constants.TableJob).
		Where(db.Eq(constants.ColumnJobId, resourceIds)).Load(&jobs)
	if err != nil {
		return nil, gerr.NewWithDetail(ctx, gerr.Internal, err, gerr.ErrorInternalError)
	}
	if sender != nil {
		for _, job := range jobs {
			if !job.OwnerPath.CheckPermission(sender) {
				return nil, gerr.New(ctx, gerr.PermissionDenied, gerr.ErrorResourceAccessDenied, job.JobId)
			}
		}
	}
	if len(jobs) == 0 {
		return nil, gerr.New(ctx, gerr.NotFound, gerr.ErrorResourceNotFound, resourceIds)
	}
	return jobs, nil
}

func CheckJobPermission(ctx context.Context, resourceId string) (*models.Job, error) {
	if len(resourceId) == 0 {
		return nil, nil
	}
	var sender = ctxutil.GetSender(ctx)
	var jobs []*models.Job
	_, err := pi.Global().DB(ctx).
		Select(models.JobColumns...).
		From(constants.TableJob).
		Where(db.Eq(constants.ColumnJobId, resourceId)).Load(&jobs)
	if err != nil {
		return nil, gerr.NewWithDetail(ctx, gerr.Internal, err, gerr.ErrorInternalError)
	}
	if sender != nil {
		for _, job := range jobs {
			if !job.OwnerPath.CheckPermission(sender) {
				return nil, gerr.New(ctx, gerr.PermissionDenied, gerr.ErrorResourceAccessDenied, job.JobId)
			}
		}
	}
	if len(jobs) == 0 {
		return nil, gerr.New(ctx, gerr.NotFound, gerr.ErrorResourceNotFound, resourceId)
	}
	return jobs[0], nil
}
