// Copyright 2018 The OpenPitrix Authors. All rights reserved.
// Use of this source code is governed by a Apache license
// that can be found in the LICENSE file.

syntax = "proto3";

package openpitrix;

// set go package name to pb
option go_package = "pb";

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

enum AttributeType {
	NORMAL = 0;
	METERING = 1;
}

//************************************* Sku *************************
//the values of status are: active/deleted
message AttributeName {
	google.protobuf.StringValue attribute_name_id = 1;
	google.protobuf.StringValue name = 2;
	google.protobuf.StringValue description = 3;
	AttributeType type = 4;
	google.protobuf.StringValue status = 5;
	google.protobuf.Timestamp create_time = 6;
	google.protobuf.Timestamp status_time = 7;
}

message CreateAttributeNameRequest {
	google.protobuf.StringValue name = 1;
	google.protobuf.StringValue description = 2;
	AttributeType type = 3;
}

message CreateAttributeNameResponse {
	google.protobuf.StringValue attribute_name_id = 1;
}

message DescribeAttributeNamesRequest {
	google.protobuf.StringValue attribute_name_id = 1;
	google.protobuf.StringValue name = 2;
	AttributeType type = 3;
	google.protobuf.StringValue status = 4;
	google.protobuf.StringValue sort_key = 5;
	google.protobuf.BoolValue reverse = 6;
	uint32 offset = 7;
	uint32 limit = 8;
}

message DescribeAttributeNamesResponse {
	repeated AttributeName attribute_names = 1;
}

message ModifyAttributeNameRequest {
	google.protobuf.StringValue attribute_name_id = 1;
	google.protobuf.StringValue name = 2;
	google.protobuf.StringValue description = 3;
	AttributeType type = 4;
}

message ModifyAttributeNameResponse {
	google.protobuf.StringValue attribute_name_id = 1;
}

message DeleteAttributeNamesRequest {
	repeated string attribute_name_ids = 1;
}

message DeleteAttributeNamesResponse {
	repeated string attribute_name_ids = 1;
}

message AttributeUnit {
	google.protobuf.StringValue attribute_unit_id = 1;
	google.protobuf.StringValue name = 2;
	google.protobuf.StringValue status = 3;
	google.protobuf.Timestamp create_time = 4;
	google.protobuf.Timestamp status_time = 5;
}

message CreateAttributeUnitRequest {
	google.protobuf.StringValue name = 1;
}

message CreateAttributeUnitResponse {
	google.protobuf.StringValue attribute_unit_id = 1;
}

message DescribeAttributeUnitsRequest {
	google.protobuf.StringValue attribute_unit_id = 1;
	google.protobuf.StringValue name = 2;
	google.protobuf.StringValue status = 3;
	google.protobuf.StringValue sort_key = 4;
	google.protobuf.BoolValue reverse = 5;
	uint32 offset = 6;
	uint32 limit = 7;
}

message DescribeAttributeUnitsResponse {
	repeated AttributeUnit attribute_units = 1;
}

message ModifyAttributeUnitRequest {
	google.protobuf.StringValue attribute_unit_id = 1;
	google.protobuf.StringValue name = 2;
}

message ModifyAttributeUnitResponse {
	google.protobuf.StringValue attribute_unit_id = 1;
}

message DeleteAttributeUnitsRequest {
	repeated string attribute_unit_ids = 1;
}

message DeleteAttributeUnitsResponse {
	repeated string attribute_unit_ids = 1;
}




message Attribute {
	google.protobuf.StringValue attribute_id = 1;
	google.protobuf.StringValue attribute_name_id = 2;
	google.protobuf.StringValue attribute_unit_id = 3;
	//the types of value: single int value, scope of value (min_value, max_value], string value
	google.protobuf.StringValue value = 4;
	google.protobuf.StringValue owner = 5; //the user_id created attribute
	google.protobuf.StringValue status = 6;
	google.protobuf.Timestamp create_time = 7;
	google.protobuf.Timestamp status_time = 8;
}

message CreateAttributeRequest {
	google.protobuf.StringValue attribute_name_id = 1;
	google.protobuf.StringValue attribute_unit_id = 2;
	google.protobuf.StringValue value = 3;
}

message CreateAttributeResponse {
	google.protobuf.StringValue attribute_id = 1;
}

message DescribeAttributesRequest {
	google.protobuf.StringValue attribute_id = 1;
	google.protobuf.StringValue attribute_name_id = 2;
	google.protobuf.StringValue attribute_unit_id = 3;
	google.protobuf.StringValue owner = 4;
	google.protobuf.StringValue status = 5;
	google.protobuf.StringValue sort_key = 6;
	google.protobuf.BoolValue reverse = 7;
	uint32 offset = 8;
	uint32 limit = 9;
}

message DescribeAttributesResponse {
	repeated Attribute attributes = 1;
}

message Spu {
	google.protobuf.StringValue spu_id = 1;
	google.protobuf.StringValue spu_name = 2;  //spu_name: the  app_id / app_version_id / other_ids..
	google.protobuf.StringValue status = 3;
	google.protobuf.Timestamp create_time = 4;
	google.protobuf.Timestamp status_time = 5;
}

message CreateSpuRequest {
	google.protobuf.StringValue spu_name = 2;
}

message CreateSpuResponse {
	google.protobuf.StringValue spu_id = 1;
}

//SKU: stock keeping unit
message Sku {
	google.protobuf.StringValue sku_id = 1;
	google.protobuf.StringValue spu_id = 2;  //spu_id: app_id / app_version_id / other_id..
	repeated string attribute_ids = 3;
	google.protobuf.StringValue owner = 4; //created user_id
	google.protobuf.StringValue status = 5;
	google.protobuf.Timestamp create_time = 6;
	google.protobuf.Timestamp status_time = 7;
}

message CreateSkuRequest {
	google.protobuf.StringValue spu_id = 1;
	repeated string attribute_ids = 2;
}

message CreateSkuResponse {
	google.protobuf.StringValue sku_id = 1;
}

message MeteringAttributeBinding { // binding metering_attribute_id into sku_id
	google.protobuf.StringValue binding_id = 1;
	google.protobuf.StringValue sku_id = 2;
	google.protobuf.StringValue attribute_id = 3; //the attribute id that need to metering
	google.protobuf.Timestamp create_time = 4;
}

message CreateMeteringAttributeBindingsRequest {
	google.protobuf.StringValue sku_id = 1;
	repeated string attribute_ids = 2;
}

message CreateMeteringAttributeBindingsResponse {
	repeated string binding_ids = 1;
}

service SkuManager {
	rpc CreateAttributeName (CreateAttributeNameRequest) returns (CreateAttributeNameResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "create attribute name"
		};
		option (google.api.http) = {
			post: "/v1/mbing/attribute/name"
			body: "*"
		};
	}

	rpc DescribeAttributeNames (DescribeAttributeNamesRequest) returns (DescribeAttributeNamesResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "describe attribute_names"
		};
		option (google.api.http) = {
			get: "/v1/mbing/attribute/names"
		};
	}

	rpc ModifyAttributeName (ModifyAttributeNameRequest) returns (ModifyAttributeNameResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "modify attribute_name"
		};
		option (google.api.http) = {
			put: "/v1/mbing/attribute/name"
			body: "*"
		};
	}

	rpc DeleteAttributeNames (DeleteAttributeNamesRequest) returns (DeleteAttributeNamesResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "delete attribute_names"
		};
		option (google.api.http) = {
			delete: "/v1/mbing/attribute/names"
			body: "*"
		};
	}

	rpc CreateAttributeUnit (CreateAttributeUnitRequest) returns (CreateAttributeUnitResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            summary: "create attribute unit"
        };
		option (google.api.http) = {
            post: "/v1/mbing/attribute/unit"
            body: "*"
        };
	}

	rpc DescribeAttributeUnits (DescribeAttributeUnitsRequest) returns (DescribeAttributeUnitsResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "describe attribute_units"
		};
		option (google.api.http) = {
			get: "/v1/mbing/attribute/units"
		};
	}

	rpc ModifyAttributeUnit (ModifyAttributeUnitRequest) returns (ModifyAttributeUnitResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "modify attribute_unit"
		};
		option (google.api.http) = {
			put: "/v1/mbing/attribute/unit"
			body: "*"
		};
	}

	rpc DeleteAttributeUnits (DeleteAttributeUnitsRequest) returns (DeleteAttributeUnitsResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "delete attribute_units"
		};
		option (google.api.http) = {
			delete: "/v1/mbing/attribute/units"
			body: "*"
		};
	}






	rpc CreateAttribute (CreateAttributeRequest) returns (CreateAttributeResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            summary: "create attribute"
        };
		option (google.api.http) = {
            post: "/v1/mbing/attribute"
            body: "*"
        };
	}

	rpc DescribeAttributes (DescribeAttributesRequest) returns (DescribeAttributesResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "describe attributes"
		};
		option (google.api.http) = {
			get: "/v1/mbing/attributes"
		};
	}

	rpc CreateSku (CreateSkuRequest) returns (CreateSkuResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            summary: "create sku of the resource"
        };
		option (google.api.http) = {
            post: "/v1/mbing/sku"
            body: "*"
        };
	}

	rpc CreateMeteringAttributes (CreateMeteringAttributeBindingsRequest) returns (CreateMeteringAttributeBindingsResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            summary: "create sku metering attributes"
        };
		option (google.api.http) = {
            post: "/v1/mbing/sku/metering/attributes"
            body: "*"
        };
	}

}


//************************************* Promotion *************************

message CombinationMeteringAttributeBinding {
    google.protobuf.StringValue combination_binding_id = 1;
	repeated string metering_attribute_binding_ids = 2;  //MeteringAttributes
	google.protobuf.StringValue owner = 3;
	google.protobuf.StringValue status = 4;
	google.protobuf.Timestamp create_time = 5;
	google.protobuf.Timestamp status_time = 6;
}

message CreateCombinationMeteringAttributeRequest {
	repeated CreateMeteringAttributeBindingsRequest metering_attributes = 1;  //MeteringAttributes
}

message CreateCombinationMeteringAttributeResponse {
	google.protobuf.StringValue combination_metering_attribute_id = 1;
}

message ProbationSku {
    google.protobuf.StringValue probation_sku_id = 1;
    google.protobuf.StringValue spu_id = 2;
	repeated string attribute_ids = 3;
	repeated string metering_attribute_ids = 4;
    google.protobuf.UInt32Value limit_num = 5;
}

message CreateProbationSkuRequest {
	google.protobuf.StringValue spu_id = 1;
	repeated string attribute_ids = 2;
	repeated string metering_attribute_ids = 3;
	google.protobuf.UInt32Value limit_num = 4;
}

message CreateProbationSkuResponse {
	google.protobuf.StringValue probation_sku_id = 1;
}

service PromotionManager {
	rpc CreateProbationSku (CreateProbationSkuRequest) returns (CreateProbationSkuResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "create probation sku of resource"
		};
		option (google.api.http) = {
			post: "/v1/mbing/probation/sku"
			body: "*"
		};
	}

}


//************************** metering ****************************

message MeteringAttributeValue {
	google.protobuf.StringValue attribute_id = 1;
	google.protobuf.DoubleValue value = 2;
	enum UpdateValueTypes {
		INCREMENTAL = 0;
		REPLACE = 1;
	}
	UpdateValueTypes type = 3;
}

message MeteringSku {
	google.protobuf.StringValue resource_id = 1;
	google.protobuf.StringValue sku_id = 2; //distinct sku/cobination/probation from prefix
	//if the metering attributes of sku is only duration, this is nil
	repeated MeteringAttributeValue attribute_values = 3;
}

message MeteringRequest {
	google.protobuf.StringValue user_id = 2;
	repeated MeteringSku metering_skus = 3;
}

message MeteringResponse {
	repeated string leasing_ids = 1;
}

service MeteringManager {
	rpc StartMetering (MeteringRequest) returns (MeteringResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "start metering about the sku_set"
		};
		option (google.api.http) = {
			post: "/v1/metering/skus"
			body: "*"
		};
	}

	rpc UpdateMeteringValue (MeteringRequest) returns (MeteringResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "update metering value about the sku_set"
		};
		option (google.api.http) = {
			put: "/v1/metering/skus"
			body: "*"
		};
	}

	rpc StopMetering (MeteringRequest) returns (MeteringResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "pause metering value about the sku_set"
		};
		option (google.api.http) = {
			put: "/v1/metering/skus/stop"
			body: "*"
		};
	}

	rpc TerminateMetering (MeteringRequest) returns (MeteringResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            summary: "terminate metering about the sku_set"
        };
		option (google.api.http) = {
            delete: "/v1/metering/skus"
            body: "*"
        };
	}
}
