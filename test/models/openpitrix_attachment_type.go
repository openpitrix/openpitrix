// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// OpenpitrixAttachmentType - archive: directory
//  - raw: raw
//  - jpg: image type
// swagger:model openpitrixAttachmentType
type OpenpitrixAttachmentType string

const (
	// OpenpitrixAttachmentTypeArchive captures enum value "archive"
	OpenpitrixAttachmentTypeArchive OpenpitrixAttachmentType = "archive"
	// OpenpitrixAttachmentTypeRaw captures enum value "raw"
	OpenpitrixAttachmentTypeRaw OpenpitrixAttachmentType = "raw"
	// OpenpitrixAttachmentTypeJpg captures enum value "jpg"
	OpenpitrixAttachmentTypeJpg OpenpitrixAttachmentType = "jpg"
	// OpenpitrixAttachmentTypePng captures enum value "png"
	OpenpitrixAttachmentTypePng OpenpitrixAttachmentType = "png"
)

// for schema
var openpitrixAttachmentTypeEnum []interface{}

func init() {
	var res []OpenpitrixAttachmentType
	if err := json.Unmarshal([]byte(`["archive","raw","jpg","png"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		openpitrixAttachmentTypeEnum = append(openpitrixAttachmentTypeEnum, v)
	}
}

func (m OpenpitrixAttachmentType) validateOpenpitrixAttachmentTypeEnum(path, location string, value OpenpitrixAttachmentType) error {
	if err := validate.Enum(path, location, value, openpitrixAttachmentTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this openpitrix attachment type
func (m OpenpitrixAttachmentType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOpenpitrixAttachmentTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
