// Code generated by protoc-gen-go. DO NOT EDIT.
// source: iam/token.proto

package pbiam // import "openpitrix.io/openpitrix/pkg/pb/iam"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateClientRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateClientRequest) Reset()         { *m = CreateClientRequest{} }
func (m *CreateClientRequest) String() string { return proto.CompactTextString(m) }
func (*CreateClientRequest) ProtoMessage()    {}
func (*CreateClientRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_token_07f728fd9b752e5f, []int{0}
}
func (m *CreateClientRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClientRequest.Unmarshal(m, b)
}
func (m *CreateClientRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClientRequest.Marshal(b, m, deterministic)
}
func (dst *CreateClientRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClientRequest.Merge(dst, src)
}
func (m *CreateClientRequest) XXX_Size() int {
	return xxx_messageInfo_CreateClientRequest.Size(m)
}
func (m *CreateClientRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClientRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClientRequest proto.InternalMessageInfo

func (m *CreateClientRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type CreateClientResponse struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ClientId             string   `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret         string   `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateClientResponse) Reset()         { *m = CreateClientResponse{} }
func (m *CreateClientResponse) String() string { return proto.CompactTextString(m) }
func (*CreateClientResponse) ProtoMessage()    {}
func (*CreateClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_token_07f728fd9b752e5f, []int{1}
}
func (m *CreateClientResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClientResponse.Unmarshal(m, b)
}
func (m *CreateClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClientResponse.Marshal(b, m, deterministic)
}
func (dst *CreateClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClientResponse.Merge(dst, src)
}
func (m *CreateClientResponse) XXX_Size() int {
	return xxx_messageInfo_CreateClientResponse.Size(m)
}
func (m *CreateClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClientResponse proto.InternalMessageInfo

func (m *CreateClientResponse) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CreateClientResponse) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *CreateClientResponse) GetClientSecret() string {
	if m != nil {
		return m.ClientSecret
	}
	return ""
}

type AuthRequest struct {
	GrantType            string   `protobuf:"bytes,1,opt,name=grant_type,json=grantType,proto3" json:"grant_type,omitempty"`
	ClientId             string   `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret         string   `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	Scope                string   `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	Username             string   `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_token_07f728fd9b752e5f, []int{2}
}
func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (dst *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(dst, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetGrantType() string {
	if m != nil {
		return m.GrantType
	}
	return ""
}

func (m *AuthRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *AuthRequest) GetClientSecret() string {
	if m != nil {
		return m.ClientSecret
	}
	return ""
}

func (m *AuthRequest) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *AuthRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AuthRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type AuthResponse struct {
	TokenType            string   `protobuf:"bytes,1,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	ExpiresIn            string   `protobuf:"bytes,2,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	AccessToken          string   `protobuf:"bytes,3,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken         string   `protobuf:"bytes,4,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	IdToken              string   `protobuf:"bytes,5,opt,name=id_token,json=idToken,proto3" json:"id_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthResponse) Reset()         { *m = AuthResponse{} }
func (m *AuthResponse) String() string { return proto.CompactTextString(m) }
func (*AuthResponse) ProtoMessage()    {}
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_token_07f728fd9b752e5f, []int{3}
}
func (m *AuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthResponse.Unmarshal(m, b)
}
func (m *AuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthResponse.Marshal(b, m, deterministic)
}
func (dst *AuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthResponse.Merge(dst, src)
}
func (m *AuthResponse) XXX_Size() int {
	return xxx_messageInfo_AuthResponse.Size(m)
}
func (m *AuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthResponse proto.InternalMessageInfo

func (m *AuthResponse) GetTokenType() string {
	if m != nil {
		return m.TokenType
	}
	return ""
}

func (m *AuthResponse) GetExpiresIn() string {
	if m != nil {
		return m.ExpiresIn
	}
	return ""
}

func (m *AuthResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *AuthResponse) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *AuthResponse) GetIdToken() string {
	if m != nil {
		return m.IdToken
	}
	return ""
}

type TokenRequest struct {
	GrantType            string   `protobuf:"bytes,1,opt,name=grant_type,json=grantType,proto3" json:"grant_type,omitempty"`
	ClientId             string   `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret         string   `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	RefreshToken         string   `protobuf:"bytes,4,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenRequest) Reset()         { *m = TokenRequest{} }
func (m *TokenRequest) String() string { return proto.CompactTextString(m) }
func (*TokenRequest) ProtoMessage()    {}
func (*TokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_token_07f728fd9b752e5f, []int{4}
}
func (m *TokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenRequest.Unmarshal(m, b)
}
func (m *TokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenRequest.Marshal(b, m, deterministic)
}
func (dst *TokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenRequest.Merge(dst, src)
}
func (m *TokenRequest) XXX_Size() int {
	return xxx_messageInfo_TokenRequest.Size(m)
}
func (m *TokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TokenRequest proto.InternalMessageInfo

func (m *TokenRequest) GetGrantType() string {
	if m != nil {
		return m.GrantType
	}
	return ""
}

func (m *TokenRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *TokenRequest) GetClientSecret() string {
	if m != nil {
		return m.ClientSecret
	}
	return ""
}

func (m *TokenRequest) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

type TokenResponse struct {
	TokenType            string   `protobuf:"bytes,1,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	ExpiresIn            string   `protobuf:"bytes,2,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	AccessToken          string   `protobuf:"bytes,3,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken         string   `protobuf:"bytes,4,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenResponse) Reset()         { *m = TokenResponse{} }
func (m *TokenResponse) String() string { return proto.CompactTextString(m) }
func (*TokenResponse) ProtoMessage()    {}
func (*TokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_token_07f728fd9b752e5f, []int{5}
}
func (m *TokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenResponse.Unmarshal(m, b)
}
func (m *TokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenResponse.Marshal(b, m, deterministic)
}
func (dst *TokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenResponse.Merge(dst, src)
}
func (m *TokenResponse) XXX_Size() int {
	return xxx_messageInfo_TokenResponse.Size(m)
}
func (m *TokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TokenResponse proto.InternalMessageInfo

func (m *TokenResponse) GetTokenType() string {
	if m != nil {
		return m.TokenType
	}
	return ""
}

func (m *TokenResponse) GetExpiresIn() string {
	if m != nil {
		return m.ExpiresIn
	}
	return ""
}

func (m *TokenResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *TokenResponse) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateClientRequest)(nil), "iam.CreateClientRequest")
	proto.RegisterType((*CreateClientResponse)(nil), "iam.CreateClientResponse")
	proto.RegisterType((*AuthRequest)(nil), "iam.AuthRequest")
	proto.RegisterType((*AuthResponse)(nil), "iam.AuthResponse")
	proto.RegisterType((*TokenRequest)(nil), "iam.TokenRequest")
	proto.RegisterType((*TokenResponse)(nil), "iam.TokenResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TokenManagerClient is the client API for TokenManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TokenManagerClient interface {
	CreateClient(ctx context.Context, in *CreateClientRequest, opts ...grpc.CallOption) (*CreateClientResponse, error)
	// get access_token with client_credentials or password
	//
	// Ref:
	// - https://www.digitalocean.com/community/tutorials/an-introduction-to-oauth-2
	// - https://alexbilbie.com/guide-to-oauth-2-grants/
	// - https://tools.ietf.org/html/rfc6749#section-4.4
	//
	Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error)
	// refresh access_token
	//
	// Ref: https://tools.ietf.org/html/rfc6749#section-6
	//
	Token(ctx context.Context, in *TokenRequest, opts ...grpc.CallOption) (*TokenResponse, error)
}

type tokenManagerClient struct {
	cc *grpc.ClientConn
}

func NewTokenManagerClient(cc *grpc.ClientConn) TokenManagerClient {
	return &tokenManagerClient{cc}
}

func (c *tokenManagerClient) CreateClient(ctx context.Context, in *CreateClientRequest, opts ...grpc.CallOption) (*CreateClientResponse, error) {
	out := new(CreateClientResponse)
	err := c.cc.Invoke(ctx, "/iam.TokenManager/CreateClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tokenManagerClient) Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/iam.TokenManager/Auth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tokenManagerClient) Token(ctx context.Context, in *TokenRequest, opts ...grpc.CallOption) (*TokenResponse, error) {
	out := new(TokenResponse)
	err := c.cc.Invoke(ctx, "/iam.TokenManager/Token", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TokenManagerServer is the server API for TokenManager service.
type TokenManagerServer interface {
	CreateClient(context.Context, *CreateClientRequest) (*CreateClientResponse, error)
	// get access_token with client_credentials or password
	//
	// Ref:
	// - https://www.digitalocean.com/community/tutorials/an-introduction-to-oauth-2
	// - https://alexbilbie.com/guide-to-oauth-2-grants/
	// - https://tools.ietf.org/html/rfc6749#section-4.4
	//
	Auth(context.Context, *AuthRequest) (*AuthResponse, error)
	// refresh access_token
	//
	// Ref: https://tools.ietf.org/html/rfc6749#section-6
	//
	Token(context.Context, *TokenRequest) (*TokenResponse, error)
}

func RegisterTokenManagerServer(s *grpc.Server, srv TokenManagerServer) {
	s.RegisterService(&_TokenManager_serviceDesc, srv)
}

func _TokenManager_CreateClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenManagerServer).CreateClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.TokenManager/CreateClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenManagerServer).CreateClient(ctx, req.(*CreateClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TokenManager_Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenManagerServer).Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.TokenManager/Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenManagerServer).Auth(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TokenManager_Token_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenManagerServer).Token(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iam.TokenManager/Token",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenManagerServer).Token(ctx, req.(*TokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TokenManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "iam.TokenManager",
	HandlerType: (*TokenManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateClient",
			Handler:    _TokenManager_CreateClient_Handler,
		},
		{
			MethodName: "Auth",
			Handler:    _TokenManager_Auth_Handler,
		},
		{
			MethodName: "Token",
			Handler:    _TokenManager_Token_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "iam/token.proto",
}

func init() { proto.RegisterFile("iam/token.proto", fileDescriptor_token_07f728fd9b752e5f) }

var fileDescriptor_token_07f728fd9b752e5f = []byte{
	// 421 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x54, 0x4f, 0xcb, 0xd3, 0x30,
	0x18, 0xa7, 0xbe, 0xef, 0xfe, 0xf4, 0x59, 0x87, 0x1a, 0x07, 0x76, 0x95, 0x81, 0xd6, 0x8b, 0x32,
	0x68, 0x41, 0x8f, 0x9e, 0x74, 0xa7, 0x1d, 0xbc, 0xcc, 0x9d, 0xbc, 0x94, 0xac, 0x7d, 0xdc, 0xc2,
	0x6c, 0x92, 0x25, 0x19, 0x6e, 0xdf, 0x43, 0x3f, 0x87, 0x7e, 0x00, 0x3f, 0x9c, 0x34, 0x49, 0xb1,
	0x83, 0x09, 0x82, 0x20, 0xef, 0x6d, 0xbf, 0x3f, 0x59, 0x7e, 0xbf, 0x27, 0x49, 0xe1, 0x3e, 0xa3,
	0x75, 0x6e, 0xc4, 0x1e, 0x79, 0x26, 0x95, 0x30, 0x82, 0xdc, 0x30, 0x5a, 0xa7, 0x19, 0x3c, 0x5a,
	0x28, 0xa4, 0x06, 0x17, 0x9f, 0x19, 0x72, 0xb3, 0xc2, 0xc3, 0x11, 0xb5, 0x21, 0x8f, 0x61, 0x70,
	0xd4, 0xa8, 0x0a, 0x56, 0xc5, 0xc1, 0xd3, 0xe0, 0x45, 0xb8, 0xea, 0x37, 0x70, 0x59, 0xa5, 0x07,
	0x98, 0x5c, 0xfa, 0xb5, 0x14, 0x5c, 0xe3, 0x1f, 0x17, 0x90, 0x27, 0x10, 0x96, 0xd6, 0xda, 0x48,
	0xf7, 0xac, 0x34, 0x74, 0xc4, 0xb2, 0x22, 0xcf, 0x61, 0xec, 0x45, 0x8d, 0xa5, 0x42, 0x13, 0xdf,
	0x58, 0x43, 0xe4, 0xc8, 0x0f, 0x96, 0x4b, 0x7f, 0x06, 0x30, 0x7a, 0x7b, 0x34, 0xbb, 0x36, 0xdb,
	0x0c, 0x60, 0xab, 0x28, 0x37, 0x85, 0x39, 0x4b, 0xf4, 0xbb, 0x85, 0x96, 0x59, 0x9f, 0x25, 0xfe,
	0xfb, 0x86, 0x64, 0x02, 0x3d, 0x5d, 0x0a, 0x89, 0xf1, 0xad, 0x15, 0x1d, 0x20, 0x09, 0x0c, 0x9b,
	0x4a, 0x9c, 0xd6, 0x18, 0xf7, 0xdc, 0xdf, 0xb6, 0xb8, 0xd1, 0x24, 0xd5, 0xfa, 0x8b, 0x50, 0x55,
	0xdc, 0x77, 0x5a, 0x8b, 0xd3, 0xef, 0x01, 0x44, 0x2e, 0xbe, 0x1f, 0xd5, 0x0c, 0xc0, 0x1e, 0xc3,
	0x45, 0x7e, 0xcb, 0xd8, 0xfc, 0x33, 0x00, 0x3c, 0x49, 0xa6, 0x50, 0x17, 0x8c, 0xfb, 0x02, 0xa1,
	0x67, 0x96, 0x9c, 0x3c, 0x83, 0x88, 0x96, 0x25, 0x6a, 0x5d, 0xd8, 0x25, 0xbe, 0xc0, 0xc8, 0x71,
	0xeb, 0x86, 0x6a, 0x4a, 0x2a, 0xfc, 0xa4, 0x50, 0xef, 0xbc, 0xc7, 0xf5, 0x88, 0x3c, 0xe9, 0x4c,
	0x53, 0x18, 0xb2, 0xca, 0xeb, 0xae, 0xce, 0x80, 0x55, 0x56, 0x4a, 0xbf, 0x06, 0x10, 0xd9, 0x5f,
	0xff, 0x6d, 0xe2, 0x7f, 0x93, 0x38, 0xfd, 0x16, 0xc0, 0xd8, 0xc7, 0xba, 0x4b, 0x93, 0x7c, 0xf5,
	0xa3, 0x1d, 0xd7, 0x7b, 0xca, 0xe9, 0x16, 0x15, 0x59, 0x40, 0xd4, 0x7d, 0x23, 0x24, 0xce, 0x18,
	0xad, 0xb3, 0x2b, 0xcf, 0x2c, 0x99, 0x5e, 0x51, 0x7c, 0xb7, 0x39, 0xdc, 0x36, 0xb7, 0x86, 0x3c,
	0xb0, 0x96, 0xce, 0xfd, 0x4f, 0x1e, 0x76, 0x18, 0x6f, 0xce, 0xa0, 0xe7, 0x02, 0x3b, 0xad, 0x7b,
	0x78, 0x09, 0xe9, 0x52, 0xce, 0xff, 0x6e, 0xfe, 0xf1, 0xa5, 0x90, 0xc8, 0x25, 0x33, 0x8a, 0x9d,
	0x32, 0x26, 0xf2, 0xdf, 0x28, 0x97, 0xfb, 0x6d, 0x2e, 0x37, 0x39, 0xa3, 0xf5, 0x1b, 0xb9, 0x61,
	0xb4, 0xde, 0xf4, 0xed, 0xe7, 0xe2, 0xf5, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xca, 0x75, 0x65,
	0xe6, 0x41, 0x04, 0x00, 0x00,
}
