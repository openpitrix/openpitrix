// Copyright 2018 The OpenPitrix Authors. All rights reserved.
// Use of this source code is governed by a Apache license
// that can be found in the LICENSE file.

syntax = "proto3";
package openpitrix;

// set go package name to pb
option go_package = "pb";

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "types.proto";

message CreateRepoRequest {
	google.protobuf.StringValue name = 1;
	google.protobuf.StringValue description = 2;
	google.protobuf.StringValue type = 3;
	google.protobuf.StringValue url = 4;
	google.protobuf.StringValue credential = 5;
	google.protobuf.StringValue visibility = 6;
	repeated string providers = 7;
	google.protobuf.StringValue labels = 8;
	google.protobuf.StringValue selectors = 9;
	google.protobuf.StringValue category_id = 10;
	google.protobuf.StringValue app_default_status = 11;
}

message CreateRepoResponse {
	google.protobuf.StringValue repo_id = 1;
}

message ModifyRepoRequest {
	google.protobuf.StringValue repo_id = 1;
	google.protobuf.StringValue name = 2;
	google.protobuf.StringValue description = 3;
	google.protobuf.StringValue type = 4;
	google.protobuf.StringValue url = 5;
	google.protobuf.StringValue credential = 6;
	google.protobuf.StringValue visibility = 7;
	repeated string providers = 8;
	google.protobuf.StringValue labels = 9;
	google.protobuf.StringValue selectors = 10;
	google.protobuf.StringValue category_id = 11;
	google.protobuf.StringValue app_default_status = 12;
}

message ModifyRepoResponse {
	google.protobuf.StringValue repo_id = 1;
}

message DeleteReposRequest {
	repeated string repo_id = 1;
}

message DeleteReposResponse {
	repeated string repo_id = 1;
}

message RepoLabel {
	google.protobuf.StringValue label_key = 1;
	google.protobuf.StringValue label_value = 2;
	google.protobuf.Timestamp create_time = 3;
}

message RepoSelector {
	google.protobuf.StringValue selector_key = 1;
	google.protobuf.StringValue selector_value = 2;
	google.protobuf.Timestamp create_time = 3;
}

message Repo {
	google.protobuf.StringValue repo_id = 1;
	google.protobuf.StringValue name = 2;
	google.protobuf.StringValue description = 3;
	google.protobuf.StringValue type = 4;
	google.protobuf.StringValue url = 5;
	google.protobuf.StringValue credential = 6;
	google.protobuf.StringValue visibility = 7;
	google.protobuf.StringValue owner_path = 8;
	repeated string providers = 9;
	repeated RepoLabel labels = 10;
	repeated RepoSelector selectors = 11;

	google.protobuf.StringValue status = 12;
	google.protobuf.Timestamp create_time = 13;
	google.protobuf.Timestamp status_time = 14;
	repeated ResourceCategory category_set = 15;

	google.protobuf.StringValue app_default_status = 16;
	// 0 for self resource; 1 for openpitrix resource
	google.protobuf.Int32Value controller = 17;
}

message DescribeReposRequest {
	google.protobuf.StringValue search_word = 1;
	google.protobuf.StringValue sort_key = 2;
	google.protobuf.BoolValue reverse = 3;
	// default is 20, max value is 200
	uint32 limit = 4;
	// default is 0
	uint32 offset = 5;

	repeated string repo_id = 11;
	repeated string name = 12;
	repeated string type = 13;
	repeated string visibility = 14;
	repeated string status = 15;
	repeated string provider = 16;
	google.protobuf.StringValue label = 17;
	google.protobuf.StringValue selector = 18;
	repeated string category_id = 19;
	repeated string owner = 20;
	repeated string app_default_status = 21;
	string user_id = 22;
	// 0 for self resource; 1 for openpitrix resource
	google.protobuf.Int32Value controller = 23;
}

message DescribeReposResponse {
	uint32 total_count = 1;
	repeated Repo repo_set = 2;
}

message ValidateRepoRequest {
	google.protobuf.StringValue type = 1;
	google.protobuf.StringValue url = 2;
	google.protobuf.StringValue credential = 3;
}

message ValidateRepoResponse {
	google.protobuf.BoolValue ok = 1;
	uint32 errorCode = 2;
}

service RepoManager {
	rpc CreateRepo (CreateRepoRequest) returns (CreateRepoResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "create repo"
		};
		option (google.api.http) = {
			post: "/v1/repos"
			body: "*"
		};
	}
	rpc DescribeRepos (DescribeReposRequest) returns (DescribeReposResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "describe repos with filter"
		};
		option (google.api.http) = {
			get: "/v1/repos"
		};
	}
	rpc ModifyRepo (ModifyRepoRequest) returns (ModifyRepoResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "modify repo"
		};
		option (google.api.http) = {
			patch: "/v1/repos"
			body: "*"
		};
	}
	rpc DeleteRepos (DeleteReposRequest) returns (DeleteReposResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "delete repos"
		};
		option (google.api.http) = {
			delete: "/v1/repos"
			body: "*"
		};
	}
	rpc ValidateRepo (ValidateRepoRequest) returns (ValidateRepoResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "validate repo"
		};
		option (google.api.http) = {
			get: "/v1/repos/validate"
		};
	}
}
