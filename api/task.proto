// Copyright 2018 The OpenPitrix Authors. All rights reserved.
// Use of this source code is governed by a Apache license
// that can be found in the LICENSE file.

syntax = "proto3";
package openpitrix;

// set go package name to pb
option go_package = "pb";

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";


message CreateTaskRequest {
	google.protobuf.StringValue job_id = 1;
	google.protobuf.StringValue node_id = 2;
	google.protobuf.StringValue target = 3;
	google.protobuf.StringValue task_action = 4;
	google.protobuf.StringValue directive = 5;
	google.protobuf.BoolValue failure_allowed = 6;
	google.protobuf.StringValue status = 7;
}

message CreateTaskResponse {
	google.protobuf.StringValue task_id = 1;
	google.protobuf.StringValue job_id = 2;
}

message RetryTasksRequest {
	repeated string task_id = 1;
}

message RetryTasksResponse {
	repeated Task task_set = 1;
}

message Task {
	google.protobuf.StringValue task_id = 1;
	google.protobuf.StringValue job_id = 2;
	google.protobuf.StringValue task_action = 3;
	google.protobuf.StringValue status = 4;
	google.protobuf.UInt32Value error_code = 5;
	google.protobuf.StringValue directive = 6;
	google.protobuf.StringValue executor = 7;
	google.protobuf.StringValue owner_path = 8;
	google.protobuf.StringValue target = 9;
	google.protobuf.StringValue node_id = 10;
	google.protobuf.Timestamp create_time = 11;
	google.protobuf.Timestamp status_time = 12;
	google.protobuf.BoolValue failure_allowed = 13;
}
message DescribeTasksRequest {
	google.protobuf.StringValue search_word = 1;
	google.protobuf.StringValue sort_key = 2;
	google.protobuf.BoolValue reverse = 3;
	// default is 20, max value is 200
	uint32 limit = 4;
	// default is 0
	uint32 offset = 5;
	repeated string display_columns = 6;

	repeated string task_id = 11;
	repeated string job_id = 12;
	google.protobuf.StringValue executor = 13;
	google.protobuf.StringValue target = 14;
	repeated string status = 15;
	repeated string owner = 16;
}
message DescribeTasksResponse {
	uint32 total_count = 1;
	repeated Task task_set = 2;
}

service TaskManager {
	rpc CreateTask (CreateTaskRequest) returns (CreateTaskResponse);
	rpc DescribeTasks (DescribeTasksRequest) returns (DescribeTasksResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "describe tasks with filter"
		};
		option (google.api.http) = {
			get: "/v1/tasks"
		};
	}
	rpc RetryTasks (RetryTasksRequest) returns (RetryTasksResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "retry tasks"
		};
		option (google.api.http) = {
			post: "/v1/tasks/retry"
			body: "*"
		};
	}
}
