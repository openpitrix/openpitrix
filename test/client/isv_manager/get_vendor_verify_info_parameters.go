// Code generated by go-swagger; DO NOT EDIT.

package isv_manager

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetVendorVerifyInfoParams creates a new GetVendorVerifyInfoParams object
// with the default values initialized.
func NewGetVendorVerifyInfoParams() *GetVendorVerifyInfoParams {
	var ()
	return &GetVendorVerifyInfoParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetVendorVerifyInfoParamsWithTimeout creates a new GetVendorVerifyInfoParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetVendorVerifyInfoParamsWithTimeout(timeout time.Duration) *GetVendorVerifyInfoParams {
	var ()
	return &GetVendorVerifyInfoParams{

		timeout: timeout,
	}
}

// NewGetVendorVerifyInfoParamsWithContext creates a new GetVendorVerifyInfoParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetVendorVerifyInfoParamsWithContext(ctx context.Context) *GetVendorVerifyInfoParams {
	var ()
	return &GetVendorVerifyInfoParams{

		Context: ctx,
	}
}

// NewGetVendorVerifyInfoParamsWithHTTPClient creates a new GetVendorVerifyInfoParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetVendorVerifyInfoParamsWithHTTPClient(client *http.Client) *GetVendorVerifyInfoParams {
	var ()
	return &GetVendorVerifyInfoParams{
		HTTPClient: client,
	}
}

/*GetVendorVerifyInfoParams contains all the parameters to send to the API endpoint
for the get vendor verify info operation typically these are written to a http.Request
*/
type GetVendorVerifyInfoParams struct {

	/*UserID*/
	UserID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get vendor verify info params
func (o *GetVendorVerifyInfoParams) WithTimeout(timeout time.Duration) *GetVendorVerifyInfoParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get vendor verify info params
func (o *GetVendorVerifyInfoParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get vendor verify info params
func (o *GetVendorVerifyInfoParams) WithContext(ctx context.Context) *GetVendorVerifyInfoParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get vendor verify info params
func (o *GetVendorVerifyInfoParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get vendor verify info params
func (o *GetVendorVerifyInfoParams) WithHTTPClient(client *http.Client) *GetVendorVerifyInfoParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get vendor verify info params
func (o *GetVendorVerifyInfoParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithUserID adds the userID to the get vendor verify info params
func (o *GetVendorVerifyInfoParams) WithUserID(userID *string) *GetVendorVerifyInfoParams {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the get vendor verify info params
func (o *GetVendorVerifyInfoParams) SetUserID(userID *string) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *GetVendorVerifyInfoParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.UserID != nil {

		// query param user_id
		var qrUserID string
		if o.UserID != nil {
			qrUserID = *o.UserID
		}
		qUserID := qrUserID
		if qUserID != "" {
			if err := r.SetQueryParam("user_id", qUserID); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
