// Copyright 2018 The OpenPitrix Authors. All rights reserved.
// Use of this source code is governed by a Apache license
// that can be found in the LICENSE file.

syntax = "proto3";
package openpitrix;

// set go package name to pb
option go_package = "pb";

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "types.proto";

message GetAttachmentsRequest {
	repeated string attachment_id = 1;
	repeated string filename = 2;
	bool ignore_content = 3;
}
message GetAttachmentsResponse {
	map<string, Attachment> attachments = 1; // attachment_id => Attachment
}
enum AttachmentType {
	// directory
	archive = 0;
	// raw
	raw = 1;
	// image type
	jpg = 10;
	png = 11;
}
message Attachment {
	string attachment_id = 1;
	AttachmentType attachment_type = 2;
	map<string, bytes> attachment_content = 3; // filename => content
	google.protobuf.Timestamp create_time = 4;
}
message CreateAttachmentRequest {
//	string attachment_id = 1;
	AttachmentType attachment_type = 2;
	map<string, bytes> attachment_content = 3; // filename => content
}
message CreateAttachmentResponse {
	string attachment_id = 1;
	AttachmentType attachment_type = 2;
	repeated string filename = 3;
}
message AppendAttachmentRequest {
	string attachment_id = 1;
//	AttachmentType attachment_type = 2;
	map<string, bytes> attachment_content = 3; // filename => content
}
message AppendAttachmentResponse {
	string attachment_id = 1;
	AttachmentType attachment_type = 2;
	repeated string filename = 3;
}
message ReplaceAttachmentRequest {
	string attachment_id = 1;
	AttachmentType attachment_type = 2;
	map<string, bytes> attachment_content = 3; // filename => content
}
message ReplaceAttachmentResponse {
	string attachment_id = 1;
	AttachmentType attachment_type = 2;
	repeated string filename = 3;
}
message DeleteAttachmentsRequest {
	repeated string attachment_id = 1;
	repeated string filename = 2;
}
message DeleteAttachmentsResponse {
	repeated string attachment_id = 1;
	repeated string filename = 2;
}

service AttachmentManager {
	rpc CreateAttachment(CreateAttachmentRequest) returns (CreateAttachmentResponse);
	rpc AppendAttachment(AppendAttachmentRequest) returns (AppendAttachmentResponse);
	rpc ReplaceAttachment(ReplaceAttachmentRequest) returns (ReplaceAttachmentResponse);
	rpc GetAttachments(GetAttachmentsRequest) returns (GetAttachmentsResponse);
	rpc DeleteAttachments(DeleteAttachmentsRequest) returns (DeleteAttachmentsResponse);
}