// Copyright 2017 The OpenPitrix Authors. All rights reserved.
// Use of this source code is governed by a Apache license
// that can be found in the LICENSE file.

syntax = "proto2";

// OpenPitrix Cluster Service
//
// An open platform to package and deploy applications into multiple environment such as QingCloud, AWS, Kubernetes etc.
package openpitrix;

import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";

import "annotations.proto";

// ----------------------------------------------------------------------------
// base type
// ----------------------------------------------------------------------------

message Cluster {
	required string id = 1 [(validator.field) = {regex: "^cl-[a-zA-Z0-9]{8}$"}];
	optional string name = 2;
	optional string description = 3;
	optional string app_id = 4;
	optional string app_version = 5;
	optional string status = 6;
	optional string transition_status = 7;
	optional google.protobuf.Timestamp created = 8;
	optional google.protobuf.Timestamp last_modified = 9;
}

message Clusters {
	repeated Cluster items = 1;
}

message ClusterNode {
	required string id = 1 [(validator.field) = {regex: "^cln-[a-zA-Z0-9]{8}$"}];
	required string instance_id = 2;
	optional string name = 3;
	optional string description = 4;
	optional string cluster_id = 5;
	optional string private_ip = 6;
	optional string status = 7;
	optional string transition_status = 8;
	optional google.protobuf.Timestamp created = 9;
	optional google.protobuf.Timestamp last_modified = 10;
}

message ClusterNodes {
	repeated ClusterNode items = 1;
}

// ----------------------------------------------------------------------------
// rest api type
// ----------------------------------------------------------------------------

message ClusterId {
	required string id = 1 [(validator.field) = {regex: "^cl-[a-zA-Z0-9]{8}$"}];
}

message ClusterIds {
	required string ids = 1 [(validator.field) = {regex: "^(cl-[a-zA-Z0-9]{8},)*cl-[a-zA-Z0-9]{8}$"}];
}

message ClusterListRequest {
	optional int32 page_size = 1 [default = 10];
	optional int32 page_number = 2 [default = 1];
}

message ClusterListResponse {
	optional int32 total_items = 1;
	optional int32 total_pages = 2;
	optional int32 page_size = 3;
	optional int32 current_page = 4;

	repeated Cluster items = 5;
}

message ClusterNodeId {
	required string id = 1 [(validator.field) = {regex: "^cln-[a-zA-Z0-9]{8}$"}];
}

message ClusterNodeIds {
	required string ids = 1 [(validator.field) = {regex: "^(cln-[a-zA-Z0-9]{8},)*cln-[a-zA-Z0-9]{8}$"}];
}

message ClusterNodeListRequest {
	optional int32 page_size = 1 [default = 10];
	optional int32 page_number = 2 [default = 1];
}

message ClusterNodeListResponse {
	optional int32 total_items = 1;
	optional int32 total_pages = 2;
	optional int32 page_size = 3;
	optional int32 current_page = 4;

	repeated ClusterNode items = 5;
}

// ----------------------------------------------------------------------------
// cluster service
// ----------------------------------------------------------------------------

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
	info: {
		version: "0.0.1";
		contact: {
			name: "OpenPireix Project";
			url: "https://openpitrix.io";
		};
	};

	schemes: HTTP;

	consumes: "application/json";
	produces: "application/json";
};

service ClusterService {
	rpc GetClusters(ClusterIds) returns (Clusters) {
		option (google.api.http) = {
			get: "/v1/clusters/{ids}"
		};
	}

	rpc GetClusterList(ClusterListRequest) returns (ClusterListResponse) {
		option (google.api.http) = {
			get: "/v1/clusters"
		};
	}

	rpc CreateCluster(Cluster) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			post: "/v1/clusters"
			body: "*"
		};
	}

	rpc UpdateCluster(Cluster) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			post: "/v1/clusters/{id}"
			body: "*"
		};
	}

	rpc DeleteClusters(ClusterIds) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/v1/clusters/{ids}"
		};
	}

	rpc GetClusterNodes(ClusterNodeIds) returns (ClusterNodes) {
		option (google.api.http) = {
			get: "/v1/cluster_nodes/{ids}"
		};
	}

	rpc GetClusterNodeList(ClusterNodeListRequest) returns (ClusterNodeListResponse) {
		option (google.api.http) = {
			get: "/v1/cluster_nodes"
		};
	}

	rpc CreateClusterNodes(ClusterNodes) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			post: "/v1/cluster_nodes"
			body: "*"
		};
	}

	rpc UpdateClusterNode(ClusterNode) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			post: "/v1/cluster_nodes/{id}"
			body: "*"
		};
	}

	rpc DeleteClusterNodes(ClusterNodeIds) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/v1/cluster_nodes/{ids}"
		};
	}
}

// ----------------------------------------------------------------------------
// END
// ----------------------------------------------------------------------------
