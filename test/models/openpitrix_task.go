// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// OpenpitrixTask openpitrix task
// swagger:model openpitrixTask
type OpenpitrixTask struct {

	// create time
	CreateTime strfmt.DateTime `json:"create_time,omitempty"`

	// directive
	Directive string `json:"directive,omitempty"`

	// error code
	ErrorCode int64 `json:"error_code,omitempty"`

	// executor
	Executor string `json:"executor,omitempty"`

	// failure allowed
	FailureAllowed bool `json:"failure_allowed,omitempty"`

	// job id
	JobID string `json:"job_id,omitempty"`

	// node id
	NodeID string `json:"node_id,omitempty"`

	// owner path
	OwnerPath string `json:"owner_path,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// status time
	StatusTime strfmt.DateTime `json:"status_time,omitempty"`

	// target
	Target string `json:"target,omitempty"`

	// task action
	TaskAction string `json:"task_action,omitempty"`

	// task id
	TaskID string `json:"task_id,omitempty"`
}

// Validate validates this openpitrix task
func (m *OpenpitrixTask) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *OpenpitrixTask) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OpenpitrixTask) UnmarshalBinary(b []byte) error {
	var res OpenpitrixTask
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
