// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// OpenpitrixTokenRequest openpitrix token request
// swagger:model openpitrixTokenRequest
type OpenpitrixTokenRequest struct {

	// required, client id
	ClientID string `json:"client_id,omitempty"`

	// required, used for validate client credentials
	ClientSecret string `json:"client_secret,omitempty"`

	// required, type of client request verification.eg.[client_credentials or password or refresh_token]
	GrantType string `json:"grant_type,omitempty"`

	// required or not depend on grant_type, user's password
	Password string `json:"password,omitempty"`

	// required or not depend on grant_type, refresh token to check whether token expired
	RefreshToken string `json:"refresh_token,omitempty"`

	// scope
	Scope string `json:"scope,omitempty"`

	// required or not depend on grant_type, user's name
	Username string `json:"username,omitempty"`
}

// Validate validates this openpitrix token request
func (m *OpenpitrixTokenRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *OpenpitrixTokenRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OpenpitrixTokenRequest) UnmarshalBinary(b []byte) error {
	var res OpenpitrixTokenRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
