// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stream.proto

package pb

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateStreamRequest struct {
	UserId               *wrappers.StringValue `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CreateStreamRequest) Reset()         { *m = CreateStreamRequest{} }
func (m *CreateStreamRequest) String() string { return proto.CompactTextString(m) }
func (*CreateStreamRequest) ProtoMessage()    {}
func (*CreateStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb17ef3f514bfe54, []int{0}
}

func (m *CreateStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateStreamRequest.Unmarshal(m, b)
}
func (m *CreateStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateStreamRequest.Marshal(b, m, deterministic)
}
func (m *CreateStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateStreamRequest.Merge(m, src)
}
func (m *CreateStreamRequest) XXX_Size() int {
	return xxx_messageInfo_CreateStreamRequest.Size(m)
}
func (m *CreateStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateStreamRequest proto.InternalMessageInfo

func (m *CreateStreamRequest) GetUserId() *wrappers.StringValue {
	if m != nil {
		return m.UserId
	}
	return nil
}

type CreateStreamResponse struct {
	UserID               *wrappers.StringValue `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Message              *wrappers.BytesValue  `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CreateStreamResponse) Reset()         { *m = CreateStreamResponse{} }
func (m *CreateStreamResponse) String() string { return proto.CompactTextString(m) }
func (*CreateStreamResponse) ProtoMessage()    {}
func (*CreateStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb17ef3f514bfe54, []int{1}
}

func (m *CreateStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateStreamResponse.Unmarshal(m, b)
}
func (m *CreateStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateStreamResponse.Marshal(b, m, deterministic)
}
func (m *CreateStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateStreamResponse.Merge(m, src)
}
func (m *CreateStreamResponse) XXX_Size() int {
	return xxx_messageInfo_CreateStreamResponse.Size(m)
}
func (m *CreateStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateStreamResponse proto.InternalMessageInfo

func (m *CreateStreamResponse) GetUserID() *wrappers.StringValue {
	if m != nil {
		return m.UserID
	}
	return nil
}

func (m *CreateStreamResponse) GetMessage() *wrappers.BytesValue {
	if m != nil {
		return m.Message
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateStreamRequest)(nil), "openpitrix.CreateStreamRequest")
	proto.RegisterType((*CreateStreamResponse)(nil), "openpitrix.CreateStreamResponse")
}

func init() { proto.RegisterFile("stream.proto", fileDescriptor_bb17ef3f514bfe54) }

var fileDescriptor_bb17ef3f514bfe54 = []byte{
	// 263 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0x41, 0x4b, 0x03, 0x31,
	0x10, 0x85, 0xdd, 0x22, 0x15, 0xa2, 0xa7, 0xd5, 0x43, 0x59, 0x8b, 0x96, 0x3d, 0x79, 0xb0, 0x59,
	0xa9, 0xfa, 0x07, 0x6a, 0x2f, 0x22, 0x5e, 0x5a, 0xf4, 0xa0, 0xa7, 0xac, 0x3e, 0x43, 0xa0, 0x26,
	0x71, 0x26, 0x6b, 0xf5, 0xec, 0x1f, 0x17, 0x92, 0x5d, 0x45, 0xaa, 0x07, 0x4f, 0x81, 0xbc, 0xef,
	0xbd, 0x79, 0x33, 0x62, 0x87, 0x03, 0x41, 0x3d, 0x4b, 0x4f, 0x2e, 0xb8, 0x5c, 0x38, 0x0f, 0xeb,
	0x4d, 0x20, 0xf3, 0x56, 0x1c, 0x68, 0xe7, 0xf4, 0x12, 0x55, 0x54, 0xea, 0xe6, 0xa9, 0x5a, 0x91,
	0xf2, 0x1e, 0xc4, 0x89, 0x2d, 0x86, 0xad, 0xae, 0xbc, 0xa9, 0x94, 0xb5, 0x2e, 0xa8, 0x60, 0x9c,
	0xed, 0xd4, 0xe3, 0xf8, 0x3c, 0x8c, 0x35, 0xec, 0x98, 0x57, 0x4a, 0x6b, 0x50, 0xe5, 0x7c, 0x24,
	0xd6, 0xe9, 0xf2, 0x4a, 0xec, 0x5e, 0x10, 0x54, 0xc0, 0x22, 0xb6, 0x99, 0xe3, 0xa5, 0x01, 0x87,
	0xfc, 0x4c, 0xf4, 0x6f, 0x18, 0x74, 0xf9, 0x38, 0xc8, 0x46, 0xd9, 0xd1, 0xf6, 0x64, 0x28, 0xd3,
	0x4c, 0xd9, 0x75, 0x92, 0x8b, 0x40, 0xc6, 0xea, 0x5b, 0xb5, 0x6c, 0x30, 0x6f, 0xd9, 0xf2, 0x23,
	0x13, 0x7b, 0x3f, 0xd3, 0xd8, 0x3b, 0xcb, 0xf8, 0x8a, 0x9b, 0xfd, 0x23, 0x6e, 0x96, 0x9f, 0x8b,
	0xad, 0x6b, 0x30, 0x2b, 0x8d, 0x41, 0x2f, 0xda, 0xf6, 0xd7, 0x6c, 0xd3, 0xf7, 0x00, 0x4e, 0xae,
	0x8e, 0x9d, 0x40, 0xf4, 0xd3, 0xf8, 0xfc, 0x5e, 0xe4, 0x6d, 0x1d, 0xd0, 0x2b, 0xa8, 0xfd, 0x3d,
	0x94, 0xdf, 0xb7, 0x96, 0xbf, 0x2c, 0x5f, 0x8c, 0xfe, 0x06, 0xd2, 0x3e, 0xe5, 0xc6, 0x49, 0x36,
	0xdd, 0xbc, 0xeb, 0xf9, 0xba, 0xee, 0xc7, 0x2a, 0xa7, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x43,
	0x70, 0x0d, 0x70, 0xce, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StreamClient is the client API for Stream service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StreamClient interface {
	CreateServerStream(ctx context.Context, in *CreateStreamRequest, opts ...grpc.CallOption) (Stream_CreateServerStreamClient, error)
}

type streamClient struct {
	cc *grpc.ClientConn
}

func NewStreamClient(cc *grpc.ClientConn) StreamClient {
	return &streamClient{cc}
}

func (c *streamClient) CreateServerStream(ctx context.Context, in *CreateStreamRequest, opts ...grpc.CallOption) (Stream_CreateServerStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Stream_serviceDesc.Streams[0], "/openpitrix.Stream/CreateServerStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &streamCreateServerStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Stream_CreateServerStreamClient interface {
	Recv() (*CreateStreamResponse, error)
	grpc.ClientStream
}

type streamCreateServerStreamClient struct {
	grpc.ClientStream
}

func (x *streamCreateServerStreamClient) Recv() (*CreateStreamResponse, error) {
	m := new(CreateStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// StreamServer is the server API for Stream service.
type StreamServer interface {
	CreateServerStream(*CreateStreamRequest, Stream_CreateServerStreamServer) error
}

// UnimplementedStreamServer can be embedded to have forward compatible implementations.
type UnimplementedStreamServer struct {
}

func (*UnimplementedStreamServer) CreateServerStream(req *CreateStreamRequest, srv Stream_CreateServerStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method CreateServerStream not implemented")
}

func RegisterStreamServer(s *grpc.Server, srv StreamServer) {
	s.RegisterService(&_Stream_serviceDesc, srv)
}

func _Stream_CreateServerStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CreateStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StreamServer).CreateServerStream(m, &streamCreateServerStreamServer{stream})
}

type Stream_CreateServerStreamServer interface {
	Send(*CreateStreamResponse) error
	grpc.ServerStream
}

type streamCreateServerStreamServer struct {
	grpc.ServerStream
}

func (x *streamCreateServerStreamServer) Send(m *CreateStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Stream_serviceDesc = grpc.ServiceDesc{
	ServiceName: "openpitrix.Stream",
	HandlerType: (*StreamServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CreateServerStream",
			Handler:       _Stream_CreateServerStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "stream.proto",
}
