// Copyright 2017 The OpenPitrix Authors. All rights reserved.
// Use of this source code is governed by a Apache license
// that can be found in the LICENSE file.

syntax = "proto2";

// OpenPitrix App Runtime Service
//
// An open platform to package and deploy applications into multiple environment such as QingCloud, AWS, Kubernetes etc.
package openpitrix;

import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";

import "annotations.proto";

// ----------------------------------------------------------------------------
// base type
// ----------------------------------------------------------------------------

message AppRuntime {
	required string id = 1 [(validator.field) = {regex: "^rt-[a-zA-Z0-9]{8}$"}];
	optional string name = 2;
	optional string description = 3;
	optional string url = 4;
	optional google.protobuf.Timestamp created = 5;
	optional google.protobuf.Timestamp last_modified = 6;
}

message AppRuntimeLabel {
	required string app_runtime_id = 1 [(validator.field) = {regex: "^rt-[a-zA-Z0-9]{8}$"}];
	required string label_key = 2;
	required string label_value = 3;
}

// ----------------------------------------------------------------------------
// rest api type
// ----------------------------------------------------------------------------

message AppRuntimeId {
	required string id = 1 [(validator.field) = {regex: "^rt-[a-zA-Z0-9]{8}$"}];
}

message AppRuntimeListRequest {
	optional int32 page_size = 1 [default = 10];
	optional int32 page_number = 2 [default = 1];
}
message AppRuntimeListResponse {
	optional int32 total_items = 1;
	optional int32 total_pages = 2;
	optional int32 page_size = 3;
	optional int32 current_page = 4;

	repeated AppRuntime items = 5;
}

// ----------------------------------------------------------------------------
// app runtime service
// ----------------------------------------------------------------------------

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
	info: {
		version: "0.0.1";
		contact: {
			name: "OpenPireix Project";
			url: "https://openpitrix.io";
		};
	};

	schemes: HTTP;

	consumes: "application/json";
	produces: "application/json";
};

service AppRuntimeService {
	rpc GetAppRuntime(AppRuntimeId) returns (AppRuntime) {
		option (google.api.http) = {
			get: "/v1/appruntimes/{id}"
		};
	}

	// Returns a list containing all app runtimes.
	rpc GetAppRuntimeList(AppRuntimeListRequest) returns (AppRuntimeListResponse) {
		option (google.api.http) = {
			get: "/v1/appruntimes"
		};
	}

	rpc CreateAppRuntime(AppRuntime) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			post: "/v1/appruntimes"
			body: "*"
		};
	}
	rpc UpdateAppRuntime(AppRuntime) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			post: "/v1/appruntimes/{id}"
			body: "*"
		};
	}
	rpc DeleteAppRuntime(AppRuntimeId) returns (google.protobuf.Empty) {
		option (google.api.http) = {
			delete: "/v1/appruntimes/{id}"
		};
	}
}


// ----------------------------------------------------------------------------
// Plugin
// ----------------------------------------------------------------------------

message AppRuntimePluginInfo {
	required string name = 1;
	required string description = 2;

	required string host  = 3;
	required int32 port = 4;
}

service AppRuntimePluginManagerService {
	rpc RegisterPluginService(AppRuntimePluginInfo) returns (google.protobuf.Empty);
}

service AppRuntimePluginService {
	rpc CreateCluster(AppRuntimePluginInput) returns (AppRuntimePluginOutput);
	rpc StopClusters(AppRuntimePluginInput) returns (AppRuntimePluginOutput);
	rpc StartClusters(AppRuntimePluginInput) returns (AppRuntimePluginOutput);
	rpc DeleteClusters(AppRuntimePluginInput) returns (AppRuntimePluginOutput);
	rpc RecoverClusters(AppRuntimePluginInput) returns (AppRuntimePluginOutput);
	rpc CeaseClusters(AppRuntimePluginInput) returns (AppRuntimePluginOutput);
}

message AppRuntimePluginInput {
	optional string app_conf = 1;
	optional string cluster_ids = 2;
	optional bool should_wait = 3;
	repeated string args = 4;
}
message AppRuntimePluginOutput {
	optional int32 err_code = 1;
	optional string err_text = 2;

	optional string cluster_id = 3;
}

// ----------------------------------------------------------------------------
// END
// ----------------------------------------------------------------------------
