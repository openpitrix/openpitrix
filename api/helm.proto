// Copyright 2018 The OpenPitrix Authors. All rights reserved.
// Use of this source code is governed by a Apache license
// that can be found in the LICENSE file.

syntax = "proto3";
package openpitrix;


// set go package name to pb
option go_package = "pb";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";


message Release{
    google.protobuf.StringValue release_name = 1;
    google.protobuf.Int32Value version = 2;
    google.protobuf.StringValue namespace = 3;
    google.protobuf.StringValue status = 4;
    google.protobuf.StringValue description = 5;
    google.protobuf.Timestamp first_deployed_time = 6;
    google.protobuf.Timestamp last_deployed_time = 7;
    google.protobuf.Timestamp deleted_time = 8;
}

message ListReleasesRequest{
    google.protobuf.StringValue runtime_id = 1;
    google.protobuf.StringValue release_name = 2;
    google.protobuf.StringValue namespace = 3;
    google.protobuf.StringValue status = 4;
    uint32 limit = 5;
    uint32 offset = 6;
}

message ListReleaseResponse{
    uint32 total_count = 1;
    repeated Release release_set = 2;
}

message DescribeReleaseRequest{
    google.protobuf.StringValue release_name = 1;
    google.protobuf.StringValue status = 2;
    google.protobuf.StringValue runtime_id = 3;
}

message DescribeReleaseResponse{
    map<string,string> workload = 1;
}

message CreateReleaseRequest{
    // required, id of app to run in cluster
    google.protobuf.StringValue app_id = 1;
    // required, id of app version
    google.protobuf.StringValue version_id = 2;
    // required, id of runtime
    google.protobuf.StringValue runtime_id = 3;
    // release name
    google.protobuf.StringValue release_name = 4;
    // namespace
    google.protobuf.StringValue namespace = 5;
    // custom value
    google.protobuf.StringValue values = 6;
}

message CreateReleaseResponse {
    google.protobuf.StringValue release_name = 1;
}

message UpgradeReleaseRequest{
    google.protobuf.StringValue runtime_id = 1;
    google.protobuf.StringValue release_name = 2;
    google.protobuf.StringValue version_id = 3;
}

message UpgradeReleaseResponse{
    google.protobuf.StringValue release_name = 1;
}

message RollbackReleaseRequest{
    google.protobuf.StringValue runtime_id = 1;
    google.protobuf.StringValue release_name = 2;
    google.protobuf.Int32Value version = 3;
}

message RollbackReleaseResponse{
    google.protobuf.StringValue release_name = 1;
    google.protobuf.Int32Value version = 2;
}

message DeleteReleaseRequest{
    google.protobuf.StringValue runtime_id = 1;
    google.protobuf.StringValue release_name = 2;
    google.protobuf.BoolValue purge = 3;
}

message DeleteReleaseResponse{
    google.protobuf.StringValue release_name = 1;
}

service ReleaseManager{
    rpc ListReleases(ListReleasesRequest) returns (ListReleaseResponse){
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
        summary: "List releases"
            };
            option (google.api.http) = {
                get: "/v1/releases"
            };
    }
    rpc DescribeRelease(DescribeReleaseRequest) returns (DescribeReleaseResponse){
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
        summary: "Describe release"
            };
        option (google.api.http) = {
                get: "/v1/release"
            };
    }
    rpc CreateRelease(CreateReleaseRequest) returns (CreateReleaseResponse) {
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "Create Release"
		};
        option (google.api.http) = {
			put: "/v1/releases"
			body: "*"
		};
    }

    rpc UpgradeRelease(UpgradeReleaseRequest) returns (UpgradeReleaseResponse){
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "Upgrade Release"
		};
        option (google.api.http) = {
			patch: "/v1/releases"
			body: "*"
		};
    }

    rpc RollbackRelease(RollbackReleaseRequest) returns (RollbackReleaseResponse){
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "Rollback Release"
		};
        option (google.api.http) = {
			post: "/v1/releases"
			body: "*"
		};
    }

    rpc DeleteRelease(DeleteReleaseRequest) returns (DeleteReleaseResponse){
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "Delete Release"
		};
        option (google.api.http) = {
			delete: "/v1/releases"
			body: "*"
		};
    }
}


