
# [START OpenPitrix-api]
apiVersion: v1
kind: Service
metadata:
  name: openpitrix-api
  namespace: default
  labels:
    app: openpitrix
spec:
  selector:
    app: openpitrix
    service: api
  ports:
  - name: http
    protocol: TCP
    port: 9100
    targetPort: 9100
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: openpitrix-api
  namespace: default
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: openpitrix
        service: api 
    spec:
      containers:
      - name: openpitrix-api
        image: openpitrix/openpitrix-dev
        command: ["openpitrix"]
        args: ["api"]
        ports:
        - containerPort: 9100
        readinessProbe:
          httpGet:
            path: /
            port: 9100
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 2
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 500m
            memory: 500Mi
# [END OpenPitrix-api]
---
# [START OpenPitrix-app]
apiVersion: v1
kind: Service
metadata:
  name: openpitrix-app
  namespace: default
  labels:
    app: openpitrix
spec:
  selector:
    app: openpitrix
    service: app
  ports:
  - name: http
    protocol: TCP
    port: 9100
    targetPort: 9100
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: openpitrix-app
  namespace: default
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: openpitrix
        service: app 
    spec:
      containers:
      - name: openpitrix-app
        image: openpitrix/openpitrix-dev
        command: ["openpitrix"]
        args: ["app"]
        ports:
        - containerPort: 9100
        readinessProbe:
          httpGet:
            path: /
            port: 9100
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 2
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 500m
            memory: 500Mi
# [END OpenPitrix-app]
---
# [START OpenPitrix-cluster]
apiVersion: v1
kind: Service
metadata:
  name: openpitrix-cluster
  namespace: default
  labels:
    app: openpitrix
spec:
  selector:
    app: openpitrix
    service: cluster
  ports:
  - name: http
    protocol: TCP
    port: 9100
    targetPort: 9100
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: openpitrix-cluster
  namespace: default
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: openpitrix
        service: cluster 
    spec:
      containers:
      - name: openpitrix-cluster
        image: openpitrix/openpitrix-dev
        command: ["openpitrix"]
        args: ["cluster"]
        ports:
        - containerPort: 9100
        readinessProbe:
          httpGet:
            path: /
            port: 9100
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 2
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 500m
            memory: 500Mi
# [END OpenPitrix-cluster]
---
# [START OpenPitrix-repo]
apiVersion: v1
kind: Service
metadata:
  name: openpitrix-repo
  namespace: default
  labels:
    app: openpitrix
spec:
  selector:
    app: openpitrix
    service: repo
  ports:
  - name: http
    protocol: TCP
    port: 9100
    targetPort: 9100
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: openpitrix-repo
  namespace: default
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: openpitrix
        service: repo 
    spec:
      containers:
      - name: openpitrix-repo
        image: openpitrix/openpitrix-dev
        command: ["openpitrix"]
        args: ["repo"]
        ports:
        - containerPort: 9100
        readinessProbe:
          httpGet:
            path: /
            port: 9100
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 2
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 500m
            memory: 500Mi
# [END OpenPitrix-repo]
---
# [START OpenPitrix-runtime]
apiVersion: v1
kind: Service
metadata:
  name: openpitrix-runtime
  namespace: default
  labels:
    app: openpitrix
spec:
  selector:
    app: openpitrix
    service: runtime
  ports:
  - name: http
    protocol: TCP
    port: 9100
    targetPort: 9100
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: openpitrix-runtime
  namespace: default
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: openpitrix
        service: runtime 
    spec:
      containers:
      - name: openpitrix-runtime
        image: openpitrix/openpitrix-dev
        command: ["openpitrix"]
        args: ["runtime"]
        ports:
        - containerPort: 9100
        readinessProbe:
          httpGet:
            path: /
            port: 9100
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 2
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 500m
            memory: 500Mi
# [END OpenPitrix-runtime]
---
# [START OpenPitrix-mysql]
apiVersion: v1
kind: Service
metadata:
  name: openpitrix-mysql
  namespace: default
  labels:
    app: openpitrix
spec:
  selector:
    app: openpitrix
    tier: mysql
  ports:
  - name: tcp
    protocol: TCP
    port: 3306
    targetPort: 3306
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  namespace: default
  labels:
    app: openpitrix
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: openpitrix-mysql
  namespace: default
  labels:
    app: openpitrix
spec:
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: openpitrix
        tier: mysql
    spec:
      containers:
      - image: mysql:5.6
        name: mysql
        env:
          # $ kubectl create secret generic mysql-pass --from-file=password.txt
          # make sure password.txt does not have a trailing newline
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password.txt
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
# [END OpenPitrix-mysql]