// Copyright 2018 The OpenPitrix Authors. All rights reserved.
// Use of this source code is governed by a Apache license
// that can be found in the LICENSE file.

syntax = "proto3";
package openpitrix;

// set go package name to pb
option go_package = "pb";

import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
	info: {
		title: "OpenPitrix Project";
		version: "0.0.1";
		contact: {
			name: "OpenPitrix Project";
			url: "https://openpitrix.io";
		};
	};
	schemes: HTTP;
	consumes: "application/json";
	produces: "application/json";
};


message HandleSubtaskRequest {
	google.protobuf.StringValue subtask_id = 1;
	google.protobuf.StringValue subtask_action = 2;
	google.protobuf.StringValue directive = 3;
}

message HandleSubtaskResponse {
	google.protobuf.StringValue subtask_id = 1;
}

message GetSubtaskStatusRequest {
	repeated string subtask_id = 1;
}

message SubtaskStatus {
	google.protobuf.StringValue subtask_id = 1;
	google.protobuf.StringValue status = 2;
}

message GetSubtaskStatusResponse {
	uint32 total_count = 1;
	repeated SubtaskStatus subtask_status_set = 2;
}

service PilotService {
	rpc HandleSubtask (HandleSubtaskRequest) returns (HandleSubtaskResponse);
	rpc GetSubtaskStatus (GetSubtaskStatusRequest) returns (GetSubtaskStatusResponse) {
		option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
			summary: "get subtask status"
		};
		option (google.api.http) = {
			get: "/v1/pilots"
		};
	}
}

service PilotServiceForFrontgate {
	rpc Channel (stream google.protobuf.BytesValue) returns (stream google.protobuf.BytesValue);
}
